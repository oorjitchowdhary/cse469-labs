# Reading C:/intelFPGA/17.0/modelsim_ase/tcl/vsim/pref.tcl
do runlab.do
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:01 on May 19,2025
# vlog -reportprogress 300 ./gates/and_64bit.sv 
# -- Compiling module and_64bit
# 
# Top level modules:
# 	and_64bit
# End time: 23:13:01 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:01 on May 19,2025
# vlog -reportprogress 300 ./gates/not_64bit.sv 
# -- Compiling module not_64bit
# 
# Top level modules:
# 	not_64bit
# End time: 23:13:01 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:01 on May 19,2025
# vlog -reportprogress 300 ./gates/or_64bit.sv 
# -- Compiling module or_64bit
# 
# Top level modules:
# 	or_64bit
# End time: 23:13:02 on May 19,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:02 on May 19,2025
# vlog -reportprogress 300 ./gates/xor_64bit.sv 
# -- Compiling module xor_64bit
# 
# Top level modules:
# 	xor_64bit
# End time: 23:13:02 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:02 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux2_1.sv 
# -- Compiling module mux2_1
# -- Compiling module mux2_1_testbench
# 
# Top level modules:
# 	mux2_1_testbench
# End time: 23:13:02 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:02 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux2_1_5bit.sv 
# -- Compiling module mux2_1_5bit
# 
# Top level modules:
# 	mux2_1_5bit
# End time: 23:13:02 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:02 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux2_1_64bit.sv 
# -- Compiling module mux2_1_64bit
# 
# Top level modules:
# 	mux2_1_64bit
# End time: 23:13:02 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:02 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux4_1.sv 
# -- Compiling module mux4_1
# -- Compiling module mux4_1_testbench
# 
# Top level modules:
# 	mux4_1_testbench
# End time: 23:13:02 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:02 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux4_1_64bit.sv 
# -- Compiling module mux4_1_64bit
# 
# Top level modules:
# 	mux4_1_64bit
# End time: 23:13:02 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:02 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux8_1.sv 
# -- Compiling module mux8_1
# -- Compiling module mux8_1_testbench
# 
# Top level modules:
# 	mux8_1_testbench
# End time: 23:13:02 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:02 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux16_1.sv 
# -- Compiling module mux16_1
# -- Compiling module mux16_1_testbench
# 
# Top level modules:
# 	mux16_1_testbench
# End time: 23:13:02 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:02 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux32_1.sv 
# -- Compiling module mux32_1
# -- Compiling module mux32_1_testbench
# 
# Top level modules:
# 	mux32_1_testbench
# End time: 23:13:02 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:02 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux32_1_64bit.sv 
# -- Compiling module mux32_1_64bit
# 
# Top level modules:
# 	mux32_1_64bit
# End time: 23:13:02 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:02 on May 19,2025
# vlog -reportprogress 300 ./decoders/decoder_3to8.sv 
# -- Compiling module decoder_3to8
# 
# Top level modules:
# 	decoder_3to8
# End time: 23:13:02 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:02 on May 19,2025
# vlog -reportprogress 300 ./decoders/decoder_5to32.sv 
# -- Compiling module decoder_5to32
# 
# Top level modules:
# 	decoder_5to32
# End time: 23:13:02 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:02 on May 19,2025
# vlog -reportprogress 300 ./utils/dff.sv 
# -- Compiling module D_FF
# 
# Top level modules:
# 	D_FF
# End time: 23:13:02 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:02 on May 19,2025
# vlog -reportprogress 300 ./utils/dff_en.sv 
# -- Compiling module D_FF_en
# 
# Top level modules:
# 	D_FF_en
# End time: 23:13:02 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:02 on May 19,2025
# vlog -reportprogress 300 ./register_64bit.sv 
# -- Compiling module register_64bit
# 
# Top level modules:
# 	register_64bit
# End time: 23:13:02 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:02 on May 19,2025
# vlog -reportprogress 300 ./regfile.sv 
# -- Compiling module regfile
# 
# Top level modules:
# 	regfile
# End time: 23:13:02 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:03 on May 19,2025
# vlog -reportprogress 300 ./adders/adder.sv 
# -- Compiling module adder
# 
# Top level modules:
# 	adder
# End time: 23:13:03 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:03 on May 19,2025
# vlog -reportprogress 300 ./adders/adder_32bit.sv 
# -- Compiling module adder_32bit
# 
# Top level modules:
# 	adder_32bit
# End time: 23:13:03 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:03 on May 19,2025
# vlog -reportprogress 300 ./adders/adder_64bit.sv 
# -- Compiling module adder_64bit
# 
# Top level modules:
# 	adder_64bit
# End time: 23:13:03 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:03 on May 19,2025
# vlog -reportprogress 300 ./subtractor_64bit.sv 
# -- Compiling module subtractor_64bit
# 
# Top level modules:
# 	subtractor_64bit
# End time: 23:13:03 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:03 on May 19,2025
# vlog -reportprogress 300 ./utils/immediate_extenders.sv 
# -- Compiling module buf1
# -- Compiling module zero_extender_itype
# -- Compiling module sign_extender_dtype
# -- Compiling module sign_extender_btype
# -- Compiling module sign_extender_cbtype
# 
# Top level modules:
# 	zero_extender_itype
# 	sign_extender_dtype
# 	sign_extender_btype
# 	sign_extender_cbtype
# End time: 23:13:03 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:03 on May 19,2025
# vlog -reportprogress 300 ./utils/left_shifter.sv 
# -- Compiling module left_shifter_2bits
# 
# Top level modules:
# 	left_shifter_2bits
# End time: 23:13:03 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:03 on May 19,2025
# vlog -reportprogress 300 ./utils/zero_64bits.sv 
# -- Compiling module zero_64bits
# 
# Top level modules:
# 	zero_64bits
# End time: 23:13:03 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:03 on May 19,2025
# vlog -reportprogress 300 ./alu.sv 
# -- Compiling module alu
# 
# Top level modules:
# 	alu
# End time: 23:13:03 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:03 on May 19,2025
# vlog -reportprogress 300 ./alustim.sv 
# -- Compiling module alustim
# 
# Top level modules:
# 	alustim
# End time: 23:13:03 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:03 on May 19,2025
# vlog -reportprogress 300 ./datamem.sv 
# -- Compiling module datamem
# -- Compiling module datamem_testbench
# 
# Top level modules:
# 	datamem_testbench
# End time: 23:13:03 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:03 on May 19,2025
# vlog -reportprogress 300 ./instructmem.sv 
# -- Compiling module instructmem
# -- Compiling module instructmem_testbench
# 
# Top level modules:
# 	instructmem_testbench
# End time: 23:13:03 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:03 on May 19,2025
# vlog -reportprogress 300 ./program_counter.sv 
# -- Compiling module program_counter
# -- Compiling module tb_program_counter
# 
# Top level modules:
# 	tb_program_counter
# End time: 23:13:03 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:03 on May 19,2025
# vlog -reportprogress 300 ./control_unit.sv 
# -- Compiling module control_unit
# 
# Top level modules:
# 	control_unit
# End time: 23:13:03 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:03 on May 19,2025
# vlog -reportprogress 300 ./cpu.sv 
# -- Compiling module cpu
# -- Compiling module cpustim
# 
# Top level modules:
# 	cpustim
# End time: 23:13:03 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -voptargs=""+acc"" -t 1ps -lib work cpustim 
# Start time: 23:13:03 on May 19,2025
# Loading sv_std.std
# Loading work.cpustim
# Loading work.cpu
# Loading work.program_counter
# Loading work.adder_64bit
# Loading work.adder
# Loading work.mux4_1_64bit
# Loading work.instructmem
# Loading work.sign_extender_btype
# Loading work.sign_extender_cbtype
# Loading work.left_shifter_2bits
# Loading work.control_unit
# Loading work.mux2_1_5bit
# Loading work.regfile
# Loading work.decoder_5to32
# Loading work.and_64bit
# Loading work.mux32_1_64bit
# Loading work.zero_64bits
# Loading work.zero_extender_itype
# Loading work.sign_extender_dtype
# Loading work.mux2_1_64bit
# Loading work.alu
# Loading work.decoder_3to8
# Loading work.subtractor_64bit
# Loading work.not_64bit
# Loading work.or_64bit
# Loading work.xor_64bit
# Loading work.datamem
# Loading work.mux4_1
# Loading work.mux2_1
# Loading work.D_FF
# Loading work.buf1
# Loading work.mux32_1
# Loading work.mux16_1
# Loading work.mux8_1
# Loading work.register_64bit
# ** Warning: Design size of 9033 instances exceeds ModelSim - Intel FPGA Starter Edition recommended capacity.
# This may because you are loading cell libraries which are not recommended with
# the ModelSim - Intel FPGA Edition. Expect performance to be adversely affected.
# .main_pane.wave.interior.cs.body.pw.wf
# .main_pane.structure.interior.cs.body.struct
# .main_pane.objects.interior.cs.body.tree
# Running benchmark: ./benchmarks/test04_LdurStur.arm
# [MEM ACCESS] Addr = x, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# [MEM ACCESS] Addr = 1, Xfer = 8
# [MEM ACCESS] Addr = 2, Xfer = 8
# [MEM ACCESS] Addr = 3, Xfer = 8
# [MEM ACCESS] Addr = 8, Xfer = 8
# [MEM ACCESS] Addr = 11, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# ** Error: Assertion error.
#    Time: 26 ns  Scope: cpustim.DUT.dmem File: ./datamem.sv Line: 37
# [MEM ACCESS] Addr = X, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# ** Error: Assertion error.
#    Time: 30 ns  Scope: cpustim.DUT.dmem File: ./datamem.sv Line: 37
# [MEM ACCESS] Addr = X, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# ** Error: Assertion error.
#    Time: 34 ns  Scope: cpustim.DUT.dmem File: ./datamem.sv Line: 37
# [MEM ACCESS] Addr = X, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# ** Error: Assertion error.
#    Time: 38 ns  Scope: cpustim.DUT.dmem File: ./datamem.sv Line: 37
# [MEM ACCESS] Addr = X, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# ** Error: Assertion error.
#    Time: 42 ns  Scope: cpustim.DUT.dmem File: ./datamem.sv Line: 37
# [MEM ACCESS] Addr = X, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# ** Error: Assertion error.
#    Time: 46 ns  Scope: cpustim.DUT.dmem File: ./datamem.sv Line: 37
# [MEM ACCESS] Addr = 0, Xfer = 8
# [MEM ACCESS] Addr = 3, Xfer = 8
# [MEM ACCESS] Addr = 0, Xfer = 8
# [MEM ACCESS] Addr = 1, Xfer = 8
# [MEM ACCESS] Addr = 3, Xfer = 8
# [MEM ACCESS] Addr = 2, Xfer = 8
# [MEM ACCESS] Addr = 0, Xfer = 8
# [MEM ACCESS] Addr = 1, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# [MEM ACCESS] Addr = X, Xfer = 8
# [MEM ACCESS] Addr = x, Xfer = 8
# ** Note: $stop    : ./cpu.sv(182)
#    Time: 82 ns  Iteration: 1  Instance: /cpustim
# Break in Module cpustim at ./cpu.sv line 182
do runlab.do
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:49 on May 19,2025
# vlog -reportprogress 300 ./gates/and_64bit.sv 
# -- Compiling module and_64bit
# 
# Top level modules:
# 	and_64bit
# End time: 23:13:49 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:49 on May 19,2025
# vlog -reportprogress 300 ./gates/not_64bit.sv 
# -- Compiling module not_64bit
# 
# Top level modules:
# 	not_64bit
# End time: 23:13:49 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:50 on May 19,2025
# vlog -reportprogress 300 ./gates/or_64bit.sv 
# -- Compiling module or_64bit
# 
# Top level modules:
# 	or_64bit
# End time: 23:13:50 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:50 on May 19,2025
# vlog -reportprogress 300 ./gates/xor_64bit.sv 
# -- Compiling module xor_64bit
# 
# Top level modules:
# 	xor_64bit
# End time: 23:13:50 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:50 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux2_1.sv 
# -- Compiling module mux2_1
# -- Compiling module mux2_1_testbench
# 
# Top level modules:
# 	mux2_1_testbench
# End time: 23:13:50 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:50 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux2_1_5bit.sv 
# -- Compiling module mux2_1_5bit
# 
# Top level modules:
# 	mux2_1_5bit
# End time: 23:13:50 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:50 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux2_1_64bit.sv 
# -- Compiling module mux2_1_64bit
# 
# Top level modules:
# 	mux2_1_64bit
# End time: 23:13:50 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:50 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux4_1.sv 
# -- Compiling module mux4_1
# -- Compiling module mux4_1_testbench
# 
# Top level modules:
# 	mux4_1_testbench
# End time: 23:13:50 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:50 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux4_1_64bit.sv 
# -- Compiling module mux4_1_64bit
# 
# Top level modules:
# 	mux4_1_64bit
# End time: 23:13:50 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:50 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux8_1.sv 
# -- Compiling module mux8_1
# -- Compiling module mux8_1_testbench
# 
# Top level modules:
# 	mux8_1_testbench
# End time: 23:13:50 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:50 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux16_1.sv 
# -- Compiling module mux16_1
# -- Compiling module mux16_1_testbench
# 
# Top level modules:
# 	mux16_1_testbench
# End time: 23:13:50 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:50 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux32_1.sv 
# -- Compiling module mux32_1
# -- Compiling module mux32_1_testbench
# 
# Top level modules:
# 	mux32_1_testbench
# End time: 23:13:50 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:50 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux32_1_64bit.sv 
# -- Compiling module mux32_1_64bit
# 
# Top level modules:
# 	mux32_1_64bit
# End time: 23:13:50 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:50 on May 19,2025
# vlog -reportprogress 300 ./decoders/decoder_3to8.sv 
# -- Compiling module decoder_3to8
# 
# Top level modules:
# 	decoder_3to8
# End time: 23:13:50 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:50 on May 19,2025
# vlog -reportprogress 300 ./decoders/decoder_5to32.sv 
# -- Compiling module decoder_5to32
# 
# Top level modules:
# 	decoder_5to32
# End time: 23:13:50 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:50 on May 19,2025
# vlog -reportprogress 300 ./utils/dff.sv 
# -- Compiling module D_FF
# 
# Top level modules:
# 	D_FF
# End time: 23:13:50 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:50 on May 19,2025
# vlog -reportprogress 300 ./utils/dff_en.sv 
# -- Compiling module D_FF_en
# 
# Top level modules:
# 	D_FF_en
# End time: 23:13:50 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:50 on May 19,2025
# vlog -reportprogress 300 ./register_64bit.sv 
# -- Compiling module register_64bit
# 
# Top level modules:
# 	register_64bit
# End time: 23:13:50 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:51 on May 19,2025
# vlog -reportprogress 300 ./regfile.sv 
# -- Compiling module regfile
# 
# Top level modules:
# 	regfile
# End time: 23:13:51 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:51 on May 19,2025
# vlog -reportprogress 300 ./adders/adder.sv 
# -- Compiling module adder
# 
# Top level modules:
# 	adder
# End time: 23:13:51 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:51 on May 19,2025
# vlog -reportprogress 300 ./adders/adder_32bit.sv 
# -- Compiling module adder_32bit
# 
# Top level modules:
# 	adder_32bit
# End time: 23:13:51 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:51 on May 19,2025
# vlog -reportprogress 300 ./adders/adder_64bit.sv 
# -- Compiling module adder_64bit
# 
# Top level modules:
# 	adder_64bit
# End time: 23:13:51 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:51 on May 19,2025
# vlog -reportprogress 300 ./subtractor_64bit.sv 
# -- Compiling module subtractor_64bit
# 
# Top level modules:
# 	subtractor_64bit
# End time: 23:13:51 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:51 on May 19,2025
# vlog -reportprogress 300 ./utils/immediate_extenders.sv 
# -- Compiling module buf1
# -- Compiling module zero_extender_itype
# -- Compiling module sign_extender_dtype
# -- Compiling module sign_extender_btype
# -- Compiling module sign_extender_cbtype
# 
# Top level modules:
# 	zero_extender_itype
# 	sign_extender_dtype
# 	sign_extender_btype
# 	sign_extender_cbtype
# End time: 23:13:51 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:51 on May 19,2025
# vlog -reportprogress 300 ./utils/left_shifter.sv 
# -- Compiling module left_shifter_2bits
# 
# Top level modules:
# 	left_shifter_2bits
# End time: 23:13:51 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:51 on May 19,2025
# vlog -reportprogress 300 ./utils/zero_64bits.sv 
# -- Compiling module zero_64bits
# 
# Top level modules:
# 	zero_64bits
# End time: 23:13:51 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:51 on May 19,2025
# vlog -reportprogress 300 ./alu.sv 
# -- Compiling module alu
# 
# Top level modules:
# 	alu
# End time: 23:13:51 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:51 on May 19,2025
# vlog -reportprogress 300 ./alustim.sv 
# -- Compiling module alustim
# 
# Top level modules:
# 	alustim
# End time: 23:13:51 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:51 on May 19,2025
# vlog -reportprogress 300 ./datamem.sv 
# -- Compiling module datamem
# -- Compiling module datamem_testbench
# 
# Top level modules:
# 	datamem_testbench
# End time: 23:13:51 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:51 on May 19,2025
# vlog -reportprogress 300 ./instructmem.sv 
# -- Compiling module instructmem
# -- Compiling module instructmem_testbench
# 
# Top level modules:
# 	instructmem_testbench
# End time: 23:13:51 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:51 on May 19,2025
# vlog -reportprogress 300 ./program_counter.sv 
# -- Compiling module program_counter
# -- Compiling module tb_program_counter
# 
# Top level modules:
# 	tb_program_counter
# End time: 23:13:51 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:51 on May 19,2025
# vlog -reportprogress 300 ./control_unit.sv 
# -- Compiling module control_unit
# 
# Top level modules:
# 	control_unit
# End time: 23:13:51 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:13:51 on May 19,2025
# vlog -reportprogress 300 ./cpu.sv 
# -- Compiling module cpu
# -- Compiling module cpustim
# 
# Top level modules:
# 	cpustim
# End time: 23:13:51 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 23:13:53 on May 19,2025, Elapsed time: 0:00:50
# Errors: 6, Warnings: 1
# vsim -voptargs=""+acc"" -t 1ps -lib work cpustim 
# Start time: 23:13:53 on May 19,2025
# Loading sv_std.std
# Loading work.cpustim
# Loading work.cpu
# Loading work.program_counter
# Loading work.adder_64bit
# Loading work.adder
# Loading work.mux4_1_64bit
# Loading work.instructmem
# Loading work.sign_extender_btype
# Loading work.sign_extender_cbtype
# Loading work.left_shifter_2bits
# Loading work.control_unit
# Loading work.mux2_1_5bit
# Loading work.regfile
# Loading work.decoder_5to32
# Loading work.and_64bit
# Loading work.mux32_1_64bit
# Loading work.zero_64bits
# Loading work.zero_extender_itype
# Loading work.sign_extender_dtype
# Loading work.mux2_1_64bit
# Loading work.alu
# Loading work.decoder_3to8
# Loading work.subtractor_64bit
# Loading work.not_64bit
# Loading work.or_64bit
# Loading work.xor_64bit
# Loading work.datamem
# Loading work.mux4_1
# Loading work.mux2_1
# Loading work.D_FF
# Loading work.buf1
# Loading work.mux32_1
# Loading work.mux16_1
# Loading work.mux8_1
# Loading work.register_64bit
# ** Warning: Design size of 9033 instances exceeds ModelSim - Intel FPGA Starter Edition recommended capacity.
# This may because you are loading cell libraries which are not recommended with
# the ModelSim - Intel FPGA Edition. Expect performance to be adversely affected.
# .main_pane.wave.interior.cs.body.pw.wf
# .main_pane.structure.interior.cs.body.struct
# .main_pane.objects.interior.cs.body.tree
# Running benchmark: ./benchmarks/test04_LdurStur.arm
# ** Error: Assertion error.
#    Time: 26 ns  Scope: cpustim.DUT.dmem File: ./datamem.sv Line: 37
# ** Error: Assertion error.
#    Time: 30 ns  Scope: cpustim.DUT.dmem File: ./datamem.sv Line: 37
# ** Error: Assertion error.
#    Time: 34 ns  Scope: cpustim.DUT.dmem File: ./datamem.sv Line: 37
# ** Error: Assertion error.
#    Time: 38 ns  Scope: cpustim.DUT.dmem File: ./datamem.sv Line: 37
# ** Error: Assertion error.
#    Time: 42 ns  Scope: cpustim.DUT.dmem File: ./datamem.sv Line: 37
# ** Error: Assertion error.
#    Time: 46 ns  Scope: cpustim.DUT.dmem File: ./datamem.sv Line: 37
# ** Note: $stop    : ./cpu.sv(182)
#    Time: 82 ns  Iteration: 1  Instance: /cpustim
# Break in Module cpustim at ./cpu.sv line 182
do runlab.do
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:16:59 on May 19,2025
# vlog -reportprogress 300 ./gates/and_64bit.sv 
# -- Compiling module and_64bit
# 
# Top level modules:
# 	and_64bit
# End time: 23:16:59 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:16:59 on May 19,2025
# vlog -reportprogress 300 ./gates/not_64bit.sv 
# -- Compiling module not_64bit
# 
# Top level modules:
# 	not_64bit
# End time: 23:16:59 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:16:59 on May 19,2025
# vlog -reportprogress 300 ./gates/or_64bit.sv 
# -- Compiling module or_64bit
# 
# Top level modules:
# 	or_64bit
# End time: 23:16:59 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:16:59 on May 19,2025
# vlog -reportprogress 300 ./gates/xor_64bit.sv 
# -- Compiling module xor_64bit
# 
# Top level modules:
# 	xor_64bit
# End time: 23:16:59 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:16:59 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux2_1.sv 
# -- Compiling module mux2_1
# -- Compiling module mux2_1_testbench
# 
# Top level modules:
# 	mux2_1_testbench
# End time: 23:16:59 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:16:59 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux2_1_5bit.sv 
# -- Compiling module mux2_1_5bit
# 
# Top level modules:
# 	mux2_1_5bit
# End time: 23:16:59 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:16:59 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux2_1_64bit.sv 
# -- Compiling module mux2_1_64bit
# 
# Top level modules:
# 	mux2_1_64bit
# End time: 23:16:59 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:16:59 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux4_1.sv 
# -- Compiling module mux4_1
# -- Compiling module mux4_1_testbench
# 
# Top level modules:
# 	mux4_1_testbench
# End time: 23:16:59 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:16:59 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux4_1_64bit.sv 
# -- Compiling module mux4_1_64bit
# 
# Top level modules:
# 	mux4_1_64bit
# End time: 23:16:59 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:16:59 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux8_1.sv 
# -- Compiling module mux8_1
# -- Compiling module mux8_1_testbench
# 
# Top level modules:
# 	mux8_1_testbench
# End time: 23:16:59 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:16:59 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux16_1.sv 
# -- Compiling module mux16_1
# -- Compiling module mux16_1_testbench
# 
# Top level modules:
# 	mux16_1_testbench
# End time: 23:16:59 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:16:59 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux32_1.sv 
# -- Compiling module mux32_1
# -- Compiling module mux32_1_testbench
# 
# Top level modules:
# 	mux32_1_testbench
# End time: 23:16:59 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:16:59 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux32_1_64bit.sv 
# -- Compiling module mux32_1_64bit
# 
# Top level modules:
# 	mux32_1_64bit
# End time: 23:17:00 on May 19,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:00 on May 19,2025
# vlog -reportprogress 300 ./decoders/decoder_3to8.sv 
# -- Compiling module decoder_3to8
# 
# Top level modules:
# 	decoder_3to8
# End time: 23:17:00 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:00 on May 19,2025
# vlog -reportprogress 300 ./decoders/decoder_5to32.sv 
# -- Compiling module decoder_5to32
# 
# Top level modules:
# 	decoder_5to32
# End time: 23:17:00 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:00 on May 19,2025
# vlog -reportprogress 300 ./utils/dff.sv 
# -- Compiling module D_FF
# 
# Top level modules:
# 	D_FF
# End time: 23:17:00 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:00 on May 19,2025
# vlog -reportprogress 300 ./utils/dff_en.sv 
# -- Compiling module D_FF_en
# 
# Top level modules:
# 	D_FF_en
# End time: 23:17:00 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:00 on May 19,2025
# vlog -reportprogress 300 ./register_64bit.sv 
# -- Compiling module register_64bit
# 
# Top level modules:
# 	register_64bit
# End time: 23:17:00 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:00 on May 19,2025
# vlog -reportprogress 300 ./regfile.sv 
# -- Compiling module regfile
# 
# Top level modules:
# 	regfile
# End time: 23:17:00 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:00 on May 19,2025
# vlog -reportprogress 300 ./adders/adder.sv 
# -- Compiling module adder
# 
# Top level modules:
# 	adder
# End time: 23:17:00 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:00 on May 19,2025
# vlog -reportprogress 300 ./adders/adder_32bit.sv 
# -- Compiling module adder_32bit
# 
# Top level modules:
# 	adder_32bit
# End time: 23:17:00 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:00 on May 19,2025
# vlog -reportprogress 300 ./adders/adder_64bit.sv 
# -- Compiling module adder_64bit
# 
# Top level modules:
# 	adder_64bit
# End time: 23:17:00 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:00 on May 19,2025
# vlog -reportprogress 300 ./subtractor_64bit.sv 
# -- Compiling module subtractor_64bit
# 
# Top level modules:
# 	subtractor_64bit
# End time: 23:17:00 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:00 on May 19,2025
# vlog -reportprogress 300 ./utils/immediate_extenders.sv 
# -- Compiling module buf1
# -- Compiling module zero_extender_itype
# -- Compiling module sign_extender_dtype
# -- Compiling module sign_extender_btype
# -- Compiling module sign_extender_cbtype
# 
# Top level modules:
# 	zero_extender_itype
# 	sign_extender_dtype
# 	sign_extender_btype
# 	sign_extender_cbtype
# End time: 23:17:00 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:00 on May 19,2025
# vlog -reportprogress 300 ./utils/left_shifter.sv 
# -- Compiling module left_shifter_2bits
# 
# Top level modules:
# 	left_shifter_2bits
# End time: 23:17:00 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:00 on May 19,2025
# vlog -reportprogress 300 ./utils/zero_64bits.sv 
# -- Compiling module zero_64bits
# 
# Top level modules:
# 	zero_64bits
# End time: 23:17:00 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:00 on May 19,2025
# vlog -reportprogress 300 ./alu.sv 
# -- Compiling module alu
# 
# Top level modules:
# 	alu
# End time: 23:17:00 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:00 on May 19,2025
# vlog -reportprogress 300 ./alustim.sv 
# -- Compiling module alustim
# 
# Top level modules:
# 	alustim
# End time: 23:17:00 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:00 on May 19,2025
# vlog -reportprogress 300 ./datamem.sv 
# -- Compiling module datamem
# -- Compiling module datamem_testbench
# 
# Top level modules:
# 	datamem_testbench
# End time: 23:17:01 on May 19,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:01 on May 19,2025
# vlog -reportprogress 300 ./instructmem.sv 
# -- Compiling module instructmem
# -- Compiling module instructmem_testbench
# 
# Top level modules:
# 	instructmem_testbench
# End time: 23:17:01 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:01 on May 19,2025
# vlog -reportprogress 300 ./program_counter.sv 
# -- Compiling module program_counter
# -- Compiling module tb_program_counter
# 
# Top level modules:
# 	tb_program_counter
# End time: 23:17:01 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:01 on May 19,2025
# vlog -reportprogress 300 ./control_unit.sv 
# -- Compiling module control_unit
# 
# Top level modules:
# 	control_unit
# End time: 23:17:01 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:01 on May 19,2025
# vlog -reportprogress 300 ./cpu.sv 
# -- Compiling module cpu
# -- Compiling module cpustim
# 
# Top level modules:
# 	cpustim
# End time: 23:17:01 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 23:17:06 on May 19,2025, Elapsed time: 0:03:13
# Errors: 6, Warnings: 1
# vsim -voptargs=""+acc"" -t 1ps -lib work cpustim 
# Start time: 23:17:06 on May 19,2025
# Loading sv_std.std
# Loading work.cpustim
# Loading work.cpu
# Loading work.program_counter
# Loading work.adder_64bit
# Loading work.adder
# Loading work.mux4_1_64bit
# Loading work.instructmem
# Loading work.sign_extender_btype
# Loading work.sign_extender_cbtype
# Loading work.left_shifter_2bits
# Loading work.control_unit
# Loading work.mux2_1_5bit
# Loading work.regfile
# Loading work.decoder_5to32
# Loading work.and_64bit
# Loading work.mux32_1_64bit
# Loading work.zero_64bits
# Loading work.zero_extender_itype
# Loading work.sign_extender_dtype
# Loading work.mux2_1_64bit
# Loading work.alu
# Loading work.decoder_3to8
# Loading work.subtractor_64bit
# Loading work.not_64bit
# Loading work.or_64bit
# Loading work.xor_64bit
# Loading work.datamem
# Loading work.mux4_1
# Loading work.mux2_1
# Loading work.D_FF
# Loading work.buf1
# Loading work.mux32_1
# Loading work.mux16_1
# Loading work.mux8_1
# Loading work.register_64bit
# ** Warning: Design size of 9097 instances exceeds ModelSim - Intel FPGA Starter Edition recommended capacity.
# This may because you are loading cell libraries which are not recommended with
# the ModelSim - Intel FPGA Edition. Expect performance to be adversely affected.
# .main_pane.wave.interior.cs.body.pw.wf
# .main_pane.structure.interior.cs.body.struct
# .main_pane.objects.interior.cs.body.tree
# Running benchmark: ./benchmarks/test04_LdurStur.arm
# [zero_extender_itype] in = xxxxxxxxxxxx, out = 0000000000000000000000000000000000000000000000000000xxxxxxxxxxxx
# [zero_extender_itype] in = 000000000001, out = 0000000000000000000000000000000000000000000000000000000000000001
# [sign_extender_dtype] in = 000000000, out = 0000000000000000000000000000000000000000000000000000000000000000
# [zero_extender_itype] in = 000000000010, out = 0000000000000000000000000000000000000000000000000000000000000010
# [zero_extender_itype] in = 000000000011, out = 0000000000000000000000000000000000000000000000000000000000000011
# [zero_extender_itype] in = 000000001000, out = 0000000000000000000000000000000000000000000000000000000000001000
# [sign_extender_dtype] in = 000000010, out = 0000000000000000000000000000000000000000000000000000000000000010
# [zero_extender_itype] in = 000000001011, out = 0000000000000000000000000000000000000000000000000000000000001011
# [zero_extender_itype] in = 000000000000, out = 0000000000000000000000000000000000000000000000000000000000000000
# [sign_extender_dtype] in = 000000000, out = 0000000000000000000000000000000000000000000000000000000000000000
# [MEM ACCESS @ 26.00 ns] STUR: Rn = X31 = 0, Offset = 0, Effective Addr = 0
# [zero_extender_itype] in = 011111110100, out = 0000000000000000000000000000000000000000000000000000011111110100
# [sign_extender_dtype] in = 111111101, out = 1111111111111111111111111111111111111111111111111111111111111101
# ** Error: Assertion error.
#    Time: 30 ns  Scope: cpustim.DUT.dmem File: ./datamem.sv Line: 33
# [MEM ACCESS @ 30.00 ns] STUR: Rn = X4 = 11, Offset = 18446744073709551613, Effective Addr = 18446743936270598152
# [zero_extender_itype] in = 000000100000, out = 0000000000000000000000000000000000000000000000000000000000100000
# [sign_extender_dtype] in = 000001000, out = 0000000000000000000000000000000000000000000000000000000000001000
# [MEM ACCESS @ 34.00 ns] STUR: Rn = X3 = 8, Offset = 8, Effective Addr = 16
# [zero_extender_itype] in = 000000010100, out = 0000000000000000000000000000000000000000000000000000000000010100
# [sign_extender_dtype] in = 000000101, out = 0000000000000000000000000000000000000000000000000000000000000101
# [MEM ACCESS @ 38.00 ns] LDUR: Rn = X4 = 11, Offset = 5, Effective Addr = 16
# [zero_extender_itype] in = 011111100000, out = 0000000000000000000000000000000000000000000000000000011111100000
# [sign_extender_dtype] in = 111111000, out = 1111111111111111111111111111111111111111111111111111111111111000
# ** Error: Assertion error.
#    Time: 42 ns  Scope: cpustim.DUT.dmem File: ./datamem.sv Line: 33
# [MEM ACCESS @ 42.00 ns] LDUR: Rn = X3 = 8, Offset = 18446744073709551608, Effective Addr = 18446742287003156480
# [zero_extender_itype] in = 000000010100, out = 0000000000000000000000000000000000000000000000000000000000010100
# [sign_extender_dtype] in = 000000101, out = 0000000000000000000000000000000000000000000000000000000000000101
# [MEM ACCESS @ 46.00 ns] LDUR: Rn = X2 = 3, Offset = 5, Effective Addr = 8
# [zero_extender_itype] in = 000000000000, out = 0000000000000000000000000000000000000000000000000000000000000000
# [sign_extender_dtype] in = 000000000, out = 0000000000000000000000000000000000000000000000000000000000000000
# [zero_extender_itype] in = xxxxxxxxxxxx, out = 0000000000000000000000000000000000000000000000000000xxxxxxxxxxxx
# [sign_extender_dtype] in = xxxxxxxxx, out = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# ** Note: $stop    : ./cpu.sv(182)
#    Time: 82 ns  Iteration: 1  Instance: /cpustim
# Break in Module cpustim at ./cpu.sv line 182
do runlab.do
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:38 on May 19,2025
# vlog -reportprogress 300 ./gates/and_64bit.sv 
# -- Compiling module and_64bit
# 
# Top level modules:
# 	and_64bit
# End time: 23:17:38 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:38 on May 19,2025
# vlog -reportprogress 300 ./gates/not_64bit.sv 
# -- Compiling module not_64bit
# 
# Top level modules:
# 	not_64bit
# End time: 23:17:38 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:38 on May 19,2025
# vlog -reportprogress 300 ./gates/or_64bit.sv 
# -- Compiling module or_64bit
# 
# Top level modules:
# 	or_64bit
# End time: 23:17:38 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:38 on May 19,2025
# vlog -reportprogress 300 ./gates/xor_64bit.sv 
# -- Compiling module xor_64bit
# 
# Top level modules:
# 	xor_64bit
# End time: 23:17:38 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:38 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux2_1.sv 
# -- Compiling module mux2_1
# -- Compiling module mux2_1_testbench
# 
# Top level modules:
# 	mux2_1_testbench
# End time: 23:17:38 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:39 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux2_1_5bit.sv 
# -- Compiling module mux2_1_5bit
# 
# Top level modules:
# 	mux2_1_5bit
# End time: 23:17:39 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:39 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux2_1_64bit.sv 
# -- Compiling module mux2_1_64bit
# 
# Top level modules:
# 	mux2_1_64bit
# End time: 23:17:39 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:39 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux4_1.sv 
# -- Compiling module mux4_1
# -- Compiling module mux4_1_testbench
# 
# Top level modules:
# 	mux4_1_testbench
# End time: 23:17:39 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:39 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux4_1_64bit.sv 
# -- Compiling module mux4_1_64bit
# 
# Top level modules:
# 	mux4_1_64bit
# End time: 23:17:39 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:39 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux8_1.sv 
# -- Compiling module mux8_1
# -- Compiling module mux8_1_testbench
# 
# Top level modules:
# 	mux8_1_testbench
# End time: 23:17:39 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:39 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux16_1.sv 
# -- Compiling module mux16_1
# -- Compiling module mux16_1_testbench
# 
# Top level modules:
# 	mux16_1_testbench
# End time: 23:17:39 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:39 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux32_1.sv 
# -- Compiling module mux32_1
# -- Compiling module mux32_1_testbench
# 
# Top level modules:
# 	mux32_1_testbench
# End time: 23:17:39 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:39 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux32_1_64bit.sv 
# -- Compiling module mux32_1_64bit
# 
# Top level modules:
# 	mux32_1_64bit
# End time: 23:17:39 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:39 on May 19,2025
# vlog -reportprogress 300 ./decoders/decoder_3to8.sv 
# -- Compiling module decoder_3to8
# 
# Top level modules:
# 	decoder_3to8
# End time: 23:17:39 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:39 on May 19,2025
# vlog -reportprogress 300 ./decoders/decoder_5to32.sv 
# -- Compiling module decoder_5to32
# 
# Top level modules:
# 	decoder_5to32
# End time: 23:17:39 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:39 on May 19,2025
# vlog -reportprogress 300 ./utils/dff.sv 
# -- Compiling module D_FF
# 
# Top level modules:
# 	D_FF
# End time: 23:17:39 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:39 on May 19,2025
# vlog -reportprogress 300 ./utils/dff_en.sv 
# -- Compiling module D_FF_en
# 
# Top level modules:
# 	D_FF_en
# End time: 23:17:39 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:39 on May 19,2025
# vlog -reportprogress 300 ./register_64bit.sv 
# -- Compiling module register_64bit
# 
# Top level modules:
# 	register_64bit
# End time: 23:17:39 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:39 on May 19,2025
# vlog -reportprogress 300 ./regfile.sv 
# -- Compiling module regfile
# 
# Top level modules:
# 	regfile
# End time: 23:17:39 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:39 on May 19,2025
# vlog -reportprogress 300 ./adders/adder.sv 
# -- Compiling module adder
# 
# Top level modules:
# 	adder
# End time: 23:17:39 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:39 on May 19,2025
# vlog -reportprogress 300 ./adders/adder_32bit.sv 
# -- Compiling module adder_32bit
# 
# Top level modules:
# 	adder_32bit
# End time: 23:17:39 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:39 on May 19,2025
# vlog -reportprogress 300 ./adders/adder_64bit.sv 
# -- Compiling module adder_64bit
# 
# Top level modules:
# 	adder_64bit
# End time: 23:17:40 on May 19,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:40 on May 19,2025
# vlog -reportprogress 300 ./subtractor_64bit.sv 
# -- Compiling module subtractor_64bit
# 
# Top level modules:
# 	subtractor_64bit
# End time: 23:17:40 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:40 on May 19,2025
# vlog -reportprogress 300 ./utils/immediate_extenders.sv 
# -- Compiling module buf1
# -- Compiling module zero_extender_itype
# -- Compiling module sign_extender_dtype
# -- Compiling module sign_extender_btype
# -- Compiling module sign_extender_cbtype
# 
# Top level modules:
# 	zero_extender_itype
# 	sign_extender_dtype
# 	sign_extender_btype
# 	sign_extender_cbtype
# End time: 23:17:40 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:40 on May 19,2025
# vlog -reportprogress 300 ./utils/left_shifter.sv 
# -- Compiling module left_shifter_2bits
# 
# Top level modules:
# 	left_shifter_2bits
# End time: 23:17:40 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:40 on May 19,2025
# vlog -reportprogress 300 ./utils/zero_64bits.sv 
# -- Compiling module zero_64bits
# 
# Top level modules:
# 	zero_64bits
# End time: 23:17:40 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:40 on May 19,2025
# vlog -reportprogress 300 ./alu.sv 
# -- Compiling module alu
# 
# Top level modules:
# 	alu
# End time: 23:17:40 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:40 on May 19,2025
# vlog -reportprogress 300 ./alustim.sv 
# -- Compiling module alustim
# 
# Top level modules:
# 	alustim
# End time: 23:17:40 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:40 on May 19,2025
# vlog -reportprogress 300 ./datamem.sv 
# -- Compiling module datamem
# -- Compiling module datamem_testbench
# 
# Top level modules:
# 	datamem_testbench
# End time: 23:17:40 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:40 on May 19,2025
# vlog -reportprogress 300 ./instructmem.sv 
# -- Compiling module instructmem
# -- Compiling module instructmem_testbench
# 
# Top level modules:
# 	instructmem_testbench
# End time: 23:17:40 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:40 on May 19,2025
# vlog -reportprogress 300 ./program_counter.sv 
# -- Compiling module program_counter
# -- Compiling module tb_program_counter
# 
# Top level modules:
# 	tb_program_counter
# End time: 23:17:40 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:40 on May 19,2025
# vlog -reportprogress 300 ./control_unit.sv 
# -- Compiling module control_unit
# 
# Top level modules:
# 	control_unit
# End time: 23:17:40 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:17:40 on May 19,2025
# vlog -reportprogress 300 ./cpu.sv 
# -- Compiling module cpu
# -- Compiling module cpustim
# 
# Top level modules:
# 	cpustim
# End time: 23:17:40 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 23:17:42 on May 19,2025, Elapsed time: 0:00:36
# Errors: 2, Warnings: 1
# vsim -voptargs=""+acc"" -t 1ps -lib work cpustim 
# Start time: 23:17:42 on May 19,2025
# Loading sv_std.std
# Loading work.cpustim
# Loading work.cpu
# Loading work.program_counter
# Loading work.adder_64bit
# Loading work.adder
# Loading work.mux4_1_64bit
# Loading work.instructmem
# Loading work.sign_extender_btype
# Loading work.sign_extender_cbtype
# Loading work.left_shifter_2bits
# Loading work.control_unit
# Loading work.mux2_1_5bit
# Loading work.regfile
# Loading work.decoder_5to32
# Loading work.and_64bit
# Loading work.mux32_1_64bit
# Loading work.zero_64bits
# Loading work.zero_extender_itype
# Loading work.sign_extender_dtype
# Loading work.mux2_1_64bit
# Loading work.alu
# Loading work.decoder_3to8
# Loading work.subtractor_64bit
# Loading work.not_64bit
# Loading work.or_64bit
# Loading work.xor_64bit
# Loading work.datamem
# Loading work.mux4_1
# Loading work.mux2_1
# Loading work.D_FF
# Loading work.buf1
# Loading work.mux32_1
# Loading work.mux16_1
# Loading work.mux8_1
# Loading work.register_64bit
# ** Warning: Design size of 9097 instances exceeds ModelSim - Intel FPGA Starter Edition recommended capacity.
# This may because you are loading cell libraries which are not recommended with
# the ModelSim - Intel FPGA Edition. Expect performance to be adversely affected.
# .main_pane.wave.interior.cs.body.pw.wf
# .main_pane.structure.interior.cs.body.struct
# .main_pane.objects.interior.cs.body.tree
# Running benchmark: ./benchmarks/test04_LdurStur.arm
# [sign_extender_dtype] in = 000000000, out = 0000000000000000000000000000000000000000000000000000000000000000
# [sign_extender_dtype] in = 000000010, out = 0000000000000000000000000000000000000000000000000000000000000010
# [sign_extender_dtype] in = 000000000, out = 0000000000000000000000000000000000000000000000000000000000000000
# [MEM ACCESS @ 26.00 ns] STUR: Rn = X31 = 0, Offset = 0, Effective Addr = 0
# [sign_extender_dtype] in = 111111101, out = 1111111111111111111111111111111111111111111111111111111111111101
# ** Error: Assertion error.
#    Time: 30 ns  Scope: cpustim.DUT.dmem File: ./datamem.sv Line: 33
# [MEM ACCESS @ 30.00 ns] STUR: Rn = X4 = 11, Offset = 18446744073709551613, Effective Addr = 18446743936270598152
# [sign_extender_dtype] in = 000001000, out = 0000000000000000000000000000000000000000000000000000000000001000
# [MEM ACCESS @ 34.00 ns] STUR: Rn = X3 = 8, Offset = 8, Effective Addr = 16
# [sign_extender_dtype] in = 000000101, out = 0000000000000000000000000000000000000000000000000000000000000101
# [MEM ACCESS @ 38.00 ns] LDUR: Rn = X4 = 11, Offset = 5, Effective Addr = 16
# [sign_extender_dtype] in = 111111000, out = 1111111111111111111111111111111111111111111111111111111111111000
# ** Error: Assertion error.
#    Time: 42 ns  Scope: cpustim.DUT.dmem File: ./datamem.sv Line: 33
# [MEM ACCESS @ 42.00 ns] LDUR: Rn = X3 = 8, Offset = 18446744073709551608, Effective Addr = 18446742287003156480
# [sign_extender_dtype] in = 000000101, out = 0000000000000000000000000000000000000000000000000000000000000101
# [MEM ACCESS @ 46.00 ns] LDUR: Rn = X2 = 3, Offset = 5, Effective Addr = 8
# [sign_extender_dtype] in = 000000000, out = 0000000000000000000000000000000000000000000000000000000000000000
# [sign_extender_dtype] in = xxxxxxxxx, out = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# ** Note: $stop    : ./cpu.sv(182)
#    Time: 82 ns  Iteration: 1  Instance: /cpustim
# Break in Module cpustim at ./cpu.sv line 182
do runlab.do
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:20:09 on May 19,2025
# vlog -reportprogress 300 ./gates/and_64bit.sv 
# -- Compiling module and_64bit
# 
# Top level modules:
# 	and_64bit
# End time: 23:20:09 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:20:09 on May 19,2025
# vlog -reportprogress 300 ./gates/not_64bit.sv 
# -- Compiling module not_64bit
# 
# Top level modules:
# 	not_64bit
# End time: 23:20:09 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:20:09 on May 19,2025
# vlog -reportprogress 300 ./gates/or_64bit.sv 
# -- Compiling module or_64bit
# 
# Top level modules:
# 	or_64bit
# End time: 23:20:09 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:20:09 on May 19,2025
# vlog -reportprogress 300 ./gates/xor_64bit.sv 
# -- Compiling module xor_64bit
# 
# Top level modules:
# 	xor_64bit
# End time: 23:20:09 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:20:09 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux2_1.sv 
# -- Compiling module mux2_1
# -- Compiling module mux2_1_testbench
# 
# Top level modules:
# 	mux2_1_testbench
# End time: 23:20:09 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:20:09 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux2_1_5bit.sv 
# -- Compiling module mux2_1_5bit
# 
# Top level modules:
# 	mux2_1_5bit
# End time: 23:20:09 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:20:09 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux2_1_64bit.sv 
# -- Compiling module mux2_1_64bit
# 
# Top level modules:
# 	mux2_1_64bit
# End time: 23:20:09 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:20:09 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux4_1.sv 
# -- Compiling module mux4_1
# -- Compiling module mux4_1_testbench
# 
# Top level modules:
# 	mux4_1_testbench
# End time: 23:20:09 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:20:09 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux4_1_64bit.sv 
# -- Compiling module mux4_1_64bit
# 
# Top level modules:
# 	mux4_1_64bit
# End time: 23:20:09 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:20:09 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux8_1.sv 
# -- Compiling module mux8_1
# -- Compiling module mux8_1_testbench
# 
# Top level modules:
# 	mux8_1_testbench
# End time: 23:20:09 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:20:09 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux16_1.sv 
# -- Compiling module mux16_1
# -- Compiling module mux16_1_testbench
# 
# Top level modules:
# 	mux16_1_testbench
# End time: 23:20:09 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:20:09 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux32_1.sv 
# -- Compiling module mux32_1
# -- Compiling module mux32_1_testbench
# 
# Top level modules:
# 	mux32_1_testbench
# End time: 23:20:09 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:20:09 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux32_1_64bit.sv 
# -- Compiling module mux32_1_64bit
# 
# Top level modules:
# 	mux32_1_64bit
# End time: 23:20:09 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:20:09 on May 19,2025
# vlog -reportprogress 300 ./decoders/decoder_3to8.sv 
# -- Compiling module decoder_3to8
# 
# Top level modules:
# 	decoder_3to8
# End time: 23:20:10 on May 19,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:20:10 on May 19,2025
# vlog -reportprogress 300 ./decoders/decoder_5to32.sv 
# -- Compiling module decoder_5to32
# 
# Top level modules:
# 	decoder_5to32
# End time: 23:20:10 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:20:10 on May 19,2025
# vlog -reportprogress 300 ./utils/dff.sv 
# -- Compiling module D_FF
# 
# Top level modules:
# 	D_FF
# End time: 23:20:10 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:20:10 on May 19,2025
# vlog -reportprogress 300 ./utils/dff_en.sv 
# -- Compiling module D_FF_en
# 
# Top level modules:
# 	D_FF_en
# End time: 23:20:10 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:20:10 on May 19,2025
# vlog -reportprogress 300 ./register_64bit.sv 
# -- Compiling module register_64bit
# 
# Top level modules:
# 	register_64bit
# End time: 23:20:10 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:20:10 on May 19,2025
# vlog -reportprogress 300 ./regfile.sv 
# -- Compiling module regfile
# 
# Top level modules:
# 	regfile
# End time: 23:20:10 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:20:10 on May 19,2025
# vlog -reportprogress 300 ./adders/adder.sv 
# -- Compiling module adder
# 
# Top level modules:
# 	adder
# End time: 23:20:10 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:20:10 on May 19,2025
# vlog -reportprogress 300 ./adders/adder_32bit.sv 
# -- Compiling module adder_32bit
# 
# Top level modules:
# 	adder_32bit
# End time: 23:20:10 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:20:10 on May 19,2025
# vlog -reportprogress 300 ./adders/adder_64bit.sv 
# -- Compiling module adder_64bit
# 
# Top level modules:
# 	adder_64bit
# End time: 23:20:10 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:20:10 on May 19,2025
# vlog -reportprogress 300 ./subtractor_64bit.sv 
# -- Compiling module subtractor_64bit
# 
# Top level modules:
# 	subtractor_64bit
# End time: 23:20:10 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:20:10 on May 19,2025
# vlog -reportprogress 300 ./utils/immediate_extenders.sv 
# -- Compiling module buf1
# -- Compiling module zero_extender_itype
# -- Compiling module sign_extender_dtype
# -- Compiling module sign_extender_btype
# -- Compiling module sign_extender_cbtype
# 
# Top level modules:
# 	zero_extender_itype
# 	sign_extender_dtype
# 	sign_extender_btype
# 	sign_extender_cbtype
# End time: 23:20:10 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:20:10 on May 19,2025
# vlog -reportprogress 300 ./utils/left_shifter.sv 
# -- Compiling module left_shifter_2bits
# 
# Top level modules:
# 	left_shifter_2bits
# End time: 23:20:10 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:20:10 on May 19,2025
# vlog -reportprogress 300 ./utils/zero_64bits.sv 
# -- Compiling module zero_64bits
# 
# Top level modules:
# 	zero_64bits
# End time: 23:20:10 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:20:10 on May 19,2025
# vlog -reportprogress 300 ./alu.sv 
# -- Compiling module alu
# 
# Top level modules:
# 	alu
# End time: 23:20:10 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:20:10 on May 19,2025
# vlog -reportprogress 300 ./alustim.sv 
# -- Compiling module alustim
# 
# Top level modules:
# 	alustim
# End time: 23:20:10 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:20:10 on May 19,2025
# vlog -reportprogress 300 ./datamem.sv 
# -- Compiling module datamem
# -- Compiling module datamem_testbench
# 
# Top level modules:
# 	datamem_testbench
# End time: 23:20:10 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:20:10 on May 19,2025
# vlog -reportprogress 300 ./instructmem.sv 
# -- Compiling module instructmem
# -- Compiling module instructmem_testbench
# 
# Top level modules:
# 	instructmem_testbench
# End time: 23:20:10 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:20:11 on May 19,2025
# vlog -reportprogress 300 ./program_counter.sv 
# -- Compiling module program_counter
# -- Compiling module tb_program_counter
# 
# Top level modules:
# 	tb_program_counter
# End time: 23:20:11 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:20:11 on May 19,2025
# vlog -reportprogress 300 ./control_unit.sv 
# -- Compiling module control_unit
# 
# Top level modules:
# 	control_unit
# End time: 23:20:11 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:20:11 on May 19,2025
# vlog -reportprogress 300 ./cpu.sv 
# -- Compiling module cpu
# -- Compiling module cpustim
# 
# Top level modules:
# 	cpustim
# End time: 23:20:11 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 23:20:15 on May 19,2025, Elapsed time: 0:02:33
# Errors: 2, Warnings: 1
# vsim -voptargs=""+acc"" -t 1ps -lib work cpustim 
# Start time: 23:20:15 on May 19,2025
# Loading sv_std.std
# Loading work.cpustim
# Loading work.cpu
# Loading work.program_counter
# Loading work.adder_64bit
# Loading work.adder
# Loading work.mux4_1_64bit
# Loading work.instructmem
# Loading work.sign_extender_btype
# Loading work.sign_extender_cbtype
# Loading work.left_shifter_2bits
# Loading work.control_unit
# Loading work.mux2_1_5bit
# Loading work.regfile
# Loading work.decoder_5to32
# Loading work.and_64bit
# Loading work.mux32_1_64bit
# Loading work.zero_64bits
# Loading work.zero_extender_itype
# Loading work.sign_extender_dtype
# Loading work.mux2_1_64bit
# Loading work.alu
# Loading work.decoder_3to8
# Loading work.subtractor_64bit
# Loading work.not_64bit
# Loading work.or_64bit
# Loading work.xor_64bit
# Loading work.datamem
# Loading work.mux4_1
# Loading work.mux2_1
# Loading work.D_FF
# Loading work.buf1
# Loading work.mux32_1
# Loading work.mux16_1
# Loading work.mux8_1
# Loading work.register_64bit
# ** Warning: Design size of 9097 instances exceeds ModelSim - Intel FPGA Starter Edition recommended capacity.
# This may because you are loading cell libraries which are not recommended with
# the ModelSim - Intel FPGA Edition. Expect performance to be adversely affected.
# .main_pane.wave.interior.cs.body.pw.wf
# .main_pane.structure.interior.cs.body.struct
# .main_pane.objects.interior.cs.body.tree
# Running benchmark: ./benchmarks/test04_LdurStur.arm
# [sign_extender_dtype] in = 000000000, out = 0000000000000000000000000000000000000000000000000000000000000000
# [sign_extender_dtype] in = 000000010, out = 0000000000000000000000000000000000000000000000000000000000000010
# [sign_extender_dtype] in = 000000000, out = 0000000000000000000000000000000000000000000000000000000000000000
# [MEM ACCESS @ 26.00 ns] STUR: Rn = X31 = 0, Given offset = 0, Calculated offset = 0, Final memory address = 0
# [sign_extender_dtype] in = 111111101, out = 1111111111111111111111111111111111111111111111111111111111111101
# ** Error: Assertion error.
#    Time: 30 ns  Scope: cpustim.DUT.dmem File: ./datamem.sv Line: 33
# [MEM ACCESS @ 30.00 ns] STUR: Rn = X4 = 11, Given offset = 509, Calculated offset = 18446744073709551613, Final memory address = 18446743936270598152
# [sign_extender_dtype] in = 000001000, out = 0000000000000000000000000000000000000000000000000000000000001000
# [MEM ACCESS @ 34.00 ns] STUR: Rn = X3 = 8, Given offset = 8, Calculated offset = 8, Final memory address = 16
# [sign_extender_dtype] in = 000000101, out = 0000000000000000000000000000000000000000000000000000000000000101
# [MEM ACCESS @ 38.00 ns] LDUR: Rn = X4 = 11, Given offset = 5, Calculated offset = 5, Final memory address = 16
# [sign_extender_dtype] in = 111111000, out = 1111111111111111111111111111111111111111111111111111111111111000
# ** Error: Assertion error.
#    Time: 42 ns  Scope: cpustim.DUT.dmem File: ./datamem.sv Line: 33
# [MEM ACCESS @ 42.00 ns] LDUR: Rn = X3 = 8, Given offset = 504, Calculated offset = 18446744073709551608, Final memory address = 18446742287003156480
# [sign_extender_dtype] in = 000000101, out = 0000000000000000000000000000000000000000000000000000000000000101
# [MEM ACCESS @ 46.00 ns] LDUR: Rn = X2 = 3, Given offset = 5, Calculated offset = 5, Final memory address = 8
# [sign_extender_dtype] in = 000000000, out = 0000000000000000000000000000000000000000000000000000000000000000
# [sign_extender_dtype] in = xxxxxxxxx, out = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# ** Note: $stop    : ./cpu.sv(182)
#    Time: 82 ns  Iteration: 1  Instance: /cpustim
# Break in Module cpustim at ./cpu.sv line 182
do runlab.do
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:33:28 on May 19,2025
# vlog -reportprogress 300 ./gates/and_64bit.sv 
# -- Compiling module and_64bit
# 
# Top level modules:
# 	and_64bit
# End time: 23:33:28 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:33:28 on May 19,2025
# vlog -reportprogress 300 ./gates/not_64bit.sv 
# -- Compiling module not_64bit
# 
# Top level modules:
# 	not_64bit
# End time: 23:33:28 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:33:28 on May 19,2025
# vlog -reportprogress 300 ./gates/or_64bit.sv 
# -- Compiling module or_64bit
# 
# Top level modules:
# 	or_64bit
# End time: 23:33:28 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:33:28 on May 19,2025
# vlog -reportprogress 300 ./gates/xor_64bit.sv 
# -- Compiling module xor_64bit
# 
# Top level modules:
# 	xor_64bit
# End time: 23:33:28 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:33:28 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux2_1.sv 
# -- Compiling module mux2_1
# -- Compiling module mux2_1_testbench
# 
# Top level modules:
# 	mux2_1_testbench
# End time: 23:33:28 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:33:28 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux2_1_5bit.sv 
# -- Compiling module mux2_1_5bit
# 
# Top level modules:
# 	mux2_1_5bit
# End time: 23:33:29 on May 19,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:33:29 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux2_1_64bit.sv 
# -- Compiling module mux2_1_64bit
# 
# Top level modules:
# 	mux2_1_64bit
# End time: 23:33:29 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:33:29 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux4_1.sv 
# -- Compiling module mux4_1
# -- Compiling module mux4_1_testbench
# 
# Top level modules:
# 	mux4_1_testbench
# End time: 23:33:29 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:33:29 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux4_1_64bit.sv 
# -- Compiling module mux4_1_64bit
# 
# Top level modules:
# 	mux4_1_64bit
# End time: 23:33:29 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:33:29 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux8_1.sv 
# -- Compiling module mux8_1
# -- Compiling module mux8_1_testbench
# 
# Top level modules:
# 	mux8_1_testbench
# End time: 23:33:29 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:33:29 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux16_1.sv 
# -- Compiling module mux16_1
# -- Compiling module mux16_1_testbench
# 
# Top level modules:
# 	mux16_1_testbench
# End time: 23:33:29 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:33:29 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux32_1.sv 
# -- Compiling module mux32_1
# -- Compiling module mux32_1_testbench
# 
# Top level modules:
# 	mux32_1_testbench
# End time: 23:33:29 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:33:29 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux32_1_64bit.sv 
# -- Compiling module mux32_1_64bit
# 
# Top level modules:
# 	mux32_1_64bit
# End time: 23:33:29 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:33:29 on May 19,2025
# vlog -reportprogress 300 ./decoders/decoder_3to8.sv 
# -- Compiling module decoder_3to8
# 
# Top level modules:
# 	decoder_3to8
# End time: 23:33:29 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:33:29 on May 19,2025
# vlog -reportprogress 300 ./decoders/decoder_5to32.sv 
# -- Compiling module decoder_5to32
# 
# Top level modules:
# 	decoder_5to32
# End time: 23:33:29 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:33:29 on May 19,2025
# vlog -reportprogress 300 ./utils/dff.sv 
# -- Compiling module D_FF
# 
# Top level modules:
# 	D_FF
# End time: 23:33:29 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:33:29 on May 19,2025
# vlog -reportprogress 300 ./utils/dff_en.sv 
# -- Compiling module D_FF_en
# 
# Top level modules:
# 	D_FF_en
# End time: 23:33:29 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:33:29 on May 19,2025
# vlog -reportprogress 300 ./register_64bit.sv 
# -- Compiling module register_64bit
# 
# Top level modules:
# 	register_64bit
# End time: 23:33:29 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:33:29 on May 19,2025
# vlog -reportprogress 300 ./regfile.sv 
# -- Compiling module regfile
# 
# Top level modules:
# 	regfile
# End time: 23:33:29 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:33:29 on May 19,2025
# vlog -reportprogress 300 ./adders/adder.sv 
# -- Compiling module adder
# 
# Top level modules:
# 	adder
# End time: 23:33:29 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:33:29 on May 19,2025
# vlog -reportprogress 300 ./adders/adder_32bit.sv 
# -- Compiling module adder_32bit
# 
# Top level modules:
# 	adder_32bit
# End time: 23:33:29 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:33:29 on May 19,2025
# vlog -reportprogress 300 ./adders/adder_64bit.sv 
# -- Compiling module adder_64bit
# 
# Top level modules:
# 	adder_64bit
# End time: 23:33:30 on May 19,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:33:30 on May 19,2025
# vlog -reportprogress 300 ./subtractor_64bit.sv 
# -- Compiling module subtractor_64bit
# 
# Top level modules:
# 	subtractor_64bit
# End time: 23:33:30 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:33:30 on May 19,2025
# vlog -reportprogress 300 ./utils/immediate_extenders.sv 
# -- Compiling module buf1
# -- Compiling module zero_extender_itype
# -- Compiling module sign_extender_dtype
# -- Compiling module sign_extender_btype
# -- Compiling module sign_extender_cbtype
# 
# Top level modules:
# 	zero_extender_itype
# 	sign_extender_dtype
# 	sign_extender_btype
# 	sign_extender_cbtype
# End time: 23:33:30 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:33:30 on May 19,2025
# vlog -reportprogress 300 ./utils/left_shifter.sv 
# -- Compiling module left_shifter_2bits
# 
# Top level modules:
# 	left_shifter_2bits
# End time: 23:33:30 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:33:30 on May 19,2025
# vlog -reportprogress 300 ./utils/zero_64bits.sv 
# -- Compiling module zero_64bits
# 
# Top level modules:
# 	zero_64bits
# End time: 23:33:30 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:33:30 on May 19,2025
# vlog -reportprogress 300 ./alu.sv 
# -- Compiling module alu
# 
# Top level modules:
# 	alu
# End time: 23:33:30 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:33:30 on May 19,2025
# vlog -reportprogress 300 ./alustim.sv 
# -- Compiling module alustim
# 
# Top level modules:
# 	alustim
# End time: 23:33:30 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:33:30 on May 19,2025
# vlog -reportprogress 300 ./datamem.sv 
# -- Compiling module datamem
# -- Compiling module datamem_testbench
# 
# Top level modules:
# 	datamem_testbench
# End time: 23:33:30 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:33:30 on May 19,2025
# vlog -reportprogress 300 ./instructmem.sv 
# -- Compiling module instructmem
# -- Compiling module instructmem_testbench
# 
# Top level modules:
# 	instructmem_testbench
# End time: 23:33:30 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:33:30 on May 19,2025
# vlog -reportprogress 300 ./program_counter.sv 
# -- Compiling module program_counter
# -- Compiling module tb_program_counter
# 
# Top level modules:
# 	tb_program_counter
# End time: 23:33:30 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:33:30 on May 19,2025
# vlog -reportprogress 300 ./control_unit.sv 
# -- Compiling module control_unit
# 
# Top level modules:
# 	control_unit
# End time: 23:33:30 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:33:30 on May 19,2025
# vlog -reportprogress 300 ./cpu.sv 
# -- Compiling module cpu
# ** Error: ./cpu.sv(30): (vlog-2730) Undefined variable: 'branch_condition_met'.
# -- Compiling module cpustim
# End time: 23:33:30 on May 19,2025, Elapsed time: 0:00:00
# Errors: 1, Warnings: 0
# ** Error: C:/intelFPGA/17.0/modelsim_ase/win32aloem/vlog failed.
# Error in macro ./runlab.do line 46
# C:/intelFPGA/17.0/modelsim_ase/win32aloem/vlog failed.
#     while executing
# "vlog "./cpu.sv""
do runlab.do
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:35:32 on May 19,2025
# vlog -reportprogress 300 ./gates/and_64bit.sv 
# -- Compiling module and_64bit
# 
# Top level modules:
# 	and_64bit
# End time: 23:35:32 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:35:32 on May 19,2025
# vlog -reportprogress 300 ./gates/not_64bit.sv 
# -- Compiling module not_64bit
# 
# Top level modules:
# 	not_64bit
# End time: 23:35:32 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:35:32 on May 19,2025
# vlog -reportprogress 300 ./gates/or_64bit.sv 
# -- Compiling module or_64bit
# 
# Top level modules:
# 	or_64bit
# End time: 23:35:32 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:35:32 on May 19,2025
# vlog -reportprogress 300 ./gates/xor_64bit.sv 
# -- Compiling module xor_64bit
# 
# Top level modules:
# 	xor_64bit
# End time: 23:35:32 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:35:32 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux2_1.sv 
# -- Compiling module mux2_1
# -- Compiling module mux2_1_testbench
# 
# Top level modules:
# 	mux2_1_testbench
# End time: 23:35:32 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:35:32 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux2_1_5bit.sv 
# -- Compiling module mux2_1_5bit
# 
# Top level modules:
# 	mux2_1_5bit
# End time: 23:35:32 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:35:32 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux2_1_64bit.sv 
# -- Compiling module mux2_1_64bit
# 
# Top level modules:
# 	mux2_1_64bit
# End time: 23:35:32 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:35:32 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux4_1.sv 
# -- Compiling module mux4_1
# -- Compiling module mux4_1_testbench
# 
# Top level modules:
# 	mux4_1_testbench
# End time: 23:35:32 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:35:32 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux4_1_64bit.sv 
# -- Compiling module mux4_1_64bit
# 
# Top level modules:
# 	mux4_1_64bit
# End time: 23:35:32 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:35:32 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux8_1.sv 
# -- Compiling module mux8_1
# -- Compiling module mux8_1_testbench
# 
# Top level modules:
# 	mux8_1_testbench
# End time: 23:35:32 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:35:32 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux16_1.sv 
# -- Compiling module mux16_1
# -- Compiling module mux16_1_testbench
# 
# Top level modules:
# 	mux16_1_testbench
# End time: 23:35:33 on May 19,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:35:33 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux32_1.sv 
# -- Compiling module mux32_1
# -- Compiling module mux32_1_testbench
# 
# Top level modules:
# 	mux32_1_testbench
# End time: 23:35:33 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:35:33 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux32_1_64bit.sv 
# -- Compiling module mux32_1_64bit
# 
# Top level modules:
# 	mux32_1_64bit
# End time: 23:35:33 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:35:33 on May 19,2025
# vlog -reportprogress 300 ./decoders/decoder_3to8.sv 
# -- Compiling module decoder_3to8
# 
# Top level modules:
# 	decoder_3to8
# End time: 23:35:33 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:35:33 on May 19,2025
# vlog -reportprogress 300 ./decoders/decoder_5to32.sv 
# -- Compiling module decoder_5to32
# 
# Top level modules:
# 	decoder_5to32
# End time: 23:35:33 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:35:33 on May 19,2025
# vlog -reportprogress 300 ./utils/dff.sv 
# -- Compiling module D_FF
# 
# Top level modules:
# 	D_FF
# End time: 23:35:33 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:35:33 on May 19,2025
# vlog -reportprogress 300 ./utils/dff_en.sv 
# -- Compiling module D_FF_en
# 
# Top level modules:
# 	D_FF_en
# End time: 23:35:33 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:35:33 on May 19,2025
# vlog -reportprogress 300 ./register_64bit.sv 
# -- Compiling module register_64bit
# 
# Top level modules:
# 	register_64bit
# End time: 23:35:33 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:35:33 on May 19,2025
# vlog -reportprogress 300 ./regfile.sv 
# -- Compiling module regfile
# 
# Top level modules:
# 	regfile
# End time: 23:35:33 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:35:33 on May 19,2025
# vlog -reportprogress 300 ./adders/adder.sv 
# -- Compiling module adder
# 
# Top level modules:
# 	adder
# End time: 23:35:33 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:35:33 on May 19,2025
# vlog -reportprogress 300 ./adders/adder_32bit.sv 
# -- Compiling module adder_32bit
# 
# Top level modules:
# 	adder_32bit
# End time: 23:35:33 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:35:33 on May 19,2025
# vlog -reportprogress 300 ./adders/adder_64bit.sv 
# -- Compiling module adder_64bit
# 
# Top level modules:
# 	adder_64bit
# End time: 23:35:33 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:35:33 on May 19,2025
# vlog -reportprogress 300 ./subtractor_64bit.sv 
# -- Compiling module subtractor_64bit
# 
# Top level modules:
# 	subtractor_64bit
# End time: 23:35:33 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:35:33 on May 19,2025
# vlog -reportprogress 300 ./utils/immediate_extenders.sv 
# -- Compiling module buf1
# -- Compiling module zero_extender_itype
# -- Compiling module sign_extender_dtype
# -- Compiling module sign_extender_btype
# -- Compiling module sign_extender_cbtype
# 
# Top level modules:
# 	zero_extender_itype
# 	sign_extender_dtype
# 	sign_extender_btype
# 	sign_extender_cbtype
# End time: 23:35:33 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:35:33 on May 19,2025
# vlog -reportprogress 300 ./utils/left_shifter.sv 
# -- Compiling module left_shifter_2bits
# 
# Top level modules:
# 	left_shifter_2bits
# End time: 23:35:33 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:35:33 on May 19,2025
# vlog -reportprogress 300 ./utils/zero_64bits.sv 
# -- Compiling module zero_64bits
# 
# Top level modules:
# 	zero_64bits
# End time: 23:35:33 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:35:33 on May 19,2025
# vlog -reportprogress 300 ./alu.sv 
# -- Compiling module alu
# 
# Top level modules:
# 	alu
# End time: 23:35:33 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:35:34 on May 19,2025
# vlog -reportprogress 300 ./alustim.sv 
# -- Compiling module alustim
# 
# Top level modules:
# 	alustim
# End time: 23:35:34 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:35:34 on May 19,2025
# vlog -reportprogress 300 ./datamem.sv 
# -- Compiling module datamem
# -- Compiling module datamem_testbench
# 
# Top level modules:
# 	datamem_testbench
# End time: 23:35:34 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:35:34 on May 19,2025
# vlog -reportprogress 300 ./instructmem.sv 
# -- Compiling module instructmem
# -- Compiling module instructmem_testbench
# 
# Top level modules:
# 	instructmem_testbench
# End time: 23:35:34 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:35:34 on May 19,2025
# vlog -reportprogress 300 ./program_counter.sv 
# -- Compiling module program_counter
# -- Compiling module tb_program_counter
# 
# Top level modules:
# 	tb_program_counter
# End time: 23:35:34 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:35:34 on May 19,2025
# vlog -reportprogress 300 ./control_unit.sv 
# -- Compiling module control_unit
# 
# Top level modules:
# 	control_unit
# End time: 23:35:34 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:35:34 on May 19,2025
# vlog -reportprogress 300 ./cpu.sv 
# -- Compiling module cpu
# -- Compiling module cpustim
# 
# Top level modules:
# 	cpustim
# End time: 23:35:34 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 23:35:38 on May 19,2025, Elapsed time: 0:15:23
# Errors: 6, Warnings: 1
# vsim -voptargs=""+acc"" -t 1ps -lib work cpustim 
# Start time: 23:35:38 on May 19,2025
# Loading sv_std.std
# Loading work.cpustim
# Loading work.cpu
# Loading work.program_counter
# Loading work.adder_64bit
# Loading work.adder
# Loading work.mux4_1_64bit
# Loading work.instructmem
# Loading work.sign_extender_btype
# Loading work.sign_extender_cbtype
# Loading work.left_shifter_2bits
# Loading work.control_unit
# Loading work.mux2_1_5bit
# Loading work.regfile
# Loading work.decoder_5to32
# Loading work.and_64bit
# Loading work.mux32_1_64bit
# Loading work.zero_64bits
# Loading work.zero_extender_itype
# Loading work.sign_extender_dtype
# Loading work.mux2_1_64bit
# Loading work.alu
# Loading work.decoder_3to8
# Loading work.subtractor_64bit
# Loading work.not_64bit
# Loading work.or_64bit
# Loading work.xor_64bit
# Loading work.datamem
# Loading work.mux4_1
# Loading work.mux2_1
# Loading work.D_FF
# Loading work.buf1
# Loading work.mux32_1
# Loading work.mux16_1
# Loading work.mux8_1
# Loading work.register_64bit
# ** Warning: Design size of 9097 instances exceeds ModelSim - Intel FPGA Starter Edition recommended capacity.
# This may because you are loading cell libraries which are not recommended with
# the ModelSim - Intel FPGA Edition. Expect performance to be adversely affected.
# .main_pane.wave.interior.cs.body.pw.wf
# .main_pane.structure.interior.cs.body.struct
# .main_pane.objects.interior.cs.body.tree
# Running benchmark: ./benchmarks/test01_AddiB.arm
# [INSTR FETCH @ 2.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [sign_extender_dtype] in = 000000000, out = 0000000000000000000000000000000000000000000000000000000000000000
# [INSTR FETCH @ 6.00 ns] PC = 0, Instruction = 10010001000000000000001111100000
#   -> PC+4 sequential
# [INSTR FETCH @ 10.00 ns] PC = 4, Instruction = 10010001000000000000010000000001
#   -> PC+4 sequential
# [INSTR FETCH @ 14.00 ns] PC = 8, Instruction = 10010001000000000000010000100010
#   -> PC+4 sequential
# [INSTR FETCH @ 18.00 ns] PC = 12, Instruction = 10010001000000000000100000100011
#   -> PC+4 sequential
# [sign_extender_dtype] in = 000000001, out = 0000000000000000000000000000000000000000000000000000000000000001
# [INSTR FETCH @ 22.00 ns] PC = 16, Instruction = 10010001000000000001000000000100
#   -> PC+4 sequential
# [sign_extender_dtype] in = 000000000, out = 0000000000000000000000000000000000000000000000000000000000000000
# [INSTR FETCH @ 26.00 ns] PC = 20, Instruction = 00010100000000000000000000000000
#   -> PC+4 sequential
# [INSTR FETCH @ 30.00 ns] PC = 24, Instruction = 10010001000000000000001111111111
#   -> PC+4 sequential
# [sign_extender_dtype] in = xxxxxxxxx, out = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 34.00 ns] PC = 28, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [INSTR FETCH @ 38.00 ns] PC = 32, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [INSTR FETCH @ 42.00 ns] PC = 36, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [INSTR FETCH @ 46.00 ns] PC = 40, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [INSTR FETCH @ 50.00 ns] PC = 44, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [INSTR FETCH @ 54.00 ns] PC = 48, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [INSTR FETCH @ 58.00 ns] PC = 52, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [INSTR FETCH @ 62.00 ns] PC = 56, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [INSTR FETCH @ 66.00 ns] PC = 60, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [INSTR FETCH @ 70.00 ns] PC = 64, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [INSTR FETCH @ 74.00 ns] PC = 68, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [INSTR FETCH @ 78.00 ns] PC = 72, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [INSTR FETCH @ 82.00 ns] PC = 76, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# ** Note: $stop    : ./cpu.sv(194)
#    Time: 82 ns  Iteration: 1  Instance: /cpustim
# Break in Module cpustim at ./cpu.sv line 194
do runlab.do
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:36:18 on May 19,2025
# vlog -reportprogress 300 ./gates/and_64bit.sv 
# -- Compiling module and_64bit
# 
# Top level modules:
# 	and_64bit
# End time: 23:36:18 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:36:18 on May 19,2025
# vlog -reportprogress 300 ./gates/not_64bit.sv 
# -- Compiling module not_64bit
# 
# Top level modules:
# 	not_64bit
# End time: 23:36:18 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:36:18 on May 19,2025
# vlog -reportprogress 300 ./gates/or_64bit.sv 
# -- Compiling module or_64bit
# 
# Top level modules:
# 	or_64bit
# End time: 23:36:18 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:36:18 on May 19,2025
# vlog -reportprogress 300 ./gates/xor_64bit.sv 
# -- Compiling module xor_64bit
# 
# Top level modules:
# 	xor_64bit
# End time: 23:36:18 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:36:18 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux2_1.sv 
# -- Compiling module mux2_1
# -- Compiling module mux2_1_testbench
# 
# Top level modules:
# 	mux2_1_testbench
# End time: 23:36:18 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:36:18 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux2_1_5bit.sv 
# -- Compiling module mux2_1_5bit
# 
# Top level modules:
# 	mux2_1_5bit
# End time: 23:36:18 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:36:18 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux2_1_64bit.sv 
# -- Compiling module mux2_1_64bit
# 
# Top level modules:
# 	mux2_1_64bit
# End time: 23:36:18 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:36:18 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux4_1.sv 
# -- Compiling module mux4_1
# -- Compiling module mux4_1_testbench
# 
# Top level modules:
# 	mux4_1_testbench
# End time: 23:36:18 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:36:18 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux4_1_64bit.sv 
# -- Compiling module mux4_1_64bit
# 
# Top level modules:
# 	mux4_1_64bit
# End time: 23:36:18 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:36:18 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux8_1.sv 
# -- Compiling module mux8_1
# -- Compiling module mux8_1_testbench
# 
# Top level modules:
# 	mux8_1_testbench
# End time: 23:36:19 on May 19,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:36:19 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux16_1.sv 
# -- Compiling module mux16_1
# -- Compiling module mux16_1_testbench
# 
# Top level modules:
# 	mux16_1_testbench
# End time: 23:36:19 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:36:19 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux32_1.sv 
# -- Compiling module mux32_1
# -- Compiling module mux32_1_testbench
# 
# Top level modules:
# 	mux32_1_testbench
# End time: 23:36:19 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:36:19 on May 19,2025
# vlog -reportprogress 300 ./muxes/mux32_1_64bit.sv 
# -- Compiling module mux32_1_64bit
# 
# Top level modules:
# 	mux32_1_64bit
# End time: 23:36:19 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:36:19 on May 19,2025
# vlog -reportprogress 300 ./decoders/decoder_3to8.sv 
# -- Compiling module decoder_3to8
# 
# Top level modules:
# 	decoder_3to8
# End time: 23:36:19 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:36:19 on May 19,2025
# vlog -reportprogress 300 ./decoders/decoder_5to32.sv 
# -- Compiling module decoder_5to32
# 
# Top level modules:
# 	decoder_5to32
# End time: 23:36:19 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:36:19 on May 19,2025
# vlog -reportprogress 300 ./utils/dff.sv 
# -- Compiling module D_FF
# 
# Top level modules:
# 	D_FF
# End time: 23:36:19 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:36:19 on May 19,2025
# vlog -reportprogress 300 ./utils/dff_en.sv 
# -- Compiling module D_FF_en
# 
# Top level modules:
# 	D_FF_en
# End time: 23:36:19 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:36:19 on May 19,2025
# vlog -reportprogress 300 ./register_64bit.sv 
# -- Compiling module register_64bit
# 
# Top level modules:
# 	register_64bit
# End time: 23:36:19 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:36:19 on May 19,2025
# vlog -reportprogress 300 ./regfile.sv 
# -- Compiling module regfile
# 
# Top level modules:
# 	regfile
# End time: 23:36:19 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:36:19 on May 19,2025
# vlog -reportprogress 300 ./adders/adder.sv 
# -- Compiling module adder
# 
# Top level modules:
# 	adder
# End time: 23:36:19 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:36:19 on May 19,2025
# vlog -reportprogress 300 ./adders/adder_32bit.sv 
# -- Compiling module adder_32bit
# 
# Top level modules:
# 	adder_32bit
# End time: 23:36:19 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:36:19 on May 19,2025
# vlog -reportprogress 300 ./adders/adder_64bit.sv 
# -- Compiling module adder_64bit
# 
# Top level modules:
# 	adder_64bit
# End time: 23:36:19 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:36:19 on May 19,2025
# vlog -reportprogress 300 ./subtractor_64bit.sv 
# -- Compiling module subtractor_64bit
# 
# Top level modules:
# 	subtractor_64bit
# End time: 23:36:19 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:36:19 on May 19,2025
# vlog -reportprogress 300 ./utils/immediate_extenders.sv 
# -- Compiling module buf1
# -- Compiling module zero_extender_itype
# -- Compiling module sign_extender_dtype
# -- Compiling module sign_extender_btype
# -- Compiling module sign_extender_cbtype
# 
# Top level modules:
# 	zero_extender_itype
# 	sign_extender_dtype
# 	sign_extender_btype
# 	sign_extender_cbtype
# End time: 23:36:19 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:36:19 on May 19,2025
# vlog -reportprogress 300 ./utils/left_shifter.sv 
# -- Compiling module left_shifter_2bits
# 
# Top level modules:
# 	left_shifter_2bits
# End time: 23:36:19 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:36:19 on May 19,2025
# vlog -reportprogress 300 ./utils/zero_64bits.sv 
# -- Compiling module zero_64bits
# 
# Top level modules:
# 	zero_64bits
# End time: 23:36:19 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:36:20 on May 19,2025
# vlog -reportprogress 300 ./alu.sv 
# -- Compiling module alu
# 
# Top level modules:
# 	alu
# End time: 23:36:20 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:36:20 on May 19,2025
# vlog -reportprogress 300 ./alustim.sv 
# -- Compiling module alustim
# 
# Top level modules:
# 	alustim
# End time: 23:36:20 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:36:20 on May 19,2025
# vlog -reportprogress 300 ./datamem.sv 
# -- Compiling module datamem
# -- Compiling module datamem_testbench
# 
# Top level modules:
# 	datamem_testbench
# End time: 23:36:20 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:36:20 on May 19,2025
# vlog -reportprogress 300 ./instructmem.sv 
# -- Compiling module instructmem
# -- Compiling module instructmem_testbench
# 
# Top level modules:
# 	instructmem_testbench
# End time: 23:36:20 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:36:20 on May 19,2025
# vlog -reportprogress 300 ./program_counter.sv 
# -- Compiling module program_counter
# -- Compiling module tb_program_counter
# 
# Top level modules:
# 	tb_program_counter
# End time: 23:36:20 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:36:20 on May 19,2025
# vlog -reportprogress 300 ./control_unit.sv 
# -- Compiling module control_unit
# 
# Top level modules:
# 	control_unit
# End time: 23:36:20 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 23:36:20 on May 19,2025
# vlog -reportprogress 300 ./cpu.sv 
# -- Compiling module cpu
# -- Compiling module cpustim
# 
# Top level modules:
# 	cpustim
# End time: 23:36:20 on May 19,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 23:36:22 on May 19,2025, Elapsed time: 0:00:44
# Errors: 0, Warnings: 1
# vsim -voptargs=""+acc"" -t 1ps -lib work cpustim 
# Start time: 23:36:22 on May 19,2025
# Loading sv_std.std
# Loading work.cpustim
# Loading work.cpu
# Loading work.program_counter
# Loading work.adder_64bit
# Loading work.adder
# Loading work.mux4_1_64bit
# Loading work.instructmem
# Loading work.sign_extender_btype
# Loading work.sign_extender_cbtype
# Loading work.left_shifter_2bits
# Loading work.control_unit
# Loading work.mux2_1_5bit
# Loading work.regfile
# Loading work.decoder_5to32
# Loading work.and_64bit
# Loading work.mux32_1_64bit
# Loading work.zero_64bits
# Loading work.zero_extender_itype
# Loading work.sign_extender_dtype
# Loading work.mux2_1_64bit
# Loading work.alu
# Loading work.decoder_3to8
# Loading work.subtractor_64bit
# Loading work.not_64bit
# Loading work.or_64bit
# Loading work.xor_64bit
# Loading work.datamem
# Loading work.mux4_1
# Loading work.mux2_1
# Loading work.D_FF
# Loading work.buf1
# Loading work.mux32_1
# Loading work.mux16_1
# Loading work.mux8_1
# Loading work.register_64bit
# ** Warning: Design size of 9097 instances exceeds ModelSim - Intel FPGA Starter Edition recommended capacity.
# This may because you are loading cell libraries which are not recommended with
# the ModelSim - Intel FPGA Edition. Expect performance to be adversely affected.
# .main_pane.wave.interior.cs.body.pw.wf
# .main_pane.structure.interior.cs.body.struct
# .main_pane.objects.interior.cs.body.tree
# Running benchmark: ./benchmarks/test02_AddsSubs.arm
# [INSTR FETCH @ 2.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [sign_extender_dtype] in = 000000000, out = 0000000000000000000000000000000000000000000000000000000000000000
# [INSTR FETCH @ 6.00 ns] PC = 0, Instruction = 10010001000000000000011111100000
#   -> PC+4 sequential
# [INSTR FETCH @ 10.00 ns] PC = 4, Instruction = 11101011000000000000001111100001
#   -> PC+4 sequential
# [sign_extender_dtype] in = 000010000, out = 0000000000000000000000000000000000000000000000000000000000010000
# [INSTR FETCH @ 14.00 ns] PC = 8, Instruction = 11101011000000010000000000000010
#   -> PC+4 sequential
# [sign_extender_dtype] in = 000100000, out = 0000000000000000000000000000000000000000000000000000000000100000
# [INSTR FETCH @ 18.00 ns] PC = 12, Instruction = 11101011000000100000000000100011
#   -> PC+4 sequential
# [sign_extender_dtype] in = 000010000, out = 0000000000000000000000000000000000000000000000000000000000010000
# [INSTR FETCH @ 22.00 ns] PC = 16, Instruction = 11101011000000010000000001100100
#   -> PC+4 sequential
# [sign_extender_dtype] in = 001000000, out = 0000000000000000000000000000000000000000000000000000000001000000
# [INSTR FETCH @ 26.00 ns] PC = 20, Instruction = 10101011000001000000000001100101
#   -> PC+4 sequential
# [sign_extender_dtype] in = 000010000, out = 0000000000000000000000000000000000000000000000000000000000010000
# [INSTR FETCH @ 30.00 ns] PC = 24, Instruction = 10101011000000010000000000000110
#   -> PC+4 sequential
# [sign_extender_dtype] in = 001010000, out = 0000000000000000000000000000000000000000000000000000000001010000
# [INSTR FETCH @ 34.00 ns] PC = 28, Instruction = 10101011000001010000000000100111
#   -> PC+4 sequential
# [sign_extender_dtype] in = 000000000, out = 0000000000000000000000000000000000000000000000000000000000000000
# [INSTR FETCH @ 38.00 ns] PC = 32, Instruction = 10010001000000000000001111111111
#   -> PC+4 sequential
# [INSTR FETCH @ 42.00 ns] PC = 36, Instruction = 00010100000000000000000000000000
#   -> PC+4 sequential
# [INSTR FETCH @ 46.00 ns] PC = 40, Instruction = 10010001000000000000001111111111
#   -> PC+4 sequential
# [sign_extender_dtype] in = xxxxxxxxx, out = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 50.00 ns] PC = 44, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [INSTR FETCH @ 54.00 ns] PC = 48, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [INSTR FETCH @ 58.00 ns] PC = 52, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [INSTR FETCH @ 62.00 ns] PC = 56, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [INSTR FETCH @ 66.00 ns] PC = 60, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [INSTR FETCH @ 70.00 ns] PC = 64, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [INSTR FETCH @ 74.00 ns] PC = 68, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [INSTR FETCH @ 78.00 ns] PC = 72, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [INSTR FETCH @ 82.00 ns] PC = 76, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# ** Note: $stop    : ./cpu.sv(194)
#    Time: 82 ns  Iteration: 1  Instance: /cpustim
# Break in Module cpustim at ./cpu.sv line 194
do runlab.do
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:10:14 on May 20,2025
# vlog -reportprogress 300 ./gates/and_64bit.sv 
# -- Compiling module and_64bit
# 
# Top level modules:
# 	and_64bit
# End time: 00:10:14 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:10:14 on May 20,2025
# vlog -reportprogress 300 ./gates/not_64bit.sv 
# -- Compiling module not_64bit
# 
# Top level modules:
# 	not_64bit
# End time: 00:10:14 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:10:14 on May 20,2025
# vlog -reportprogress 300 ./gates/or_64bit.sv 
# -- Compiling module or_64bit
# 
# Top level modules:
# 	or_64bit
# End time: 00:10:14 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:10:14 on May 20,2025
# vlog -reportprogress 300 ./gates/xor_64bit.sv 
# -- Compiling module xor_64bit
# 
# Top level modules:
# 	xor_64bit
# End time: 00:10:14 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:10:14 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux2_1.sv 
# -- Compiling module mux2_1
# -- Compiling module mux2_1_testbench
# 
# Top level modules:
# 	mux2_1_testbench
# End time: 00:10:14 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:10:14 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux2_1_5bit.sv 
# -- Compiling module mux2_1_5bit
# 
# Top level modules:
# 	mux2_1_5bit
# End time: 00:10:14 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:10:14 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux2_1_64bit.sv 
# -- Compiling module mux2_1_64bit
# 
# Top level modules:
# 	mux2_1_64bit
# End time: 00:10:14 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:10:14 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux4_1.sv 
# -- Compiling module mux4_1
# -- Compiling module mux4_1_testbench
# 
# Top level modules:
# 	mux4_1_testbench
# End time: 00:10:14 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:10:14 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux4_1_64bit.sv 
# -- Compiling module mux4_1_64bit
# 
# Top level modules:
# 	mux4_1_64bit
# End time: 00:10:14 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:10:15 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux8_1.sv 
# -- Compiling module mux8_1
# -- Compiling module mux8_1_testbench
# 
# Top level modules:
# 	mux8_1_testbench
# End time: 00:10:15 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:10:15 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux16_1.sv 
# -- Compiling module mux16_1
# -- Compiling module mux16_1_testbench
# 
# Top level modules:
# 	mux16_1_testbench
# End time: 00:10:15 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:10:15 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux32_1.sv 
# -- Compiling module mux32_1
# -- Compiling module mux32_1_testbench
# 
# Top level modules:
# 	mux32_1_testbench
# End time: 00:10:15 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:10:15 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux32_1_64bit.sv 
# -- Compiling module mux32_1_64bit
# 
# Top level modules:
# 	mux32_1_64bit
# End time: 00:10:15 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:10:15 on May 20,2025
# vlog -reportprogress 300 ./decoders/decoder_3to8.sv 
# -- Compiling module decoder_3to8
# 
# Top level modules:
# 	decoder_3to8
# End time: 00:10:15 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:10:15 on May 20,2025
# vlog -reportprogress 300 ./decoders/decoder_5to32.sv 
# -- Compiling module decoder_5to32
# 
# Top level modules:
# 	decoder_5to32
# End time: 00:10:15 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:10:15 on May 20,2025
# vlog -reportprogress 300 ./utils/dff.sv 
# -- Compiling module D_FF
# 
# Top level modules:
# 	D_FF
# End time: 00:10:15 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:10:15 on May 20,2025
# vlog -reportprogress 300 ./utils/dff_en.sv 
# -- Compiling module D_FF_en
# 
# Top level modules:
# 	D_FF_en
# End time: 00:10:15 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:10:15 on May 20,2025
# vlog -reportprogress 300 ./register_64bit.sv 
# -- Compiling module register_64bit
# 
# Top level modules:
# 	register_64bit
# End time: 00:10:15 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:10:15 on May 20,2025
# vlog -reportprogress 300 ./regfile.sv 
# -- Compiling module regfile
# 
# Top level modules:
# 	regfile
# End time: 00:10:15 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:10:15 on May 20,2025
# vlog -reportprogress 300 ./adders/adder.sv 
# -- Compiling module adder
# 
# Top level modules:
# 	adder
# End time: 00:10:15 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:10:15 on May 20,2025
# vlog -reportprogress 300 ./adders/adder_32bit.sv 
# -- Compiling module adder_32bit
# 
# Top level modules:
# 	adder_32bit
# End time: 00:10:15 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:10:15 on May 20,2025
# vlog -reportprogress 300 ./adders/adder_64bit.sv 
# -- Compiling module adder_64bit
# 
# Top level modules:
# 	adder_64bit
# End time: 00:10:15 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:10:15 on May 20,2025
# vlog -reportprogress 300 ./subtractor_64bit.sv 
# -- Compiling module subtractor_64bit
# 
# Top level modules:
# 	subtractor_64bit
# End time: 00:10:15 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:10:15 on May 20,2025
# vlog -reportprogress 300 ./utils/immediate_extenders.sv 
# -- Compiling module buf1
# -- Compiling module zero_extender_itype
# -- Compiling module sign_extender_dtype
# -- Compiling module sign_extender_btype
# -- Compiling module sign_extender_cbtype
# 
# Top level modules:
# 	zero_extender_itype
# 	sign_extender_dtype
# 	sign_extender_btype
# 	sign_extender_cbtype
# End time: 00:10:15 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:10:15 on May 20,2025
# vlog -reportprogress 300 ./utils/left_shifter.sv 
# -- Compiling module left_shifter_2bits
# 
# Top level modules:
# 	left_shifter_2bits
# End time: 00:10:15 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:10:15 on May 20,2025
# vlog -reportprogress 300 ./utils/zero_64bits.sv 
# -- Compiling module zero_64bits
# 
# Top level modules:
# 	zero_64bits
# End time: 00:10:16 on May 20,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:10:16 on May 20,2025
# vlog -reportprogress 300 ./alu.sv 
# -- Compiling module alu
# 
# Top level modules:
# 	alu
# End time: 00:10:16 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:10:16 on May 20,2025
# vlog -reportprogress 300 ./alustim.sv 
# -- Compiling module alustim
# 
# Top level modules:
# 	alustim
# End time: 00:10:16 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:10:16 on May 20,2025
# vlog -reportprogress 300 ./datamem.sv 
# -- Compiling module datamem
# -- Compiling module datamem_testbench
# 
# Top level modules:
# 	datamem_testbench
# End time: 00:10:16 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:10:16 on May 20,2025
# vlog -reportprogress 300 ./instructmem.sv 
# -- Compiling module instructmem
# -- Compiling module instructmem_testbench
# 
# Top level modules:
# 	instructmem_testbench
# End time: 00:10:16 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:10:16 on May 20,2025
# vlog -reportprogress 300 ./program_counter.sv 
# -- Compiling module program_counter
# -- Compiling module tb_program_counter
# 
# Top level modules:
# 	tb_program_counter
# End time: 00:10:16 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:10:16 on May 20,2025
# vlog -reportprogress 300 ./control_unit.sv 
# -- Compiling module control_unit
# 
# Top level modules:
# 	control_unit
# End time: 00:10:16 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:10:16 on May 20,2025
# vlog -reportprogress 300 ./cpu.sv 
# -- Compiling module cpu
# -- Compiling module cpustim
# 
# Top level modules:
# 	cpustim
# End time: 00:10:16 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 00:10:20 on May 20,2025, Elapsed time: 0:33:58
# Errors: 0, Warnings: 1
# vsim -voptargs=""+acc"" -t 1ps -lib work cpustim 
# Start time: 00:10:20 on May 20,2025
# Loading sv_std.std
# Loading work.cpustim
# Loading work.cpu
# Loading work.program_counter
# Loading work.adder_64bit
# Loading work.adder
# Loading work.mux4_1_64bit
# Loading work.instructmem
# Loading work.sign_extender_btype
# Loading work.sign_extender_cbtype
# Loading work.left_shifter_2bits
# Loading work.control_unit
# Loading work.mux2_1_5bit
# Loading work.regfile
# Loading work.decoder_5to32
# Loading work.and_64bit
# Loading work.mux32_1_64bit
# Loading work.zero_64bits
# Loading work.zero_extender_itype
# Loading work.sign_extender_dtype
# Loading work.mux2_1_64bit
# Loading work.alu
# Loading work.decoder_3to8
# Loading work.subtractor_64bit
# Loading work.not_64bit
# Loading work.or_64bit
# Loading work.xor_64bit
# Loading work.datamem
# Loading work.mux4_1
# Loading work.mux2_1
# Loading work.D_FF
# Loading work.buf1
# Loading work.mux32_1
# Loading work.mux16_1
# Loading work.mux8_1
# Loading work.register_64bit
# ** Warning: Design size of 9097 instances exceeds ModelSim - Intel FPGA Starter Edition recommended capacity.
# This may because you are loading cell libraries which are not recommended with
# the ModelSim - Intel FPGA Edition. Expect performance to be adversely affected.
# .main_pane.wave.interior.cs.body.pw.wf
# .main_pane.structure.interior.cs.body.struct
# .main_pane.objects.interior.cs.body.tree
# Running benchmark: ./benchmarks/test03_CbzB.arm
# [Subtractor DEBUG @ 0.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B_inverted = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 2.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [sign_extender_dtype] in = 000000000, out = 0000000000000000000000000000000000000000000000000000000000000000
# [Subtractor DEBUG @ 2.15 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = 0000000000000000000000000000000000000000000000000000xxxxxxxxxxxx, B_inverted = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 2.20 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111xxxxxxxxxxxx, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 2.25 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 2.50 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 2.60 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1
# [Subtractor DEBUG @ 2.65 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx11
# [Subtractor DEBUG @ 2.75 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx111
# [Subtractor DEBUG @ 2.85 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1111
# [Subtractor DEBUG @ 2.95 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx11111
# [Subtractor DEBUG @ 3.05 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx111111
# [Subtractor DEBUG @ 3.15 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1111111
# [Subtractor DEBUG @ 3.25 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx11111111
# [Subtractor DEBUG @ 3.35 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx111111111
# [Subtractor DEBUG @ 3.45 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1111111111
# [Subtractor DEBUG @ 3.55 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx11111111111
# [Subtractor DEBUG @ 3.65 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx111111111111
# [Subtractor DEBUG @ 3.75 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1111111111111
# [Subtractor DEBUG @ 3.85 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx11111111111111
# [Subtractor DEBUG @ 3.95 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx111111111111111
# [Subtractor DEBUG @ 4.05 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1111111111111111
# [Subtractor DEBUG @ 4.15 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx11111111111111111
# [Subtractor DEBUG @ 4.25 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx111111111111111111
# [Subtractor DEBUG @ 4.35 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1111111111111111111
# [Subtractor DEBUG @ 4.45 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx11111111111111111111
# [Subtractor DEBUG @ 4.55 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx111111111111111111111
# [Subtractor DEBUG @ 4.65 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1111111111111111111111
# [Subtractor DEBUG @ 4.75 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx11111111111111111111111
# [Subtractor DEBUG @ 4.85 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx111111111111111111111111
# [Subtractor DEBUG @ 4.95 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1111111111111111111111111
# [Subtractor DEBUG @ 5.05 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx11111111111111111111111111
# [Subtractor DEBUG @ 5.15 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx111111111111111111111111111
# [Subtractor DEBUG @ 5.25 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1111111111111111111111111111
# [Subtractor DEBUG @ 5.35 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx11111111111111111111111111111
# [Subtractor DEBUG @ 5.45 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx111111111111111111111111111111
# [Subtractor DEBUG @ 5.55 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1111111111111111111111111111111
# [Subtractor DEBUG @ 5.65 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx11111111111111111111111111111111
# [Subtractor DEBUG @ 5.75 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx111111111111111111111111111111111
# [Subtractor DEBUG @ 5.85 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1111111111111111111111111111111111
# [Subtractor DEBUG @ 5.95 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxx11111111111111111111111111111111111
# [INSTR FETCH @ 6.00 ns] PC = 0, Instruction = 10010001000000000000011111100000
#   -> PC+4 sequential
# [Subtractor DEBUG @ 6.05 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxx111111111111111111111111111111111111
# [Subtractor DEBUG @ 6.15 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxx1111111111111111111111111111111111111
# [Subtractor DEBUG @ 6.20 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxx1111111111111111111111111111111111111
# [Subtractor DEBUG @ 6.25 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxxxxxxxxxxxxxxxxxxxxxx11111111111111111111111111111111111111
# [Subtractor DEBUG @ 6.35 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxxxxxxxxxxxxxxxxxxxxx111111111111111111111111111111111111110
# [Subtractor DEBUG @ 6.40 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxxxxxxxxxxxxxxxxxxxxx111111111111111111111111111111111111100
# [Subtractor DEBUG @ 6.45 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxxxxxxxxxxxxxxxxxxxx1111111111111111111111111111111111111100
# [Subtractor DEBUG @ 6.50 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxxxxxxxxxxxxxxxxxxxx1111111111111111111111111111111111111000
# [Subtractor DEBUG @ 6.55 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxxxxxxxxxxxxxxxxxxx11111111111111111111111111111111111111000
# [Subtractor DEBUG @ 6.60 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxxxxxxxxxxxxxxxxxxx11111111111111111111111111111111111110000
# [Subtractor DEBUG @ 6.65 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxxxxxxxxxxxxxxxxxx111111111111111111111111111111111111110000
# [Subtractor DEBUG @ 6.70 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxxxxxxxxxxxxxxxxxx111111111111111111111111111111111111100000
# [Subtractor DEBUG @ 6.75 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxxxxxxxxxxxxxxxxx1111111111111111111111111111111111111100000
# [Subtractor DEBUG @ 6.80 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxxxxxxxxxxxxxxxxx1111111111111111111111111111111111111000000
# [Subtractor DEBUG @ 6.85 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxxxxxxxxxxxxxxxx11111111111111111111111111111111111111000000
# [Subtractor DEBUG @ 6.90 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxxxxxxxxxxxxxxxx11111111111111111111111111111111111110000000
# [Subtractor DEBUG @ 6.95 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxxxxxxxxxxxxxxx111111111111111111111111111111111111110000000
# [Subtractor DEBUG @ 7.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxxxxxxxxxxxxxxx111111111111111111111111111111111111100000000
# [Subtractor DEBUG @ 7.05 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxxxxxxxxxxxxxx1111111111111111111111111111111111111100000000
# [Subtractor DEBUG @ 7.10 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxxxxxxxxxxxxxx1111111111111111111111111111111111111000000000
# [Subtractor DEBUG @ 7.15 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxxxxxxxxxxxxx11111111111111111111111111111111111111000000000
# [Subtractor DEBUG @ 7.20 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxxxxxxxxxxxxx11111111111111111111111111111111111110000000000
# [Subtractor DEBUG @ 7.25 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxxxxxxxxxxxx111111111111111111111111111111111111110000000000
# [Subtractor DEBUG @ 7.30 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxxxxxxxxxxxx111111111111111111111111111111111111100000000000
# [Subtractor DEBUG @ 7.35 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxxxxxxxxxxx1111111111111111111111111111111111111100000000000
# [Subtractor DEBUG @ 7.40 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxxxxxxxxxxx1111111111111111111111111111111111111000000000000
# [Subtractor DEBUG @ 7.45 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxxxxxxxxxx11111111111111111111111111111111111111000000000000
# [Subtractor DEBUG @ 7.50 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxxxxxxxxxx11111111111111111111111111111111111110000000000000
# [Subtractor DEBUG @ 7.55 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxxxxxxxxx111111111111111111111111111111111111110000000000000
# [Subtractor DEBUG @ 7.60 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxxxxxxxxx111111111111111111111111111111111111100000000000000
# [Subtractor DEBUG @ 7.65 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxxxxxxxx1111111111111111111111111111111111111100000000000000
# [Subtractor DEBUG @ 7.70 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxxxxxxxx1111111111111111111111111111111111111000000000000000
# [Subtractor DEBUG @ 7.75 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxxxxxxx11111111111111111111111111111111111111000000000000000
# [Subtractor DEBUG @ 7.80 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxxxxxxx11111111111111111111111111111111111110000000000000000
# [Subtractor DEBUG @ 7.85 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxxxxxx111111111111111111111111111111111111110000000000000000
# [Subtractor DEBUG @ 7.90 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxxxxxx111111111111111111111111111111111111100000000000000000
# [Subtractor DEBUG @ 7.95 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxxxxx1111111111111111111111111111111111111100000000000000000
# [Subtractor DEBUG @ 8.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxxxxx1111111111111111111111111111111111111000000000000000000
# [Subtractor DEBUG @ 8.05 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxxxx11111111111111111111111111111111111111000000000000000000
# [Subtractor DEBUG @ 8.10 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxxxx11111111111111111111111111111111111110000000000000000000
# [Subtractor DEBUG @ 8.15 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxxx111111111111111111111111111111111111110000000000000000000
# [Subtractor DEBUG @ 8.20 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxxx111111111111111111111111111111111111100000000000000000000
# [Subtractor DEBUG @ 8.25 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxx1111111111111111111111111111111111111100000000000000000000
# [Subtractor DEBUG @ 8.30 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxxx1111111111111111111111111111111111111000000000000000000000
# [Subtractor DEBUG @ 8.35 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxx11111111111111111111111111111111111111000000000000000000000
# [Subtractor DEBUG @ 8.40 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxxx11111111111111111111111111111111111110000000000000000000000
# [Subtractor DEBUG @ 8.45 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxx111111111111111111111111111111111111110000000000000000000000
# [Subtractor DEBUG @ 8.50 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxxx111111111111111111111111111111111111100000000000000000000000
# [Subtractor DEBUG @ 8.55 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxx1111111111111111111111111111111111111100000000000000000000000
# [Subtractor DEBUG @ 8.60 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xxx1111111111111111111111111111111111111000000000000000000000000
# [Subtractor DEBUG @ 8.65 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xx11111111111111111111111111111111111111000000000000000000000000
# [Subtractor DEBUG @ 8.70 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = xx11111111111111111111111111111111111110000000000000000000000000
# [Subtractor DEBUG @ 8.75 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = x111111111111111111111111111111111111110000000000000000000000000
# [Subtractor DEBUG @ 8.80 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = x111111111111111111111111111111111111100000000000000000000000000
# [Subtractor DEBUG @ 8.85 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111100000000000000000000000000
# [Subtractor DEBUG @ 8.90 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111000000000000000000000000000
# [Subtractor DEBUG @ 9.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111110000000000000000000000000000
# [Subtractor DEBUG @ 9.10 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111100000000000000000000000000000
# [Subtractor DEBUG @ 9.20 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111000000000000000000000000000000
# [Subtractor DEBUG @ 9.30 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111110000000000000000000000000000000
# [Subtractor DEBUG @ 9.40 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111100000000000000000000000000000000
# [Subtractor DEBUG @ 9.50 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111000000000000000000000000000000000
# [Subtractor DEBUG @ 9.60 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111110000000000000000000000000000000000
# [Subtractor DEBUG @ 9.70 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111100000000000000000000000000000000000
# [Subtractor DEBUG @ 9.80 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111000000000000000000000000000000000000
# [Subtractor DEBUG @ 9.90 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111110000000000000000000000000000000000000
# [Subtractor DEBUG @ 10.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111100000000000000000000000000000000000000
# [INSTR FETCH @ 10.00 ns] PC = 4, Instruction = 10010001000000000000001111100001
#   -> PC+4 sequential
# [Subtractor DEBUG @ 10.10 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111000000000000000000000000000000000000000
# [Subtractor DEBUG @ 10.20 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111110000000000000000000000000000000000000000
# [Subtractor DEBUG @ 10.30 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111100000000000000000000000000000000000000000
# [Subtractor DEBUG @ 10.40 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111000000000000000000000000000000000000000000
# [Subtractor DEBUG @ 10.50 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111110000000000000000000000000000000000000000000
# [Subtractor DEBUG @ 10.60 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111100000000000000000000000000000000000000000000
# [Subtractor DEBUG @ 10.70 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111000000000000000000000000000000000000000000000
# [Subtractor DEBUG @ 10.80 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111110000000000000000000000000000000000000000000000
# [Subtractor DEBUG @ 10.90 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111100000000000000000000000000000000000000000000000
# [Subtractor DEBUG @ 11.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111000000000000000000000000000000000000000000000000
# [Subtractor DEBUG @ 11.10 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111110000000000000000000000000000000000000000000000000
# [Subtractor DEBUG @ 11.20 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111100000000000000000000000000000000000000000000000000
# [Subtractor DEBUG @ 11.30 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111000000000000000000000000000000000000000000000000000
# [Subtractor DEBUG @ 11.40 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111110000000000000000000000000000000000000000000000000000
# [Subtractor DEBUG @ 11.50 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111100000000000000000000000000000000000000000000000000000
# [Subtractor DEBUG @ 11.60 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111000000000000000000000000000000000000000000000000000000
# [Subtractor DEBUG @ 11.70 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111110000000000000000000000000000000000000000000000000000000
# [Subtractor DEBUG @ 11.80 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111100000000000000000000000000000000000000000000000000000000
# [Subtractor DEBUG @ 11.90 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111000000000000000000000000000000000000000000000000000000000
# [Subtractor DEBUG @ 12.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111110000000000000000000000000000000000000000000000000000000000
# [Subtractor DEBUG @ 12.10 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111100000000000000000000000000000000000000000000000000000000000
# [Subtractor DEBUG @ 12.20 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111000000000000000000000000000000000000000000000000000000000000
# [Subtractor DEBUG @ 12.30 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1110000000000000000000000000000000000000000000000000000000000000
# [Subtractor DEBUG @ 12.40 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1100000000000000000000000000000000000000000000000000000000000000
# [Subtractor DEBUG @ 12.50 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1000000000000000000000000000000000000000000000000000000000000000
# [Subtractor DEBUG @ 12.60 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000000000000000000000000000
# [INSTR FETCH @ 14.00 ns] PC = 8, Instruction = 10010001000000000000001111100010
#   -> PC+4 sequential
# [INSTR FETCH @ 18.00 ns] PC = 12, Instruction = 10010001000000000000001111100011
#   -> PC+4 sequential
# [INSTR FETCH @ 22.00 ns] PC = 16, Instruction = 10010001000000000000001111100100
#   -> PC+4 sequential
# [INSTR FETCH @ 26.00 ns] PC = 20, Instruction = 10010001000000000000001111100101
#   -> PC+4 sequential
# [Subtractor DEBUG @ 26.15 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000000000000000000000000000
# [Subtractor DEBUG @ 26.20 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000000000000000000000000000000000000000000000000
# [Subtractor DEBUG @ 26.30 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000000000000000000000000000000000000000000000001
# [Subtractor DEBUG @ 26.35 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000000000000000000000000000000000000000000000011
# [Subtractor DEBUG @ 26.45 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000000000000000000000000000000000000000000000111
# [Subtractor DEBUG @ 26.50 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000000000000000000000000000000000000000000000111
# [Subtractor DEBUG @ 26.55 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000000000000000000000001111
# [Subtractor DEBUG @ 26.65 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000000000000000000000011111
# [Subtractor DEBUG @ 26.70 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000000000000000000000011101
# [Subtractor DEBUG @ 26.75 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000000000000000000000111101
# [Subtractor DEBUG @ 26.80 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000000000000000000000111001
# [Subtractor DEBUG @ 26.85 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000000000000000000001111001
# [Subtractor DEBUG @ 26.90 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000000000000000000001110001
# [Subtractor DEBUG @ 26.95 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000000000000000000011110001
# [Subtractor DEBUG @ 27.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000000000000000000011100001
# [Subtractor DEBUG @ 27.05 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000000000000000000111100001
# [Subtractor DEBUG @ 27.10 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000000000000000000111000001
# [Subtractor DEBUG @ 27.15 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000000000000000001111000001
# [Subtractor DEBUG @ 27.20 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000000000000000001110000001
# [Subtractor DEBUG @ 27.25 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000000000000000011110000001
# [Subtractor DEBUG @ 27.30 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000000000000000011100000001
# [Subtractor DEBUG @ 27.35 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000000000000000111100000001
# [Subtractor DEBUG @ 27.40 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000000000000000111000000001
# [Subtractor DEBUG @ 27.45 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000000000000001111000000001
# [Subtractor DEBUG @ 27.50 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000000000000001110000000001
# [Subtractor DEBUG @ 27.55 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000000000000011110000000001
# [Subtractor DEBUG @ 27.60 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000000000000011100000000001
# [Subtractor DEBUG @ 27.65 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000000000000111100000000001
# [Subtractor DEBUG @ 27.70 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000000000000111000000000001
# [Subtractor DEBUG @ 27.75 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000000000001111000000000001
# [Subtractor DEBUG @ 27.80 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000000000001110000000000001
# [Subtractor DEBUG @ 27.85 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000000000011110000000000001
# [Subtractor DEBUG @ 27.90 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000000000011100000000000001
# [Subtractor DEBUG @ 27.95 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000000000111100000000000001
# [Subtractor DEBUG @ 28.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000000000111000000000000001
# [Subtractor DEBUG @ 28.05 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000000001111000000000000001
# [Subtractor DEBUG @ 28.10 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000000001110000000000000001
# [Subtractor DEBUG @ 28.15 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000000011110000000000000001
# [Subtractor DEBUG @ 28.20 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000000011100000000000000001
# [Subtractor DEBUG @ 28.25 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000000111100000000000000001
# [Subtractor DEBUG @ 28.30 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000000111000000000000000001
# [Subtractor DEBUG @ 28.35 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000001111000000000000000001
# [Subtractor DEBUG @ 28.40 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000001110000000000000000001
# [Subtractor DEBUG @ 28.45 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000011110000000000000000001
# [Subtractor DEBUG @ 28.50 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000011100000000000000000001
# [Subtractor DEBUG @ 28.55 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000111100000000000000000001
# [Subtractor DEBUG @ 28.60 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000000111000000000000000000001
# [Subtractor DEBUG @ 28.65 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000001111000000000000000000001
# [Subtractor DEBUG @ 28.70 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000001110000000000000000000001
# [Subtractor DEBUG @ 28.75 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000011110000000000000000000001
# [Subtractor DEBUG @ 28.80 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000011100000000000000000000001
# [Subtractor DEBUG @ 28.85 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000111100000000000000000000001
# [Subtractor DEBUG @ 28.90 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000000111000000000000000000000001
# [Subtractor DEBUG @ 28.95 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000001111000000000000000000000001
# [Subtractor DEBUG @ 29.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000001110000000000000000000000001
# [Subtractor DEBUG @ 29.05 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000011110000000000000000000000001
# [Subtractor DEBUG @ 29.10 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000011100000000000000000000000001
# [Subtractor DEBUG @ 29.15 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000111100000000000000000000000001
# [Subtractor DEBUG @ 29.20 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000000111000000000000000000000000001
# [Subtractor DEBUG @ 29.25 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000001111000000000000000000000000001
# [Subtractor DEBUG @ 29.30 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000001110000000000000000000000000001
# [Subtractor DEBUG @ 29.35 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000011110000000000000000000000000001
# [Subtractor DEBUG @ 29.40 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000011100000000000000000000000000001
# [Subtractor DEBUG @ 29.45 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000111100000000000000000000000000001
# [Subtractor DEBUG @ 29.50 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000000111000000000000000000000000000001
# [Subtractor DEBUG @ 29.55 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000001111000000000000000000000000000001
# [Subtractor DEBUG @ 29.60 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000001110000000000000000000000000000001
# [Subtractor DEBUG @ 29.65 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000011110000000000000000000000000000001
# [Subtractor DEBUG @ 29.70 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000011100000000000000000000000000000001
# [Subtractor DEBUG @ 29.75 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000111100000000000000000000000000000001
# [Subtractor DEBUG @ 29.80 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000000111000000000000000000000000000000001
# [Subtractor DEBUG @ 29.85 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000001111000000000000000000000000000000001
# [Subtractor DEBUG @ 29.90 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000001110000000000000000000000000000000001
# [Subtractor DEBUG @ 29.95 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000011110000000000000000000000000000000001
# [Subtractor DEBUG @ 30.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000011100000000000000000000000000000000001
# [INSTR FETCH @ 30.00 ns] PC = 24, Instruction = 00010100000000000000000000001100
#   -> PC+4 sequential
# [Subtractor DEBUG @ 30.05 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000111100000000000000000000000000000000001
# [Subtractor DEBUG @ 30.10 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000111000000000000000000000000000000000001
# [Subtractor DEBUG @ 30.15 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000001111000000000000000000000000000000000001
# [Subtractor DEBUG @ 30.20 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000001110000000000000000000000000000000000001
# [Subtractor DEBUG @ 30.25 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000000011110000000000000000000000000000000000001
# [Subtractor DEBUG @ 30.30 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000000011100000000000000000000000000000000000001
# [Subtractor DEBUG @ 30.35 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000000111100000000000000000000000000000000000000
# [Subtractor DEBUG @ 30.40 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000000111000000000000000000000000000000000000000
# [Subtractor DEBUG @ 30.45 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000001111000000000000000000000000000000000000000
# [Subtractor DEBUG @ 30.50 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000001110000000000000000000000000000000000000000
# [Subtractor DEBUG @ 30.55 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000011110000000000000000000000000000000000000001
# [Subtractor DEBUG @ 30.60 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000011100000000000000000000000000000000000000011
# [Subtractor DEBUG @ 30.65 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000111100000000000000000000000000000000000000011
# [Subtractor DEBUG @ 30.70 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000111000000000000000000000000000000000000000111
# [Subtractor DEBUG @ 30.75 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000001111000000000000000000000000000000000000000111
# [Subtractor DEBUG @ 30.80 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000001110000000000000000000000000000000000000001111
# [Subtractor DEBUG @ 30.85 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000011110000000000000000000000000000000000000001111
# [Subtractor DEBUG @ 30.90 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000011100000000000000000000000000000000000000011111
# [Subtractor DEBUG @ 30.95 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000111100000000000000000000000000000000000000011111
# [Subtractor DEBUG @ 31.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000111000000000000000000000000000000000000000111111
# [Subtractor DEBUG @ 31.05 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000001111000000000000000000000000000000000000000111111
# [Subtractor DEBUG @ 31.10 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000001110000000000000000000000000000000000000001111111
# [Subtractor DEBUG @ 31.15 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000011110000000000000000000000000000000000000001111111
# [Subtractor DEBUG @ 31.20 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000011100000000000000000000000000000000000000011111111
# [Subtractor DEBUG @ 31.25 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000111100000000000000000000000000000000000000011111111
# [Subtractor DEBUG @ 31.30 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000111000000000000000000000000000000000000000111111111
# [Subtractor DEBUG @ 31.35 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000001111000000000000000000000000000000000000000111111111
# [Subtractor DEBUG @ 31.40 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000001110000000000000000000000000000000000000001111111111
# [Subtractor DEBUG @ 31.45 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000011110000000000000000000000000000000000000001111111111
# [Subtractor DEBUG @ 31.50 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000011100000000000000000000000000000000000000011111111111
# [Subtractor DEBUG @ 31.55 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000111100000000000000000000000000000000000000011111111111
# [Subtractor DEBUG @ 31.60 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000111000000000000000000000000000000000000000111111111111
# [Subtractor DEBUG @ 31.65 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000001111000000000000000000000000000000000000000111111111111
# [Subtractor DEBUG @ 31.70 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000001110000000000000000000000000000000000000001111111111111
# [Subtractor DEBUG @ 31.75 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000011110000000000000000000000000000000000000001111111111111
# [Subtractor DEBUG @ 31.80 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000011100000000000000000000000000000000000000011111111111111
# [Subtractor DEBUG @ 31.85 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000111100000000000000000000000000000000000000011111111111111
# [Subtractor DEBUG @ 31.90 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000111000000000000000000000000000000000000000111111111111111
# [Subtractor DEBUG @ 31.95 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000001111000000000000000000000000000000000000000111111111111111
# [Subtractor DEBUG @ 32.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000001110000000000000000000000000000000000000001111111111111111
# [Subtractor DEBUG @ 32.05 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000011110000000000000000000000000000000000000001111111111111111
# [Subtractor DEBUG @ 32.10 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000011100000000000000000000000000000000000000011111111111111111
# [Subtractor DEBUG @ 32.15 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000111100000000000000000000000000000000000000011111111111111111
# [Subtractor DEBUG @ 32.20 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000111000000000000000000000000000000000000000111111111111111111
# [Subtractor DEBUG @ 32.25 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0001111000000000000000000000000000000000000000111111111111111111
# [Subtractor DEBUG @ 32.30 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0001110000000000000000000000000000000000000001111111111111111111
# [Subtractor DEBUG @ 32.35 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0011110000000000000000000000000000000000000001111111111111111111
# [Subtractor DEBUG @ 32.40 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0011100000000000000000000000000000000000000011111111111111111111
# [Subtractor DEBUG @ 32.45 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0111100000000000000000000000000000000000000011111111111111111111
# [Subtractor DEBUG @ 32.50 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0111000000000000000000000000000000000000000111111111111111111111
# [Subtractor DEBUG @ 32.55 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111000000000000000000000000000000000000000111111111111111111111
# [Subtractor DEBUG @ 32.60 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1110000000000000000000000000000000000000001111111111111111111111
# [Subtractor DEBUG @ 32.70 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1100000000000000000000000000000000000000011111111111111111111111
# [Subtractor DEBUG @ 32.80 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1000000000000000000000000000000000000000111111111111111111111111
# [Subtractor DEBUG @ 32.90 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000000000000000000000001111111111111111111111111
# [Subtractor DEBUG @ 33.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000000000000000000000011111111111111111111111111
# [Subtractor DEBUG @ 33.10 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000000000000000000000111111111111111111111111111
# [Subtractor DEBUG @ 33.20 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000000000000000000001111111111111111111111111111
# [Subtractor DEBUG @ 33.30 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000000000000000000011111111111111111111111111111
# [Subtractor DEBUG @ 33.40 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000000000000000000111111111111111111111111111111
# [Subtractor DEBUG @ 33.50 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000000000000000001111111111111111111111111111111
# [Subtractor DEBUG @ 33.60 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000000000000000011111111111111111111111111111111
# [Subtractor DEBUG @ 33.70 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000000000000000111111111111111111111111111111111
# [Subtractor DEBUG @ 33.80 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000000000000001111111111111111111111111111111111
# [Subtractor DEBUG @ 33.90 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000000000000011111111111111111111111111111111111
# [Subtractor DEBUG @ 34.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000000000000111111111111111111111111111111111111
# [INSTR FETCH @ 34.00 ns] PC = 28, Instruction = 10010001000000000000010001000010
#   -> PC+4 sequential
# [Subtractor DEBUG @ 34.10 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000000000001111111111111111111111111111111111111
# [Subtractor DEBUG @ 34.20 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000000000011111111111111111111111111111111111111
# [Subtractor DEBUG @ 34.30 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000000000111111111111111111111111111111111111111
# [Subtractor DEBUG @ 34.40 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000000001111111111111111111111111111111111111111
# [Subtractor DEBUG @ 34.50 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000000011111111111111111111111111111111111111111
# [Subtractor DEBUG @ 34.60 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000000111111111111111111111111111111111111111111
# [Subtractor DEBUG @ 34.70 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000001111111111111111111111111111111111111111111
# [Subtractor DEBUG @ 34.80 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000011111111111111111111111111111111111111111111
# [Subtractor DEBUG @ 34.90 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000111111111111111111111111111111111111111111111
# [Subtractor DEBUG @ 35.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000001111111111111111111111111111111111111111111111
# [Subtractor DEBUG @ 35.10 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000011111111111111111111111111111111111111111111111
# [Subtractor DEBUG @ 35.20 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000111111111111111111111111111111111111111111111111
# [Subtractor DEBUG @ 35.30 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000001111111111111111111111111111111111111111111111111
# [Subtractor DEBUG @ 35.40 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000011111111111111111111111111111111111111111111111111
# [Subtractor DEBUG @ 35.50 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000111111111111111111111111111111111111111111111111111
# [Subtractor DEBUG @ 35.60 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000001111111111111111111111111111111111111111111111111111
# [Subtractor DEBUG @ 35.70 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000011111111111111111111111111111111111111111111111111111
# [Subtractor DEBUG @ 35.80 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000111111111111111111111111111111111111111111111111111111
# [Subtractor DEBUG @ 35.90 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000001111111111111111111111111111111111111111111111111111111
# [Subtractor DEBUG @ 36.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000011111111111111111111111111111111111111111111111111111111
# [Subtractor DEBUG @ 36.10 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000111111111111111111111111111111111111111111111111111111111
# [Subtractor DEBUG @ 36.20 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000001111111111111111111111111111111111111111111111111111111111
# [Subtractor DEBUG @ 36.30 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000011111111111111111111111111111111111111111111111111111111111
# [Subtractor DEBUG @ 36.40 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000111111111111111111111111111111111111111111111111111111111111
# [Subtractor DEBUG @ 36.50 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0001111111111111111111111111111111111111111111111111111111111111
# [Subtractor DEBUG @ 36.60 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0011111111111111111111111111111111111111111111111111111111111111
# [Subtractor DEBUG @ 36.70 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0111111111111111111111111111111111111111111111111111111111111111
# [Subtractor DEBUG @ 36.80 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111111111111111111111111111111111111111111111
# [INSTR FETCH @ 38.00 ns] PC = 32, Instruction = 10010001000000000000010010100101
#   -> PC+4 sequential
# [INSTR FETCH @ 42.00 ns] PC = 36, Instruction = 10010001000000000000011111100001
#   -> PC+4 sequential
# [sign_extender_dtype] in = 111111111, out = 1111111111111111111111111111111111111111111111111111111111111111
# [Subtractor DEBUG @ 42.10 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111111111111111111111111111111111111111111111
# [Subtractor DEBUG @ 42.15 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111111111111111111111111
# [Subtractor DEBUG @ 42.20 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111111111111111111111111111111111111111111111
# [Subtractor DEBUG @ 42.25 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111111111111111111111111111111111111111111110
# [Subtractor DEBUG @ 42.30 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111111111111111111111111111111111111111111101
# [Subtractor DEBUG @ 42.35 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111111111111111111111111111111111111111111111
# [Subtractor DEBUG @ 42.40 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111111111111111111111111111111111111111111011
# [Subtractor DEBUG @ 42.45 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111111111111111111111111
# [Subtractor DEBUG @ 42.50 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111111111111111111110111
# [Subtractor DEBUG @ 42.55 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111111111111111111111110
# [Subtractor DEBUG @ 42.60 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111111111111111111101100
# [Subtractor DEBUG @ 42.65 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111111111111111111111100
# [Subtractor DEBUG @ 42.70 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111111111111111111011000
# [Subtractor DEBUG @ 42.75 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111111111111111111111000
# [Subtractor DEBUG @ 42.80 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111111111111111110110000
# [Subtractor DEBUG @ 42.85 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111111111111111111110000
# [Subtractor DEBUG @ 42.90 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111111111111111101100000
# [Subtractor DEBUG @ 42.95 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111111111111111111100000
# [Subtractor DEBUG @ 43.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111111111111111011000000
# [Subtractor DEBUG @ 43.05 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111111111111111111000000
# [Subtractor DEBUG @ 43.10 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111111111111110110000000
# [Subtractor DEBUG @ 43.15 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111111111111111110000000
# [Subtractor DEBUG @ 43.20 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111111111111101100000000
# [Subtractor DEBUG @ 43.25 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111111111111111100000000
# [Subtractor DEBUG @ 43.30 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111111111111011000000000
# [Subtractor DEBUG @ 43.35 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111111111111111000000000
# [Subtractor DEBUG @ 43.40 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111111111110110000000000
# [Subtractor DEBUG @ 43.45 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111111111111110000000000
# [Subtractor DEBUG @ 43.50 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111111111101100000000000
# [Subtractor DEBUG @ 43.55 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111111111111100000000000
# [Subtractor DEBUG @ 43.60 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111111111011000000000000
# [Subtractor DEBUG @ 43.65 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111111111111000000000000
# [Subtractor DEBUG @ 43.70 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111111110110000000000000
# [Subtractor DEBUG @ 43.75 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111111111110000000000000
# [Subtractor DEBUG @ 43.80 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111111101100000000000000
# [Subtractor DEBUG @ 43.85 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111111111100000000000000
# [Subtractor DEBUG @ 43.90 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111111011000000000000000
# [Subtractor DEBUG @ 43.95 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111111111000000000000000
# [Subtractor DEBUG @ 44.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111110110000000000000000
# [Subtractor DEBUG @ 44.05 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111111110000000000000000
# [Subtractor DEBUG @ 44.10 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111101100000000000000000
# [Subtractor DEBUG @ 44.15 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111111100000000000000000
# [Subtractor DEBUG @ 44.20 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111011000000000000000000
# [Subtractor DEBUG @ 44.25 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111111000000000000000000
# [Subtractor DEBUG @ 44.30 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111110110000000000000000000
# [Subtractor DEBUG @ 44.35 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111110000000000000000000
# [Subtractor DEBUG @ 44.40 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111101100000000000000000000
# [Subtractor DEBUG @ 44.45 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111100000000000000000000
# [Subtractor DEBUG @ 44.50 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111011000000000000000000000
# [Subtractor DEBUG @ 44.55 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111111000000000000000000000
# [Subtractor DEBUG @ 44.60 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111110110000000000000000000000
# [Subtractor DEBUG @ 44.65 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111110000000000000000000000
# [Subtractor DEBUG @ 44.70 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111101100000000000000000000000
# [Subtractor DEBUG @ 44.75 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111100000000000000000000000
# [Subtractor DEBUG @ 44.80 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111011000000000000000000000000
# [Subtractor DEBUG @ 44.85 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111111000000000000000000000000
# [Subtractor DEBUG @ 44.90 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111110110000000000000000000000000
# [Subtractor DEBUG @ 44.95 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111110000000000000000000000000
# [Subtractor DEBUG @ 45.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111101100000000000000000000000000
# [Subtractor DEBUG @ 45.05 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111100000000000000000000000000
# [Subtractor DEBUG @ 45.10 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111011000000000000000000000000000
# [Subtractor DEBUG @ 45.15 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111111000000000000000000000000000
# [Subtractor DEBUG @ 45.20 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111110110000000000000000000000000000
# [Subtractor DEBUG @ 45.25 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111110000000000000000000000000000
# [Subtractor DEBUG @ 45.30 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111101100000000000000000000000000000
# [Subtractor DEBUG @ 45.35 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111100000000000000000000000000000
# [Subtractor DEBUG @ 45.40 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111011000000000000000000000000000000
# [Subtractor DEBUG @ 45.45 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111111000000000000000000000000000000
# [Subtractor DEBUG @ 45.50 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111110110000000000000000000000000000000
# [Subtractor DEBUG @ 45.55 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111110000000000000000000000000000000
# [Subtractor DEBUG @ 45.60 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111101100000000000000000000000000000000
# [Subtractor DEBUG @ 45.65 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111100000000000000000000000000000000
# [Subtractor DEBUG @ 45.70 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111011000000000000000000000000000000000
# [Subtractor DEBUG @ 45.75 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111111000000000000000000000000000000000
# [Subtractor DEBUG @ 45.80 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111110110000000000000000000000000000000000
# [Subtractor DEBUG @ 45.85 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111110000000000000000000000000000000000
# [Subtractor DEBUG @ 45.90 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111101100000000000000000000000000000000000
# [Subtractor DEBUG @ 45.95 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111100000000000000000000000000000000000
# [Subtractor DEBUG @ 46.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111011000000000000000000000000000000000000
# [INSTR FETCH @ 46.00 ns] PC = 40, Instruction = 00010111111111111111111111111111
#   -> PC+4 sequential
# [sign_extender_dtype] in = 000000000, out = 0000000000000000000000000000000000000000000000000000000000000000
# [Subtractor DEBUG @ 46.05 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111111000000000000000000000000000000000000
# [Subtractor DEBUG @ 46.10 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000111111111111, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111110110000000000000000000000000000000000000
# [Subtractor DEBUG @ 46.15 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000111111111111, B_inverted = 1111111111111111111111111111111111111111111111111111000000000000, diff = 1111111111111111111111111110000000000000000000000000000000000000
# [Subtractor DEBUG @ 46.20 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111000000000000, diff = 1111111111111111111111101100000000000000000000000000000000000000
# [Subtractor DEBUG @ 46.25 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111100000000000000000000000000111111111111
# [Subtractor DEBUG @ 46.30 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111011000000000000000000000000001000000000001
# [Subtractor DEBUG @ 46.35 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111111000000000000000000000000001111111111110
# [Subtractor DEBUG @ 46.40 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111110110000000000000000000000000011111111111100
# [Subtractor DEBUG @ 46.45 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111110000000000000000000000000011111111111100
# [Subtractor DEBUG @ 46.50 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111101100000000000000000000000000111111111111000
# [Subtractor DEBUG @ 46.55 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111100000000000000000000000000111111111111000
# [Subtractor DEBUG @ 46.60 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111011000000000000000000000000001111111111110000
# [Subtractor DEBUG @ 46.65 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111111000000000000000000000000001111111111110000
# [Subtractor DEBUG @ 46.70 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111110110000000000000000000000000011111111111100000
# [Subtractor DEBUG @ 46.75 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111110000000000000000000000000011111111111100000
# [Subtractor DEBUG @ 46.80 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111101100000000000000000000000000111111111111000000
# [Subtractor DEBUG @ 46.85 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111100000000000000000000000000111111111111000000
# [Subtractor DEBUG @ 46.90 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111011000000000000000000000000001111111111110000000
# [Subtractor DEBUG @ 46.95 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111111000000000000000000000000001111111111110000000
# [Subtractor DEBUG @ 47.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111110110000000000000000000000000011111111111100000000
# [Subtractor DEBUG @ 47.05 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111110000000000000000000000000011111111111100000000
# [Subtractor DEBUG @ 47.10 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111101100000000000000000000000000111111111111000000000
# [Subtractor DEBUG @ 47.15 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111100000000000000000000000000111111111111000000000
# [Subtractor DEBUG @ 47.20 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111011000000000000000000000000001111111111110000000000
# [Subtractor DEBUG @ 47.25 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111111000000000000000000000000001111111111110000000000
# [Subtractor DEBUG @ 47.30 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111110110000000000000000000000000011111111111100000000000
# [Subtractor DEBUG @ 47.35 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111110000000000000000000000000011111111111100000000000
# [Subtractor DEBUG @ 47.40 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111101100000000000000000000000000111111111111000000000000
# [Subtractor DEBUG @ 47.45 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111100000000000000000000000000111111111111000000000000
# [Subtractor DEBUG @ 47.50 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111011000000000000000000000000001111111111110000000000000
# [Subtractor DEBUG @ 47.55 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111111000000000000000000000000001111111111110000000000000
# [Subtractor DEBUG @ 47.60 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111110110000000000000000000000000011111111111100000000000000
# [Subtractor DEBUG @ 47.65 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111110000000000000000000000000011111111111100000000000000
# [Subtractor DEBUG @ 47.70 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111101100000000000000000000000000111111111111000000000000000
# [Subtractor DEBUG @ 47.75 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111100000000000000000000000000111111111111000000000000000
# [Subtractor DEBUG @ 47.80 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111011000000000000000000000000001111111111110000000000000000
# [Subtractor DEBUG @ 47.85 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111111000000000000000000000000001111111111110000000000000000
# [Subtractor DEBUG @ 47.90 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111110110000000000000000000000000011111111111100000000000000000
# [Subtractor DEBUG @ 47.95 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111110000000000000000000000000011111111111100000000000000000
# [Subtractor DEBUG @ 48.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111101100000000000000000000000000111111111111000000000000000000
# [Subtractor DEBUG @ 48.05 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111100000000000000000000000000111111111111000000000000000000
# [Subtractor DEBUG @ 48.10 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111011000000000000000000000000001111111111110000000000000000000
# [Subtractor DEBUG @ 48.15 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111111000000000000000000000000001111111111110000000000000000000
# [Subtractor DEBUG @ 48.20 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1110110000000000000000000000000011111111111100000000000000000000
# [Subtractor DEBUG @ 48.25 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111110000000000000000000000000011111111111100000000000000000000
# [Subtractor DEBUG @ 48.30 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1101100000000000000000000000000111111111111000000000000000000000
# [Subtractor DEBUG @ 48.35 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111100000000000000000000000000111111111111000000000000000000000
# [Subtractor DEBUG @ 48.40 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1011000000000000000000000000001111111111110000000000000000000000
# [Subtractor DEBUG @ 48.45 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1111000000000000000000000000001111111111110000000000000000000000
# [Subtractor DEBUG @ 48.50 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0110000000000000000000000000011111111111100000000000000000000000
# [Subtractor DEBUG @ 48.55 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1110000000000000000000000000011111111111100000000000000000000000
# [Subtractor DEBUG @ 48.60 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1100000000000000000000000000111111111111000000000000000000000000
# [Subtractor DEBUG @ 48.70 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 1000000000000000000000000001111111111110000000000000000000000000
# [Subtractor DEBUG @ 48.80 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000011111111111100000000000000000000000000
# [Subtractor DEBUG @ 48.90 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000000111111111111000000000000000000000000000
# [Subtractor DEBUG @ 49.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000001111111111110000000000000000000000000000
# [Subtractor DEBUG @ 49.10 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000011111111111100000000000000000000000000000
# [Subtractor DEBUG @ 49.20 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000111111111111000000000000000000000000000000
# [Subtractor DEBUG @ 49.30 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000001111111111110000000000000000000000000000000
# [Subtractor DEBUG @ 49.40 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000011111111111100000000000000000000000000000000
# [Subtractor DEBUG @ 49.50 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000111111111111000000000000000000000000000000000
# [Subtractor DEBUG @ 49.60 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000001111111111110000000000000000000000000000000000
# [Subtractor DEBUG @ 49.70 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000011111111111100000000000000000000000000000000000
# [Subtractor DEBUG @ 49.80 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000111111111111000000000000000000000000000000000000
# [Subtractor DEBUG @ 49.90 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000001111111111110000000000000000000000000000000000000
# [Subtractor DEBUG @ 50.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000011111111111100000000000000000000000000000000000000
# [INSTR FETCH @ 50.00 ns] PC = 44, Instruction = 10010001000000000000001111111111
#   -> PC+4 sequential
# [Subtractor DEBUG @ 50.10 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000111111111111000000000000000000000000000000000000000
# [Subtractor DEBUG @ 50.20 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000001111111111110000000000000000000000000000000000000000
# [Subtractor DEBUG @ 50.25 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 0000000000001111111111110000000000000000000000000000000000000000
# [Subtractor DEBUG @ 50.30 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 0000000000011111111111100000000000000000000000000000000000000000
# [Subtractor DEBUG @ 50.35 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 0000000000011111111111100000000000000000000000000000000000000010
# [Subtractor DEBUG @ 50.40 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 0000000000111111111111000000000000000000000000000000000000000110
# [Subtractor DEBUG @ 50.45 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 0000000000111111111111000000000000000000000000000000000000000110
# [Subtractor DEBUG @ 50.50 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 0000000001111111111110000000000000000000000000000000000000001110
# [Subtractor DEBUG @ 50.55 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 0000000001111111111110000000000000000000000000000000000000001111
# [Subtractor DEBUG @ 50.60 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 0000000011111111111100000000000000000000000000000000000000011110
# [Subtractor DEBUG @ 50.70 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 0000000111111111111000000000000000000000000000000000000000111110
# [Subtractor DEBUG @ 50.80 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 0000001111111111110000000000000000000000000000000000000001111110
# [Subtractor DEBUG @ 50.90 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 0000011111111111100000000000000000000000000000000000000011111110
# [Subtractor DEBUG @ 51.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 0000111111111111000000000000000000000000000000000000000111111110
# [Subtractor DEBUG @ 51.10 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 0001111111111110000000000000000000000000000000000000001111111110
# [Subtractor DEBUG @ 51.20 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 0011111111111100000000000000000000000000000000000000011111111110
# [Subtractor DEBUG @ 51.30 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 0111111111111000000000000000000000000000000000000000111111111110
# [Subtractor DEBUG @ 51.40 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 1111111111110000000000000000000000000000000000000001111111111110
# [Subtractor DEBUG @ 51.50 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 1111111111100000000000000000000000000000000000000011111111111110
# [Subtractor DEBUG @ 51.60 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 1111111111000000000000000000000000000000000000000111111111111110
# [Subtractor DEBUG @ 51.70 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 1111111110000000000000000000000000000000000000001111111111111110
# [Subtractor DEBUG @ 51.80 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 1111111100000000000000000000000000000000000000011111111111111110
# [Subtractor DEBUG @ 51.90 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 1111111000000000000000000000000000000000000000111111111111111110
# [Subtractor DEBUG @ 52.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 1111110000000000000000000000000000000000000001111111111111111110
# [Subtractor DEBUG @ 52.10 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 1111100000000000000000000000000000000000000011111111111111111110
# [Subtractor DEBUG @ 52.20 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 1111000000000000000000000000000000000000000111111111111111111110
# [Subtractor DEBUG @ 52.30 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 1110000000000000000000000000000000000000001111111111111111111110
# [Subtractor DEBUG @ 52.40 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 1100000000000000000000000000000000000000011111111111111111111110
# [Subtractor DEBUG @ 52.50 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 1000000000000000000000000000000000000000111111111111111111111110
# [Subtractor DEBUG @ 52.60 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 0000000000000000000000000000000000000001111111111111111111111110
# [Subtractor DEBUG @ 52.70 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 0000000000000000000000000000000000000011111111111111111111111110
# [Subtractor DEBUG @ 52.80 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 0000000000000000000000000000000000000111111111111111111111111110
# [Subtractor DEBUG @ 52.90 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 0000000000000000000000000000000000001111111111111111111111111110
# [Subtractor DEBUG @ 53.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 0000000000000000000000000000000000011111111111111111111111111110
# [Subtractor DEBUG @ 53.10 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 0000000000000000000000000000000000111111111111111111111111111110
# [Subtractor DEBUG @ 53.20 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 0000000000000000000000000000000001111111111111111111111111111110
# [Subtractor DEBUG @ 53.30 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 0000000000000000000000000000000011111111111111111111111111111110
# [Subtractor DEBUG @ 53.40 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 0000000000000000000000000000000111111111111111111111111111111110
# [Subtractor DEBUG @ 53.50 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 0000000000000000000000000000001111111111111111111111111111111110
# [Subtractor DEBUG @ 53.60 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 0000000000000000000000000000011111111111111111111111111111111110
# [Subtractor DEBUG @ 53.70 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 0000000000000000000000000000111111111111111111111111111111111110
# [Subtractor DEBUG @ 53.80 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 0000000000000000000000000001111111111111111111111111111111111110
# [Subtractor DEBUG @ 53.90 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 0000000000000000000000000011111111111111111111111111111111111110
# [Subtractor DEBUG @ 54.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 0000000000000000000000000111111111111111111111111111111111111110
# [INSTR FETCH @ 54.00 ns] PC = 48, Instruction = 10010001000000000000100010000100
#   -> PC+4 sequential
# [Subtractor DEBUG @ 54.10 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, B_inverted = 1111111111111111111111111111111111111111111111111111111111111101, diff = 0000000000000000000000001111111111111111111111111111111111111110
# [Subtractor DEBUG @ 54.15 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111111, diff = 0000000000000000000000001111111111111111111111111111111111111110
# [Subtractor DEBUG @ 54.20 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000000011111111111111111111111111111111111111110
# [Subtractor DEBUG @ 54.25 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000000011111111111111111111111111111111111111100
# [Subtractor DEBUG @ 54.30 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000000111111111111111111111111111111111111111001
# [Subtractor DEBUG @ 54.35 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000000111111111111111111111111111111111111111011
# [Subtractor DEBUG @ 54.40 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000001111111111111111111111111111111111111110011
# [Subtractor DEBUG @ 54.45 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000001111111111111111111111111111111111111110111
# [Subtractor DEBUG @ 54.50 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000011111111111111111111111111111111111111100111
# [Subtractor DEBUG @ 54.55 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000011111111111111111111111111111111111111101111
# [Subtractor DEBUG @ 54.60 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000111111111111111111111111111111111111111001111
# [Subtractor DEBUG @ 54.65 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000000111111111111111111111111111111111111111011111
# [Subtractor DEBUG @ 54.70 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000001111111111111111111111111111111111111110011111
# [Subtractor DEBUG @ 54.75 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000001111111111111111111111111111111111111110111111
# [Subtractor DEBUG @ 54.80 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000011111111111111111111111111111111111111100111111
# [Subtractor DEBUG @ 54.85 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000011111111111111111111111111111111111111101111111
# [Subtractor DEBUG @ 54.90 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000111111111111111111111111111111111111111001111111
# [Subtractor DEBUG @ 54.95 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000000111111111111111111111111111111111111111011111111
# [Subtractor DEBUG @ 55.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000001111111111111111111111111111111111111110011111111
# [Subtractor DEBUG @ 55.05 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000001111111111111111111111111111111111111110111111111
# [Subtractor DEBUG @ 55.10 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000011111111111111111111111111111111111111100111111111
# [Subtractor DEBUG @ 55.15 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000011111111111111111111111111111111111111101111111111
# [Subtractor DEBUG @ 55.20 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000111111111111111111111111111111111111111001111111111
# [Subtractor DEBUG @ 55.25 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000000111111111111111111111111111111111111111011111111111
# [Subtractor DEBUG @ 55.30 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000001111111111111111111111111111111111111110011111111111
# [Subtractor DEBUG @ 55.35 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000001111111111111111111111111111111111111110111111111111
# [Subtractor DEBUG @ 55.40 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000011111111111111111111111111111111111111100111111111111
# [Subtractor DEBUG @ 55.45 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000011111111111111111111111111111111111111101111111111111
# [Subtractor DEBUG @ 55.50 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000111111111111111111111111111111111111111001111111111111
# [Subtractor DEBUG @ 55.55 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000000111111111111111111111111111111111111111011111111111111
# [Subtractor DEBUG @ 55.60 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000001111111111111111111111111111111111111110011111111111111
# [Subtractor DEBUG @ 55.65 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000001111111111111111111111111111111111111110111111111111111
# [Subtractor DEBUG @ 55.70 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000011111111111111111111111111111111111111100111111111111111
# [Subtractor DEBUG @ 55.75 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000011111111111111111111111111111111111111101111111111111111
# [Subtractor DEBUG @ 55.80 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000111111111111111111111111111111111111111001111111111111111
# [Subtractor DEBUG @ 55.85 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000000111111111111111111111111111111111111111011111111111111111
# [Subtractor DEBUG @ 55.90 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000001111111111111111111111111111111111111110011111111111111111
# [Subtractor DEBUG @ 55.95 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000001111111111111111111111111111111111111110111111111111111111
# [Subtractor DEBUG @ 56.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000011111111111111111111111111111111111111100111111111111111111
# [Subtractor DEBUG @ 56.05 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000011111111111111111111111111111111111111101111111111111111111
# [Subtractor DEBUG @ 56.10 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000111111111111111111111111111111111111111001111111111111111111
# [Subtractor DEBUG @ 56.15 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0000111111111111111111111111111111111111111011111111111111111111
# [Subtractor DEBUG @ 56.20 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0001111111111111111111111111111111111111110011111111111111111111
# [Subtractor DEBUG @ 56.25 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0001111111111111111111111111111111111111110111111111111111111111
# [Subtractor DEBUG @ 56.30 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0011111111111111111111111111111111111111100111111111111111111111
# [Subtractor DEBUG @ 56.35 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0011111111111111111111111111111111111111101111111111111111111111
# [Subtractor DEBUG @ 56.40 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0111111111111111111111111111111111111111001111111111111111111111
# [Subtractor DEBUG @ 56.45 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 0111111111111111111111111111111111111111011111111111111111111111
# [Subtractor DEBUG @ 56.50 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111111111111111111110011111111111111111111111
# [Subtractor DEBUG @ 56.55 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111111111111111111110111111111111111111111111
# [Subtractor DEBUG @ 56.60 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111111111111111111100111111111111111111111111
# [Subtractor DEBUG @ 56.65 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111111111111111111101111111111111111111111111
# [Subtractor DEBUG @ 56.70 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111111111111111111001111111111111111111111111
# [Subtractor DEBUG @ 56.75 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111111111111111111011111111111111111111111111
# [Subtractor DEBUG @ 56.80 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111111111111111110011111111111111111111111111
# [Subtractor DEBUG @ 56.85 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111111111111111110111111111111111111111111111
# [Subtractor DEBUG @ 56.90 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111111111111111100111111111111111111111111111
# [Subtractor DEBUG @ 56.95 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111111111111111101111111111111111111111111111
# [Subtractor DEBUG @ 57.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111111111111111001111111111111111111111111111
# [Subtractor DEBUG @ 57.05 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111111111111111011111111111111111111111111111
# [Subtractor DEBUG @ 57.10 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111111111111110011111111111111111111111111111
# [Subtractor DEBUG @ 57.15 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111111111111110111111111111111111111111111111
# [Subtractor DEBUG @ 57.20 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111111111111100111111111111111111111111111111
# [Subtractor DEBUG @ 57.25 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111111111111101111111111111111111111111111111
# [Subtractor DEBUG @ 57.30 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111111111111001111111111111111111111111111111
# [Subtractor DEBUG @ 57.35 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111111111111011111111111111111111111111111111
# [Subtractor DEBUG @ 57.40 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111111111110011111111111111111111111111111111
# [Subtractor DEBUG @ 57.45 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111111111110111111111111111111111111111111111
# [Subtractor DEBUG @ 57.50 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111111111100111111111111111111111111111111111
# [Subtractor DEBUG @ 57.55 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111111111101111111111111111111111111111111111
# [Subtractor DEBUG @ 57.60 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111111111001111111111111111111111111111111111
# [Subtractor DEBUG @ 57.65 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111111111011111111111111111111111111111111111
# [Subtractor DEBUG @ 57.70 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111111110011111111111111111111111111111111111
# [Subtractor DEBUG @ 57.75 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111111110111111111111111111111111111111111111
# [Subtractor DEBUG @ 57.80 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111111100111111111111111111111111111111111111
# [Subtractor DEBUG @ 57.85 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111111101111111111111111111111111111111111111
# [Subtractor DEBUG @ 57.90 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111111001111111111111111111111111111111111111
# [Subtractor DEBUG @ 57.95 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111111011111111111111111111111111111111111111
# [Subtractor DEBUG @ 58.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111110011111111111111111111111111111111111111
# [INSTR FETCH @ 58.00 ns] PC = 52, Instruction = 10110100000000000000001010011111
#   -> Unconditional branch, Offset = 2684
# [sign_extender_dtype] in = xxxxxxxxx, out = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 58.05 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111110111111111111111111111111111111111111111
# [Subtractor DEBUG @ 58.10 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111100111111111111111111111111111111111111111
# [Subtractor DEBUG @ 58.15 ns] A = 00000000000000000000000000000000000000000000000000000000000000x0, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111101111111111111111111111111111111111111111
# [Subtractor DEBUG @ 58.20 ns] A = 00000000000000000000000000000000000000000000000000000000000000x0, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111111001111111111111111111111111111111111111111
# [Subtractor DEBUG @ 58.25 ns] A = 00000000000000000000000000000000000000000000000000000000000000x0, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 11111111111111111111110111111111111111111111111111111111111111x1
# [Subtractor DEBUG @ 58.30 ns] A = 00000000000000000000000000000000000000000000000000000000000000x0, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111110011111111111111111111111111111111111111xx1
# [Subtractor DEBUG @ 58.35 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 0000000000000000000000000000000000000000000000000000000000000001, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 1111111111111111111110111111111111111111111111111111111111111xx1
# [Subtractor DEBUG @ 58.40 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 000000000000000000000000000000000000000000000000000000000000000x, B_inverted = 1111111111111111111111111111111111111111111111111111111111111110, diff = 111111111111111111110011111111111111111111111111111111111111xxx1
# [Subtractor DEBUG @ 58.45 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 000000000000000000000000000000000000000000000000000000000000000x, B_inverted = 111111111111111111111111111111111111111111111111111111111111111x, diff = 111111111111111111110111111111111111111111111111111111111111xxxx
# [Subtractor DEBUG @ 58.50 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 000000000000000000000000000000000000000000000000000000000000000x, B_inverted = 111111111111111111111111111111111111111111111111111111111111111x, diff = 11111111111111111110011111111111111111111111111111111111111xxxxx
# [Subtractor DEBUG @ 58.55 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 111111111111111111111111111111111111111111111111111111111111111x, diff = 11111111111111111110111111111111111111111111111111111111111xxxxx
# [Subtractor DEBUG @ 58.60 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 1111111111111111110011111111111111111111111111111111111111xxxxxx
# [Subtractor DEBUG @ 58.65 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 1111111111111111110111111111111111111111111111111111111111xxxxxx
# [Subtractor DEBUG @ 58.70 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 111111111111111110011111111111111111111111111111111111111xxxxxxx
# [Subtractor DEBUG @ 58.75 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 111111111111111110111111111111111111111111111111111111111xxxxxxx
# [Subtractor DEBUG @ 58.80 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 11111111111111110011111111111111111111111111111111111111xxxxxxxx
# [Subtractor DEBUG @ 58.85 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 11111111111111110111111111111111111111111111111111111111xxxxxxxx
# [Subtractor DEBUG @ 58.90 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 1111111111111110011111111111111111111111111111111111111xxxxxxxxx
# [Subtractor DEBUG @ 58.95 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 1111111111111110111111111111111111111111111111111111111xxxxxxxxx
# [Subtractor DEBUG @ 59.00 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 111111111111110011111111111111111111111111111111111111xxxxxxxxxx
# [Subtractor DEBUG @ 59.05 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 111111111111110111111111111111111111111111111111111111xxxxxxxxxx
# [Subtractor DEBUG @ 59.10 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 11111111111110011111111111111111111111111111111111111xxxxxxxxxxx
# [Subtractor DEBUG @ 59.15 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 11111111111110111111111111111111111111111111111111111xxxxxxxxxxx
# [Subtractor DEBUG @ 59.20 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 1111111111110011111111111111111111111111111111111111xxxxxxxxxxxx
# [Subtractor DEBUG @ 59.25 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 1111111111110111111111111111111111111111111111111111xxxxxxxxxxxx
# [Subtractor DEBUG @ 59.30 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 111111111110011111111111111111111111111111111111111xxxxxxxxxxxxx
# [Subtractor DEBUG @ 59.35 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 111111111110111111111111111111111111111111111111111xxxxxxxxxxxxx
# [Subtractor DEBUG @ 59.40 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 11111111110011111111111111111111111111111111111111xxxxxxxxxxxxxx
# [Subtractor DEBUG @ 59.45 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 11111111110111111111111111111111111111111111111111xxxxxxxxxxxxxx
# [Subtractor DEBUG @ 59.50 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 1111111110011111111111111111111111111111111111111xxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 59.55 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 1111111110111111111111111111111111111111111111111xxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 59.60 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 111111110011111111111111111111111111111111111111xxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 59.65 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 111111110111111111111111111111111111111111111111xxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 59.70 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 11111110011111111111111111111111111111111111111xxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 59.75 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 11111110111111111111111111111111111111111111111xxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 59.80 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 1111110011111111111111111111111111111111111111xxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 59.85 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 1111110111111111111111111111111111111111111111xxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 59.90 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 111110011111111111111111111111111111111111111xxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 59.95 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 111110111111111111111111111111111111111111111xxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 60.00 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 11110011111111111111111111111111111111111111xxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 60.05 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 11110111111111111111111111111111111111111111xxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 60.10 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 1110011111111111111111111111111111111111111xxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 60.15 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 1110111111111111111111111111111111111111111xxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 60.20 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 110011111111111111111111111111111111111111xxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 60.25 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 110111111111111111111111111111111111111111xxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 60.30 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 10011111111111111111111111111111111111111xxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 60.35 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 10111111111111111111111111111111111111111xxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 60.40 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 0011111111111111111111111111111111111111xxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 60.45 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 0111111111111111111111111111111111111111xxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 60.50 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 011111111111111111111111111111111111111xxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 60.55 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 111111111111111111111111111111111111111xxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 60.60 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 11111111111111111111111111111111111111xxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 60.70 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 1111111111111111111111111111111111111xxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 60.80 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 111111111111111111111111111111111111xxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 60.90 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 11111111111111111111111111111111111xxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 61.00 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 1111111111111111111111111111111111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 61.10 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 111111111111111111111111111111111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 61.20 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 11111111111111111111111111111111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 61.30 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 1111111111111111111111111111111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 61.40 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 111111111111111111111111111111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 61.50 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 11111111111111111111111111111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 61.60 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 1111111111111111111111111111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 61.70 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 111111111111111111111111111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 61.80 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 11111111111111111111111111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 61.90 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 1111111111111111111111111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 62.00 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 111111111111111111111111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# ** Error: Assertion error.
#    Time: 62 ns  Scope: cpustim.DUT.imem File: ./instructmem.sv Line: 37
# [INSTR FETCH @ 62.00 ns] PC = 2736, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [Subtractor DEBUG @ 62.10 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 11111111111111111111111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 62.20 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 1111111111111111111111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 62.30 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 111111111111111111111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 62.40 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 11111111111111111111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 62.50 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 1111111111111111111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 62.60 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 111111111111111111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 62.70 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 11111111111111111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 62.80 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 1111111111111111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 62.90 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 111111111111111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 63.00 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 11111111111111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 63.10 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 1111111111111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 63.20 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 111111111111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 63.30 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 11111111111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 63.40 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 1111111111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 63.50 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 111111111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 63.60 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 11111111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 63.70 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 1111111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 63.80 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 111111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 63.90 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 11111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 64.00 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 1111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 64.10 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 64.20 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 11xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 64.30 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = 1xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [Subtractor DEBUG @ 64.40 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, B_inverted = 11111111111111111111111111111111111111111111111111111111111111xx, diff = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# ** Error: Assertion error.
#    Time: 66 ns  Scope: cpustim.DUT.imem File: ./instructmem.sv Line: 37
# [INSTR FETCH @ 66.00 ns] PC = 2740, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# ** Error: Assertion error.
#    Time: 70 ns  Scope: cpustim.DUT.imem File: ./instructmem.sv Line: 37
# [INSTR FETCH @ 70.00 ns] PC = 2744, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# ** Error: Assertion error.
#    Time: 74 ns  Scope: cpustim.DUT.imem File: ./instructmem.sv Line: 37
# [INSTR FETCH @ 74.00 ns] PC = 2748, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# ** Error: Assertion error.
#    Time: 78 ns  Scope: cpustim.DUT.imem File: ./instructmem.sv Line: 37
# [INSTR FETCH @ 78.00 ns] PC = 2752, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# ** Error: Assertion error.
#    Time: 82 ns  Scope: cpustim.DUT.imem File: ./instructmem.sv Line: 37
# [INSTR FETCH @ 82.00 ns] PC = 2756, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# ** Note: $stop    : ./cpu.sv(194)
#    Time: 82 ns  Iteration: 1  Instance: /cpustim
# Break in Module cpustim at ./cpu.sv line 194
do runlab.do
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:17:53 on May 20,2025
# vlog -reportprogress 300 ./gates/and_64bit.sv 
# -- Compiling module and_64bit
# 
# Top level modules:
# 	and_64bit
# End time: 00:17:53 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:17:53 on May 20,2025
# vlog -reportprogress 300 ./gates/not_64bit.sv 
# -- Compiling module not_64bit
# 
# Top level modules:
# 	not_64bit
# End time: 00:17:53 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:17:53 on May 20,2025
# vlog -reportprogress 300 ./gates/or_64bit.sv 
# -- Compiling module or_64bit
# 
# Top level modules:
# 	or_64bit
# End time: 00:17:54 on May 20,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:17:54 on May 20,2025
# vlog -reportprogress 300 ./gates/xor_64bit.sv 
# -- Compiling module xor_64bit
# 
# Top level modules:
# 	xor_64bit
# End time: 00:17:54 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:17:54 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux2_1.sv 
# -- Compiling module mux2_1
# -- Compiling module mux2_1_testbench
# 
# Top level modules:
# 	mux2_1_testbench
# End time: 00:17:54 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:17:54 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux2_1_5bit.sv 
# -- Compiling module mux2_1_5bit
# 
# Top level modules:
# 	mux2_1_5bit
# End time: 00:17:54 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:17:54 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux2_1_64bit.sv 
# -- Compiling module mux2_1_64bit
# 
# Top level modules:
# 	mux2_1_64bit
# End time: 00:17:54 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:17:54 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux4_1.sv 
# -- Compiling module mux4_1
# -- Compiling module mux4_1_testbench
# 
# Top level modules:
# 	mux4_1_testbench
# End time: 00:17:54 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:17:54 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux4_1_64bit.sv 
# -- Compiling module mux4_1_64bit
# 
# Top level modules:
# 	mux4_1_64bit
# End time: 00:17:54 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:17:54 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux8_1.sv 
# -- Compiling module mux8_1
# -- Compiling module mux8_1_testbench
# 
# Top level modules:
# 	mux8_1_testbench
# End time: 00:17:54 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:17:54 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux16_1.sv 
# -- Compiling module mux16_1
# -- Compiling module mux16_1_testbench
# 
# Top level modules:
# 	mux16_1_testbench
# End time: 00:17:54 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:17:54 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux32_1.sv 
# -- Compiling module mux32_1
# -- Compiling module mux32_1_testbench
# 
# Top level modules:
# 	mux32_1_testbench
# End time: 00:17:54 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:17:54 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux32_1_64bit.sv 
# -- Compiling module mux32_1_64bit
# 
# Top level modules:
# 	mux32_1_64bit
# End time: 00:17:54 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:17:54 on May 20,2025
# vlog -reportprogress 300 ./decoders/decoder_3to8.sv 
# -- Compiling module decoder_3to8
# 
# Top level modules:
# 	decoder_3to8
# End time: 00:17:54 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:17:54 on May 20,2025
# vlog -reportprogress 300 ./decoders/decoder_5to32.sv 
# -- Compiling module decoder_5to32
# 
# Top level modules:
# 	decoder_5to32
# End time: 00:17:54 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:17:54 on May 20,2025
# vlog -reportprogress 300 ./utils/dff.sv 
# -- Compiling module D_FF
# 
# Top level modules:
# 	D_FF
# End time: 00:17:54 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:17:54 on May 20,2025
# vlog -reportprogress 300 ./utils/dff_en.sv 
# -- Compiling module D_FF_en
# 
# Top level modules:
# 	D_FF_en
# End time: 00:17:54 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:17:54 on May 20,2025
# vlog -reportprogress 300 ./register_64bit.sv 
# -- Compiling module register_64bit
# 
# Top level modules:
# 	register_64bit
# End time: 00:17:54 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:17:54 on May 20,2025
# vlog -reportprogress 300 ./regfile.sv 
# -- Compiling module regfile
# 
# Top level modules:
# 	regfile
# End time: 00:17:55 on May 20,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:17:55 on May 20,2025
# vlog -reportprogress 300 ./adders/adder.sv 
# -- Compiling module adder
# 
# Top level modules:
# 	adder
# End time: 00:17:55 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:17:55 on May 20,2025
# vlog -reportprogress 300 ./adders/adder_32bit.sv 
# -- Compiling module adder_32bit
# 
# Top level modules:
# 	adder_32bit
# End time: 00:17:55 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:17:55 on May 20,2025
# vlog -reportprogress 300 ./adders/adder_64bit.sv 
# -- Compiling module adder_64bit
# 
# Top level modules:
# 	adder_64bit
# End time: 00:17:55 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:17:55 on May 20,2025
# vlog -reportprogress 300 ./subtractor_64bit.sv 
# -- Compiling module subtractor_64bit
# 
# Top level modules:
# 	subtractor_64bit
# End time: 00:17:55 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:17:55 on May 20,2025
# vlog -reportprogress 300 ./utils/immediate_extenders.sv 
# -- Compiling module buf1
# -- Compiling module zero_extender_itype
# -- Compiling module sign_extender_dtype
# -- Compiling module sign_extender_btype
# -- Compiling module sign_extender_cbtype
# 
# Top level modules:
# 	zero_extender_itype
# 	sign_extender_dtype
# 	sign_extender_btype
# 	sign_extender_cbtype
# End time: 00:17:55 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:17:55 on May 20,2025
# vlog -reportprogress 300 ./utils/left_shifter.sv 
# -- Compiling module left_shifter_2bits
# 
# Top level modules:
# 	left_shifter_2bits
# End time: 00:17:55 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:17:55 on May 20,2025
# vlog -reportprogress 300 ./utils/zero_64bits.sv 
# -- Compiling module zero_64bits
# 
# Top level modules:
# 	zero_64bits
# End time: 00:17:55 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:17:55 on May 20,2025
# vlog -reportprogress 300 ./alu.sv 
# -- Compiling module alu
# 
# Top level modules:
# 	alu
# End time: 00:17:55 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:17:55 on May 20,2025
# vlog -reportprogress 300 ./alustim.sv 
# -- Compiling module alustim
# 
# Top level modules:
# 	alustim
# End time: 00:17:55 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:17:55 on May 20,2025
# vlog -reportprogress 300 ./datamem.sv 
# -- Compiling module datamem
# -- Compiling module datamem_testbench
# 
# Top level modules:
# 	datamem_testbench
# End time: 00:17:55 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:17:55 on May 20,2025
# vlog -reportprogress 300 ./instructmem.sv 
# -- Compiling module instructmem
# -- Compiling module instructmem_testbench
# 
# Top level modules:
# 	instructmem_testbench
# End time: 00:17:55 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:17:55 on May 20,2025
# vlog -reportprogress 300 ./program_counter.sv 
# -- Compiling module program_counter
# -- Compiling module tb_program_counter
# 
# Top level modules:
# 	tb_program_counter
# End time: 00:17:55 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:17:55 on May 20,2025
# vlog -reportprogress 300 ./control_unit.sv 
# -- Compiling module control_unit
# 
# Top level modules:
# 	control_unit
# End time: 00:17:55 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:17:55 on May 20,2025
# vlog -reportprogress 300 ./cpu.sv 
# -- Compiling module cpu
# -- Compiling module cpustim
# 
# Top level modules:
# 	cpustim
# End time: 00:17:55 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 00:18:00 on May 20,2025, Elapsed time: 0:07:40
# Errors: 6, Warnings: 1
# vsim -voptargs=""+acc"" -t 1ps -lib work cpustim 
# Start time: 00:18:00 on May 20,2025
# Loading sv_std.std
# Loading work.cpustim
# Loading work.cpu
# Loading work.program_counter
# Loading work.adder_64bit
# Loading work.adder
# Loading work.mux4_1_64bit
# Loading work.instructmem
# Loading work.sign_extender_btype
# Loading work.sign_extender_cbtype
# Loading work.left_shifter_2bits
# Loading work.control_unit
# Loading work.mux2_1_5bit
# Loading work.regfile
# Loading work.decoder_5to32
# Loading work.and_64bit
# Loading work.mux32_1_64bit
# Loading work.zero_64bits
# Loading work.zero_extender_itype
# Loading work.sign_extender_dtype
# Loading work.mux2_1_64bit
# Loading work.alu
# Loading work.decoder_3to8
# Loading work.subtractor_64bit
# Loading work.not_64bit
# Loading work.or_64bit
# Loading work.xor_64bit
# Loading work.datamem
# Loading work.mux4_1
# Loading work.mux2_1
# Loading work.D_FF
# Loading work.buf1
# Loading work.mux32_1
# Loading work.mux16_1
# Loading work.mux8_1
# Loading work.register_64bit
# ** Warning: Design size of 9097 instances exceeds ModelSim - Intel FPGA Starter Edition recommended capacity.
# This may because you are loading cell libraries which are not recommended with
# the ModelSim - Intel FPGA Edition. Expect performance to be adversely affected.
# .main_pane.wave.interior.cs.body.pw.wf
# .main_pane.structure.interior.cs.body.struct
# .main_pane.objects.interior.cs.body.tree
# Running benchmark: ./benchmarks/test03_CbzB.arm
# [INSTR FETCH @ 2.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 2.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [sign_extender_dtype] in = 000000000, out = 0000000000000000000000000000000000000000000000000000000000000000
# [INSTR FETCH @ 6.00 ns] PC = 0, Instruction = 10010001000000000000011111100000
#   -> PC+4 sequential
# [ALU DEBUG @ 6.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000001
# [INSTR FETCH @ 10.00 ns] PC = 4, Instruction = 10010001000000000000001111100001
#   -> PC+4 sequential
# [ALU DEBUG @ 10.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000000
# [INSTR FETCH @ 14.00 ns] PC = 8, Instruction = 10010001000000000000001111100010
#   -> PC+4 sequential
# [ALU DEBUG @ 14.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000000
# [INSTR FETCH @ 18.00 ns] PC = 12, Instruction = 10010001000000000000001111100011
#   -> PC+4 sequential
# [ALU DEBUG @ 18.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000000
# [INSTR FETCH @ 22.00 ns] PC = 16, Instruction = 10010001000000000000001111100100
#   -> PC+4 sequential
# [ALU DEBUG @ 22.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000000
# [INSTR FETCH @ 26.00 ns] PC = 20, Instruction = 10010001000000000000001111100101
#   -> PC+4 sequential
# [ALU DEBUG @ 26.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000000
# [INSTR FETCH @ 30.00 ns] PC = 24, Instruction = 00010100000000000000000000001100
#   -> PC+4 sequential
# [ALU DEBUG @ 30.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 000, result = 0000000000000000000000000000000000000000000000000000000000000000
# [INSTR FETCH @ 34.00 ns] PC = 28, Instruction = 10010001000000000000010001000010
#   -> PC+4 sequential
# [ALU DEBUG @ 34.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000001
# [INSTR FETCH @ 38.00 ns] PC = 32, Instruction = 10010001000000000000010010100101
#   -> PC+4 sequential
# [ALU DEBUG @ 38.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000001
# [INSTR FETCH @ 42.00 ns] PC = 36, Instruction = 10010001000000000000011111100001
#   -> PC+4 sequential
# [ALU DEBUG @ 42.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000001
# [sign_extender_dtype] in = 111111111, out = 1111111111111111111111111111111111111111111111111111111111111111
# [INSTR FETCH @ 46.00 ns] PC = 40, Instruction = 00010111111111111111111111111111
#   -> PC+4 sequential
# [ALU DEBUG @ 46.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 000, result = 0000000000000000000000000000000000000000000000000000000000000000
# [sign_extender_dtype] in = 000000000, out = 0000000000000000000000000000000000000000000000000000000000000000
# [INSTR FETCH @ 50.00 ns] PC = 44, Instruction = 10010001000000000000001111111111
#   -> PC+4 sequential
# [ALU DEBUG @ 50.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000000
# [INSTR FETCH @ 54.00 ns] PC = 48, Instruction = 10010001000000000000100010000100
#   -> PC+4 sequential
# [ALU DEBUG @ 54.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000010
# [INSTR FETCH @ 58.00 ns] PC = 52, Instruction = 10110100000000000000001010011111
#   -> Unconditional branch, Offset = 2684
# [ALU DEBUG @ 58.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, cntrl = 011, result = 1111111111111111111111111001111111111111111111111111111111111111
# [sign_extender_dtype] in = xxxxxxxxx, out = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# ** Error: Assertion error.
#    Time: 62 ns  Scope: cpustim.DUT.imem File: ./instructmem.sv Line: 37
# [INSTR FETCH @ 62.00 ns] PC = 2736, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 62.00 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, cntrl = 000, result = 00000000000000000000000000000000000000000000000000000000000000xx
# ** Error: Assertion error.
#    Time: 66 ns  Scope: cpustim.DUT.imem File: ./instructmem.sv Line: 37
# [INSTR FETCH @ 66.00 ns] PC = 2740, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 66.00 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, cntrl = 000, result = 00000000000000000000000000000000000000000000000000000000000000xx
# ** Error: Assertion error.
#    Time: 70 ns  Scope: cpustim.DUT.imem File: ./instructmem.sv Line: 37
# [INSTR FETCH @ 70.00 ns] PC = 2744, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 70.00 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, cntrl = 000, result = 00000000000000000000000000000000000000000000000000000000000000xx
# ** Error: Assertion error.
#    Time: 74 ns  Scope: cpustim.DUT.imem File: ./instructmem.sv Line: 37
# [INSTR FETCH @ 74.00 ns] PC = 2748, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 74.00 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, cntrl = 000, result = 00000000000000000000000000000000000000000000000000000000000000xx
# ** Error: Assertion error.
#    Time: 78 ns  Scope: cpustim.DUT.imem File: ./instructmem.sv Line: 37
# [INSTR FETCH @ 78.00 ns] PC = 2752, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 78.00 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, cntrl = 000, result = 00000000000000000000000000000000000000000000000000000000000000xx
# ** Error: Assertion error.
#    Time: 82 ns  Scope: cpustim.DUT.imem File: ./instructmem.sv Line: 37
# [INSTR FETCH @ 82.00 ns] PC = 2756, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 82.00 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, cntrl = 000, result = 00000000000000000000000000000000000000000000000000000000000000xx
# ** Note: $stop    : ./cpu.sv(199)
#    Time: 82 ns  Iteration: 1  Instance: /cpustim
# Break in Module cpustim at ./cpu.sv line 199
do runlab.do
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:19:23 on May 20,2025
# vlog -reportprogress 300 ./gates/and_64bit.sv 
# -- Compiling module and_64bit
# 
# Top level modules:
# 	and_64bit
# End time: 00:19:23 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:19:23 on May 20,2025
# vlog -reportprogress 300 ./gates/not_64bit.sv 
# -- Compiling module not_64bit
# 
# Top level modules:
# 	not_64bit
# End time: 00:19:23 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:19:23 on May 20,2025
# vlog -reportprogress 300 ./gates/or_64bit.sv 
# -- Compiling module or_64bit
# 
# Top level modules:
# 	or_64bit
# End time: 00:19:23 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:19:23 on May 20,2025
# vlog -reportprogress 300 ./gates/xor_64bit.sv 
# -- Compiling module xor_64bit
# 
# Top level modules:
# 	xor_64bit
# End time: 00:19:23 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:19:23 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux2_1.sv 
# -- Compiling module mux2_1
# -- Compiling module mux2_1_testbench
# 
# Top level modules:
# 	mux2_1_testbench
# End time: 00:19:23 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:19:23 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux2_1_5bit.sv 
# -- Compiling module mux2_1_5bit
# 
# Top level modules:
# 	mux2_1_5bit
# End time: 00:19:23 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:19:23 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux2_1_64bit.sv 
# -- Compiling module mux2_1_64bit
# 
# Top level modules:
# 	mux2_1_64bit
# End time: 00:19:23 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:19:23 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux4_1.sv 
# -- Compiling module mux4_1
# -- Compiling module mux4_1_testbench
# 
# Top level modules:
# 	mux4_1_testbench
# End time: 00:19:23 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:19:23 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux4_1_64bit.sv 
# -- Compiling module mux4_1_64bit
# 
# Top level modules:
# 	mux4_1_64bit
# End time: 00:19:23 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:19:23 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux8_1.sv 
# -- Compiling module mux8_1
# -- Compiling module mux8_1_testbench
# 
# Top level modules:
# 	mux8_1_testbench
# End time: 00:19:23 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:19:23 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux16_1.sv 
# -- Compiling module mux16_1
# -- Compiling module mux16_1_testbench
# 
# Top level modules:
# 	mux16_1_testbench
# End time: 00:19:23 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:19:23 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux32_1.sv 
# -- Compiling module mux32_1
# -- Compiling module mux32_1_testbench
# 
# Top level modules:
# 	mux32_1_testbench
# End time: 00:19:23 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:19:23 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux32_1_64bit.sv 
# -- Compiling module mux32_1_64bit
# 
# Top level modules:
# 	mux32_1_64bit
# End time: 00:19:23 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:19:23 on May 20,2025
# vlog -reportprogress 300 ./decoders/decoder_3to8.sv 
# -- Compiling module decoder_3to8
# 
# Top level modules:
# 	decoder_3to8
# End time: 00:19:23 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:19:23 on May 20,2025
# vlog -reportprogress 300 ./decoders/decoder_5to32.sv 
# -- Compiling module decoder_5to32
# 
# Top level modules:
# 	decoder_5to32
# End time: 00:19:23 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:19:23 on May 20,2025
# vlog -reportprogress 300 ./utils/dff.sv 
# -- Compiling module D_FF
# 
# Top level modules:
# 	D_FF
# End time: 00:19:23 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:19:23 on May 20,2025
# vlog -reportprogress 300 ./utils/dff_en.sv 
# -- Compiling module D_FF_en
# 
# Top level modules:
# 	D_FF_en
# End time: 00:19:24 on May 20,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:19:24 on May 20,2025
# vlog -reportprogress 300 ./register_64bit.sv 
# -- Compiling module register_64bit
# 
# Top level modules:
# 	register_64bit
# End time: 00:19:24 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:19:24 on May 20,2025
# vlog -reportprogress 300 ./regfile.sv 
# -- Compiling module regfile
# 
# Top level modules:
# 	regfile
# End time: 00:19:24 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:19:24 on May 20,2025
# vlog -reportprogress 300 ./adders/adder.sv 
# -- Compiling module adder
# 
# Top level modules:
# 	adder
# End time: 00:19:24 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:19:24 on May 20,2025
# vlog -reportprogress 300 ./adders/adder_32bit.sv 
# -- Compiling module adder_32bit
# 
# Top level modules:
# 	adder_32bit
# End time: 00:19:24 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:19:24 on May 20,2025
# vlog -reportprogress 300 ./adders/adder_64bit.sv 
# -- Compiling module adder_64bit
# 
# Top level modules:
# 	adder_64bit
# End time: 00:19:24 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:19:24 on May 20,2025
# vlog -reportprogress 300 ./subtractor_64bit.sv 
# -- Compiling module subtractor_64bit
# 
# Top level modules:
# 	subtractor_64bit
# End time: 00:19:24 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:19:24 on May 20,2025
# vlog -reportprogress 300 ./utils/immediate_extenders.sv 
# -- Compiling module buf1
# -- Compiling module zero_extender_itype
# -- Compiling module sign_extender_dtype
# -- Compiling module sign_extender_btype
# -- Compiling module sign_extender_cbtype
# 
# Top level modules:
# 	zero_extender_itype
# 	sign_extender_dtype
# 	sign_extender_btype
# 	sign_extender_cbtype
# End time: 00:19:24 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:19:24 on May 20,2025
# vlog -reportprogress 300 ./utils/left_shifter.sv 
# -- Compiling module left_shifter_2bits
# 
# Top level modules:
# 	left_shifter_2bits
# End time: 00:19:24 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:19:24 on May 20,2025
# vlog -reportprogress 300 ./utils/zero_64bits.sv 
# -- Compiling module zero_64bits
# 
# Top level modules:
# 	zero_64bits
# End time: 00:19:24 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:19:24 on May 20,2025
# vlog -reportprogress 300 ./alu.sv 
# -- Compiling module alu
# 
# Top level modules:
# 	alu
# End time: 00:19:24 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:19:24 on May 20,2025
# vlog -reportprogress 300 ./alustim.sv 
# -- Compiling module alustim
# 
# Top level modules:
# 	alustim
# End time: 00:19:24 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:19:24 on May 20,2025
# vlog -reportprogress 300 ./datamem.sv 
# -- Compiling module datamem
# -- Compiling module datamem_testbench
# 
# Top level modules:
# 	datamem_testbench
# End time: 00:19:24 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:19:24 on May 20,2025
# vlog -reportprogress 300 ./instructmem.sv 
# -- Compiling module instructmem
# -- Compiling module instructmem_testbench
# 
# Top level modules:
# 	instructmem_testbench
# End time: 00:19:24 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:19:24 on May 20,2025
# vlog -reportprogress 300 ./program_counter.sv 
# -- Compiling module program_counter
# -- Compiling module tb_program_counter
# 
# Top level modules:
# 	tb_program_counter
# End time: 00:19:24 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:19:24 on May 20,2025
# vlog -reportprogress 300 ./control_unit.sv 
# -- Compiling module control_unit
# 
# Top level modules:
# 	control_unit
# End time: 00:19:24 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:19:24 on May 20,2025
# vlog -reportprogress 300 ./cpu.sv 
# -- Compiling module cpu
# -- Compiling module cpustim
# 
# Top level modules:
# 	cpustim
# End time: 00:19:25 on May 20,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# End time: 00:19:27 on May 20,2025, Elapsed time: 0:01:27
# Errors: 6, Warnings: 1
# vsim -voptargs=""+acc"" -t 1ps -lib work cpustim 
# Start time: 00:19:27 on May 20,2025
# Loading sv_std.std
# Loading work.cpustim
# Loading work.cpu
# Loading work.program_counter
# Loading work.adder_64bit
# Loading work.adder
# Loading work.mux4_1_64bit
# Loading work.instructmem
# Loading work.sign_extender_btype
# Loading work.sign_extender_cbtype
# Loading work.left_shifter_2bits
# Loading work.control_unit
# Loading work.mux2_1_5bit
# Loading work.regfile
# Loading work.decoder_5to32
# Loading work.and_64bit
# Loading work.mux32_1_64bit
# Loading work.zero_64bits
# Loading work.zero_extender_itype
# Loading work.sign_extender_dtype
# Loading work.mux2_1_64bit
# Loading work.alu
# Loading work.decoder_3to8
# Loading work.subtractor_64bit
# Loading work.not_64bit
# Loading work.or_64bit
# Loading work.xor_64bit
# Loading work.datamem
# Loading work.mux4_1
# Loading work.mux2_1
# Loading work.D_FF
# Loading work.buf1
# Loading work.mux32_1
# Loading work.mux16_1
# Loading work.mux8_1
# Loading work.register_64bit
# ** Warning: Design size of 9097 instances exceeds ModelSim - Intel FPGA Starter Edition recommended capacity.
# This may because you are loading cell libraries which are not recommended with
# the ModelSim - Intel FPGA Edition. Expect performance to be adversely affected.
# .main_pane.wave.interior.cs.body.pw.wf
# .main_pane.structure.interior.cs.body.struct
# .main_pane.objects.interior.cs.body.tree
# Running benchmark: ./benchmarks/test03_CbzB.arm
# [INSTR FETCH @ 2.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 2.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 6.00 ns] PC = 0, Instruction = 10010001000000000000011111100000
#   -> PC+4 sequential
# [ALU DEBUG @ 6.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000001
# [INSTR FETCH @ 10.00 ns] PC = 4, Instruction = 10010001000000000000001111100001
#   -> PC+4 sequential
# [ALU DEBUG @ 10.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000000
# [INSTR FETCH @ 14.00 ns] PC = 8, Instruction = 10010001000000000000001111100010
#   -> PC+4 sequential
# [ALU DEBUG @ 14.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000000
# [INSTR FETCH @ 18.00 ns] PC = 12, Instruction = 10010001000000000000001111100011
#   -> PC+4 sequential
# [ALU DEBUG @ 18.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000000
# [INSTR FETCH @ 22.00 ns] PC = 16, Instruction = 10010001000000000000001111100100
#   -> PC+4 sequential
# [ALU DEBUG @ 22.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000000
# [INSTR FETCH @ 26.00 ns] PC = 20, Instruction = 10010001000000000000001111100101
#   -> PC+4 sequential
# [ALU DEBUG @ 26.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000000
# [INSTR FETCH @ 30.00 ns] PC = 24, Instruction = 00010100000000000000000000001100
#   -> PC+4 sequential
# [ALU DEBUG @ 30.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 000, result = 0000000000000000000000000000000000000000000000000000000000000000
# [INSTR FETCH @ 34.00 ns] PC = 28, Instruction = 10010001000000000000010001000010
#   -> PC+4 sequential
# [ALU DEBUG @ 34.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000001
# [INSTR FETCH @ 38.00 ns] PC = 32, Instruction = 10010001000000000000010010100101
#   -> PC+4 sequential
# [ALU DEBUG @ 38.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000001
# [INSTR FETCH @ 42.00 ns] PC = 36, Instruction = 10010001000000000000011111100001
#   -> PC+4 sequential
# [ALU DEBUG @ 42.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000001
# [INSTR FETCH @ 46.00 ns] PC = 40, Instruction = 00010111111111111111111111111111
#   -> PC+4 sequential
# [ALU DEBUG @ 46.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 000, result = 0000000000000000000000000000000000000000000000000000000000000000
# [INSTR FETCH @ 50.00 ns] PC = 44, Instruction = 10010001000000000000001111111111
#   -> PC+4 sequential
# [ALU DEBUG @ 50.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000000
# [INSTR FETCH @ 54.00 ns] PC = 48, Instruction = 10010001000000000000100010000100
#   -> PC+4 sequential
# [ALU DEBUG @ 54.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000010, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000010
# [INSTR FETCH @ 58.00 ns] PC = 52, Instruction = 10110100000000000000001010011111
#   -> Unconditional branch, Offset = 2684
# [ALU DEBUG @ 58.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, cntrl = 011, result = 1111111111111111111111111001111111111111111111111111111111111111
# ** Error: Assertion error.
#    Time: 62 ns  Scope: cpustim.DUT.imem File: ./instructmem.sv Line: 37
# [INSTR FETCH @ 62.00 ns] PC = 2736, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 62.00 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, cntrl = 000, result = 00000000000000000000000000000000000000000000000000000000000000xx
# ** Error: Assertion error.
#    Time: 66 ns  Scope: cpustim.DUT.imem File: ./instructmem.sv Line: 37
# [INSTR FETCH @ 66.00 ns] PC = 2740, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 66.00 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, cntrl = 000, result = 00000000000000000000000000000000000000000000000000000000000000xx
# ** Error: Assertion error.
#    Time: 70 ns  Scope: cpustim.DUT.imem File: ./instructmem.sv Line: 37
# [INSTR FETCH @ 70.00 ns] PC = 2744, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 70.00 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, cntrl = 000, result = 00000000000000000000000000000000000000000000000000000000000000xx
# ** Error: Assertion error.
#    Time: 74 ns  Scope: cpustim.DUT.imem File: ./instructmem.sv Line: 37
# [INSTR FETCH @ 74.00 ns] PC = 2748, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 74.00 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, cntrl = 000, result = 00000000000000000000000000000000000000000000000000000000000000xx
# ** Error: Assertion error.
#    Time: 78 ns  Scope: cpustim.DUT.imem File: ./instructmem.sv Line: 37
# [INSTR FETCH @ 78.00 ns] PC = 2752, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 78.00 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, cntrl = 000, result = 00000000000000000000000000000000000000000000000000000000000000xx
# ** Error: Assertion error.
#    Time: 82 ns  Scope: cpustim.DUT.imem File: ./instructmem.sv Line: 37
# [INSTR FETCH @ 82.00 ns] PC = 2756, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 82.00 ns] A = 00000000000000000000000000000000000000000000000000000000000000xx, B = 00000000000000000000000000000000000000000000000000000000000000xx, cntrl = 000, result = 00000000000000000000000000000000000000000000000000000000000000xx
# ** Note: $stop    : ./cpu.sv(199)
#    Time: 82 ns  Iteration: 1  Instance: /cpustim
# Break in Module cpustim at ./cpu.sv line 199
do runlab.do
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:20:24 on May 20,2025
# vlog -reportprogress 300 ./gates/and_64bit.sv 
# -- Compiling module and_64bit
# 
# Top level modules:
# 	and_64bit
# End time: 00:20:24 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:20:24 on May 20,2025
# vlog -reportprogress 300 ./gates/not_64bit.sv 
# -- Compiling module not_64bit
# 
# Top level modules:
# 	not_64bit
# End time: 00:20:24 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:20:24 on May 20,2025
# vlog -reportprogress 300 ./gates/or_64bit.sv 
# -- Compiling module or_64bit
# 
# Top level modules:
# 	or_64bit
# End time: 00:20:25 on May 20,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:20:25 on May 20,2025
# vlog -reportprogress 300 ./gates/xor_64bit.sv 
# -- Compiling module xor_64bit
# 
# Top level modules:
# 	xor_64bit
# End time: 00:20:25 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:20:25 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux2_1.sv 
# -- Compiling module mux2_1
# -- Compiling module mux2_1_testbench
# 
# Top level modules:
# 	mux2_1_testbench
# End time: 00:20:25 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:20:25 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux2_1_5bit.sv 
# -- Compiling module mux2_1_5bit
# 
# Top level modules:
# 	mux2_1_5bit
# End time: 00:20:25 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:20:25 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux2_1_64bit.sv 
# -- Compiling module mux2_1_64bit
# 
# Top level modules:
# 	mux2_1_64bit
# End time: 00:20:25 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:20:25 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux4_1.sv 
# -- Compiling module mux4_1
# -- Compiling module mux4_1_testbench
# 
# Top level modules:
# 	mux4_1_testbench
# End time: 00:20:25 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:20:25 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux4_1_64bit.sv 
# -- Compiling module mux4_1_64bit
# 
# Top level modules:
# 	mux4_1_64bit
# End time: 00:20:25 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:20:25 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux8_1.sv 
# -- Compiling module mux8_1
# -- Compiling module mux8_1_testbench
# 
# Top level modules:
# 	mux8_1_testbench
# End time: 00:20:25 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:20:25 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux16_1.sv 
# -- Compiling module mux16_1
# -- Compiling module mux16_1_testbench
# 
# Top level modules:
# 	mux16_1_testbench
# End time: 00:20:25 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:20:25 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux32_1.sv 
# -- Compiling module mux32_1
# -- Compiling module mux32_1_testbench
# 
# Top level modules:
# 	mux32_1_testbench
# End time: 00:20:25 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:20:25 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux32_1_64bit.sv 
# -- Compiling module mux32_1_64bit
# 
# Top level modules:
# 	mux32_1_64bit
# End time: 00:20:25 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:20:25 on May 20,2025
# vlog -reportprogress 300 ./decoders/decoder_3to8.sv 
# -- Compiling module decoder_3to8
# 
# Top level modules:
# 	decoder_3to8
# End time: 00:20:25 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:20:25 on May 20,2025
# vlog -reportprogress 300 ./decoders/decoder_5to32.sv 
# -- Compiling module decoder_5to32
# 
# Top level modules:
# 	decoder_5to32
# End time: 00:20:25 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:20:25 on May 20,2025
# vlog -reportprogress 300 ./utils/dff.sv 
# -- Compiling module D_FF
# 
# Top level modules:
# 	D_FF
# End time: 00:20:25 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:20:25 on May 20,2025
# vlog -reportprogress 300 ./utils/dff_en.sv 
# -- Compiling module D_FF_en
# 
# Top level modules:
# 	D_FF_en
# End time: 00:20:25 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:20:25 on May 20,2025
# vlog -reportprogress 300 ./register_64bit.sv 
# -- Compiling module register_64bit
# 
# Top level modules:
# 	register_64bit
# End time: 00:20:25 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:20:25 on May 20,2025
# vlog -reportprogress 300 ./regfile.sv 
# -- Compiling module regfile
# 
# Top level modules:
# 	regfile
# End time: 00:20:25 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:20:25 on May 20,2025
# vlog -reportprogress 300 ./adders/adder.sv 
# -- Compiling module adder
# 
# Top level modules:
# 	adder
# End time: 00:20:26 on May 20,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:20:26 on May 20,2025
# vlog -reportprogress 300 ./adders/adder_32bit.sv 
# -- Compiling module adder_32bit
# 
# Top level modules:
# 	adder_32bit
# End time: 00:20:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:20:26 on May 20,2025
# vlog -reportprogress 300 ./adders/adder_64bit.sv 
# -- Compiling module adder_64bit
# 
# Top level modules:
# 	adder_64bit
# End time: 00:20:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:20:26 on May 20,2025
# vlog -reportprogress 300 ./subtractor_64bit.sv 
# -- Compiling module subtractor_64bit
# 
# Top level modules:
# 	subtractor_64bit
# End time: 00:20:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:20:26 on May 20,2025
# vlog -reportprogress 300 ./utils/immediate_extenders.sv 
# -- Compiling module buf1
# -- Compiling module zero_extender_itype
# -- Compiling module sign_extender_dtype
# -- Compiling module sign_extender_btype
# -- Compiling module sign_extender_cbtype
# 
# Top level modules:
# 	zero_extender_itype
# 	sign_extender_dtype
# 	sign_extender_btype
# 	sign_extender_cbtype
# End time: 00:20:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:20:26 on May 20,2025
# vlog -reportprogress 300 ./utils/left_shifter.sv 
# -- Compiling module left_shifter_2bits
# 
# Top level modules:
# 	left_shifter_2bits
# End time: 00:20:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:20:26 on May 20,2025
# vlog -reportprogress 300 ./utils/zero_64bits.sv 
# -- Compiling module zero_64bits
# 
# Top level modules:
# 	zero_64bits
# End time: 00:20:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:20:26 on May 20,2025
# vlog -reportprogress 300 ./alu.sv 
# -- Compiling module alu
# 
# Top level modules:
# 	alu
# End time: 00:20:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:20:26 on May 20,2025
# vlog -reportprogress 300 ./alustim.sv 
# -- Compiling module alustim
# 
# Top level modules:
# 	alustim
# End time: 00:20:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:20:26 on May 20,2025
# vlog -reportprogress 300 ./datamem.sv 
# -- Compiling module datamem
# -- Compiling module datamem_testbench
# 
# Top level modules:
# 	datamem_testbench
# End time: 00:20:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:20:26 on May 20,2025
# vlog -reportprogress 300 ./instructmem.sv 
# -- Compiling module instructmem
# -- Compiling module instructmem_testbench
# 
# Top level modules:
# 	instructmem_testbench
# End time: 00:20:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:20:26 on May 20,2025
# vlog -reportprogress 300 ./program_counter.sv 
# -- Compiling module program_counter
# -- Compiling module tb_program_counter
# 
# Top level modules:
# 	tb_program_counter
# End time: 00:20:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:20:26 on May 20,2025
# vlog -reportprogress 300 ./control_unit.sv 
# -- Compiling module control_unit
# 
# Top level modules:
# 	control_unit
# End time: 00:20:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:20:26 on May 20,2025
# vlog -reportprogress 300 ./cpu.sv 
# -- Compiling module cpu
# -- Compiling module cpustim
# 
# Top level modules:
# 	cpustim
# End time: 00:20:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 00:20:29 on May 20,2025, Elapsed time: 0:01:02
# Errors: 6, Warnings: 1
# vsim -voptargs=""+acc"" -t 1ps -lib work cpustim 
# Start time: 00:20:29 on May 20,2025
# Loading sv_std.std
# Loading work.cpustim
# Loading work.cpu
# Loading work.program_counter
# Loading work.adder_64bit
# Loading work.adder
# Loading work.mux4_1_64bit
# Loading work.instructmem
# Loading work.sign_extender_btype
# Loading work.sign_extender_cbtype
# Loading work.left_shifter_2bits
# Loading work.control_unit
# Loading work.mux2_1_5bit
# Loading work.regfile
# Loading work.decoder_5to32
# Loading work.and_64bit
# Loading work.mux32_1_64bit
# Loading work.zero_64bits
# Loading work.zero_extender_itype
# Loading work.sign_extender_dtype
# Loading work.mux2_1_64bit
# Loading work.alu
# Loading work.decoder_3to8
# Loading work.subtractor_64bit
# Loading work.not_64bit
# Loading work.or_64bit
# Loading work.xor_64bit
# Loading work.datamem
# Loading work.mux4_1
# Loading work.mux2_1
# Loading work.D_FF
# Loading work.buf1
# Loading work.mux32_1
# Loading work.mux16_1
# Loading work.mux8_1
# Loading work.register_64bit
# ** Warning: Design size of 9097 instances exceeds ModelSim - Intel FPGA Starter Edition recommended capacity.
# This may because you are loading cell libraries which are not recommended with
# the ModelSim - Intel FPGA Edition. Expect performance to be adversely affected.
# .main_pane.wave.interior.cs.body.pw.wf
# .main_pane.structure.interior.cs.body.struct
# .main_pane.objects.interior.cs.body.tree
# Running benchmark: ./benchmarks/test02_AddsSubs.arm
# [INSTR FETCH @ 2.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 2.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 6.00 ns] PC = 0, Instruction = 10010001000000000000011111100000
#   -> PC+4 sequential
# [ALU DEBUG @ 6.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000001
# [INSTR FETCH @ 10.00 ns] PC = 4, Instruction = 11101011000000000000001111100001
#   -> PC+4 sequential
# [ALU DEBUG @ 10.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 011, result = 1111111111111111111111111100000110000000000000000000000000000000
# [INSTR FETCH @ 14.00 ns] PC = 8, Instruction = 11101011000000010000000000000010
#   -> PC+4 sequential
# [ALU DEBUG @ 14.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 011, result = 0110000000000000000000000000000000000000000000000000000000000001
# [INSTR FETCH @ 18.00 ns] PC = 12, Instruction = 11101011000000100000000000100011
#   -> PC+4 sequential
# [ALU DEBUG @ 18.00 ns] A = 1111111111111111111111111111000001100000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 011, result = 1111111111111111111111111111000001100000000000000000000000000000
# [INSTR FETCH @ 22.00 ns] PC = 16, Instruction = 11101011000000010000000001100100
#   -> PC+4 sequential
# [ALU DEBUG @ 22.00 ns] A = 1111111111111111111111111111000001000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 011, result = 1111111111111111111111111111000001000000000000000000000000000000
# [INSTR FETCH @ 26.00 ns] PC = 20, Instruction = 10101011000001000000000001100101
#   -> PC+4 sequential
# [ALU DEBUG @ 26.00 ns] A = 1111111111111111111111111111000001000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 010, result = 1111111111111111111111111111000001000000000000000000000000000000
# [INSTR FETCH @ 30.00 ns] PC = 24, Instruction = 10101011000000010000000000000110
#   -> PC+4 sequential
# [ALU DEBUG @ 30.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000001
# [INSTR FETCH @ 34.00 ns] PC = 28, Instruction = 10101011000001010000000000100111
#   -> PC+4 sequential
# [ALU DEBUG @ 34.00 ns] A = 1111111111111111111111111111000001100000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 010, result = 1111111111111111111111111111000001100000000000000000000000000000
# [INSTR FETCH @ 38.00 ns] PC = 32, Instruction = 10010001000000000000001111111111
#   -> PC+4 sequential
# [ALU DEBUG @ 38.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000000
# [INSTR FETCH @ 42.00 ns] PC = 36, Instruction = 00010100000000000000000000000000
#   -> PC+4 sequential
# [ALU DEBUG @ 42.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000001, cntrl = 000, result = 0000000000000000000000000000000000000000000000000000000000000001
# [INSTR FETCH @ 46.00 ns] PC = 40, Instruction = 10010001000000000000001111111111
#   -> PC+4 sequential
# [ALU DEBUG @ 46.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000000
# [INSTR FETCH @ 50.00 ns] PC = 44, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 50.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x
# [INSTR FETCH @ 54.00 ns] PC = 48, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 54.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x
# [INSTR FETCH @ 58.00 ns] PC = 52, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 58.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x
# [INSTR FETCH @ 62.00 ns] PC = 56, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 62.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x
# [INSTR FETCH @ 66.00 ns] PC = 60, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 66.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x
# [INSTR FETCH @ 70.00 ns] PC = 64, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 70.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x
# [INSTR FETCH @ 74.00 ns] PC = 68, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 74.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x
# [INSTR FETCH @ 78.00 ns] PC = 72, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 78.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x
# [INSTR FETCH @ 82.00 ns] PC = 76, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 82.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x
# ** Note: $stop    : ./cpu.sv(199)
#    Time: 82 ns  Iteration: 1  Instance: /cpustim
# Break in Module cpustim at ./cpu.sv line 199
do runlab.do
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:25:43 on May 20,2025
# vlog -reportprogress 300 ./gates/and_64bit.sv 
# -- Compiling module and_64bit
# 
# Top level modules:
# 	and_64bit
# End time: 00:25:43 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:25:43 on May 20,2025
# vlog -reportprogress 300 ./gates/not_64bit.sv 
# -- Compiling module not_64bit
# 
# Top level modules:
# 	not_64bit
# End time: 00:25:43 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:25:43 on May 20,2025
# vlog -reportprogress 300 ./gates/or_64bit.sv 
# -- Compiling module or_64bit
# 
# Top level modules:
# 	or_64bit
# End time: 00:25:43 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:25:43 on May 20,2025
# vlog -reportprogress 300 ./gates/xor_64bit.sv 
# -- Compiling module xor_64bit
# 
# Top level modules:
# 	xor_64bit
# End time: 00:25:44 on May 20,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:25:44 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux2_1.sv 
# -- Compiling module mux2_1
# -- Compiling module mux2_1_testbench
# 
# Top level modules:
# 	mux2_1_testbench
# End time: 00:25:44 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:25:44 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux2_1_5bit.sv 
# -- Compiling module mux2_1_5bit
# 
# Top level modules:
# 	mux2_1_5bit
# End time: 00:25:44 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:25:44 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux2_1_64bit.sv 
# -- Compiling module mux2_1_64bit
# 
# Top level modules:
# 	mux2_1_64bit
# End time: 00:25:44 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:25:44 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux4_1.sv 
# -- Compiling module mux4_1
# -- Compiling module mux4_1_testbench
# 
# Top level modules:
# 	mux4_1_testbench
# End time: 00:25:44 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:25:44 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux4_1_64bit.sv 
# -- Compiling module mux4_1_64bit
# 
# Top level modules:
# 	mux4_1_64bit
# End time: 00:25:44 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:25:44 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux8_1.sv 
# -- Compiling module mux8_1
# -- Compiling module mux8_1_testbench
# 
# Top level modules:
# 	mux8_1_testbench
# End time: 00:25:44 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:25:44 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux16_1.sv 
# -- Compiling module mux16_1
# -- Compiling module mux16_1_testbench
# 
# Top level modules:
# 	mux16_1_testbench
# End time: 00:25:44 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:25:44 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux32_1.sv 
# -- Compiling module mux32_1
# -- Compiling module mux32_1_testbench
# 
# Top level modules:
# 	mux32_1_testbench
# End time: 00:25:44 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:25:44 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux32_1_64bit.sv 
# -- Compiling module mux32_1_64bit
# 
# Top level modules:
# 	mux32_1_64bit
# End time: 00:25:44 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:25:44 on May 20,2025
# vlog -reportprogress 300 ./decoders/decoder_3to8.sv 
# -- Compiling module decoder_3to8
# 
# Top level modules:
# 	decoder_3to8
# End time: 00:25:44 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:25:44 on May 20,2025
# vlog -reportprogress 300 ./decoders/decoder_5to32.sv 
# -- Compiling module decoder_5to32
# 
# Top level modules:
# 	decoder_5to32
# End time: 00:25:44 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:25:44 on May 20,2025
# vlog -reportprogress 300 ./utils/dff.sv 
# -- Compiling module D_FF
# 
# Top level modules:
# 	D_FF
# End time: 00:25:44 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:25:44 on May 20,2025
# vlog -reportprogress 300 ./utils/dff_en.sv 
# -- Compiling module D_FF_en
# 
# Top level modules:
# 	D_FF_en
# End time: 00:25:44 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:25:44 on May 20,2025
# vlog -reportprogress 300 ./register_64bit.sv 
# -- Compiling module register_64bit
# 
# Top level modules:
# 	register_64bit
# End time: 00:25:44 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:25:44 on May 20,2025
# vlog -reportprogress 300 ./regfile.sv 
# -- Compiling module regfile
# 
# Top level modules:
# 	regfile
# End time: 00:25:44 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:25:44 on May 20,2025
# vlog -reportprogress 300 ./adders/adder.sv 
# -- Compiling module adder
# 
# Top level modules:
# 	adder
# End time: 00:25:44 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:25:45 on May 20,2025
# vlog -reportprogress 300 ./adders/adder_32bit.sv 
# -- Compiling module adder_32bit
# 
# Top level modules:
# 	adder_32bit
# End time: 00:25:45 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:25:45 on May 20,2025
# vlog -reportprogress 300 ./adders/adder_64bit.sv 
# -- Compiling module adder_64bit
# 
# Top level modules:
# 	adder_64bit
# End time: 00:25:45 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:25:45 on May 20,2025
# vlog -reportprogress 300 ./subtractor_64bit.sv 
# -- Compiling module subtractor_64bit
# 
# Top level modules:
# 	subtractor_64bit
# End time: 00:25:45 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:25:45 on May 20,2025
# vlog -reportprogress 300 ./utils/immediate_extenders.sv 
# -- Compiling module buf1
# -- Compiling module zero_extender_itype
# -- Compiling module sign_extender_dtype
# -- Compiling module sign_extender_btype
# -- Compiling module sign_extender_cbtype
# 
# Top level modules:
# 	zero_extender_itype
# 	sign_extender_dtype
# 	sign_extender_btype
# 	sign_extender_cbtype
# End time: 00:25:45 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:25:45 on May 20,2025
# vlog -reportprogress 300 ./utils/left_shifter.sv 
# -- Compiling module left_shifter_2bits
# 
# Top level modules:
# 	left_shifter_2bits
# End time: 00:25:45 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:25:45 on May 20,2025
# vlog -reportprogress 300 ./utils/zero_64bits.sv 
# -- Compiling module zero_64bits
# 
# Top level modules:
# 	zero_64bits
# End time: 00:25:45 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:25:45 on May 20,2025
# vlog -reportprogress 300 ./alu.sv 
# -- Compiling module alu
# 
# Top level modules:
# 	alu
# End time: 00:25:45 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:25:45 on May 20,2025
# vlog -reportprogress 300 ./alustim.sv 
# -- Compiling module alustim
# 
# Top level modules:
# 	alustim
# End time: 00:25:45 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:25:45 on May 20,2025
# vlog -reportprogress 300 ./datamem.sv 
# -- Compiling module datamem
# -- Compiling module datamem_testbench
# 
# Top level modules:
# 	datamem_testbench
# End time: 00:25:45 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:25:45 on May 20,2025
# vlog -reportprogress 300 ./instructmem.sv 
# -- Compiling module instructmem
# -- Compiling module instructmem_testbench
# 
# Top level modules:
# 	instructmem_testbench
# End time: 00:25:45 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:25:45 on May 20,2025
# vlog -reportprogress 300 ./program_counter.sv 
# -- Compiling module program_counter
# -- Compiling module tb_program_counter
# 
# Top level modules:
# 	tb_program_counter
# End time: 00:25:45 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:25:45 on May 20,2025
# vlog -reportprogress 300 ./control_unit.sv 
# -- Compiling module control_unit
# 
# Top level modules:
# 	control_unit
# End time: 00:25:45 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:25:45 on May 20,2025
# vlog -reportprogress 300 ./cpu.sv 
# -- Compiling module cpu
# -- Compiling module cpustim
# 
# Top level modules:
# 	cpustim
# End time: 00:25:45 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 00:25:50 on May 20,2025, Elapsed time: 0:05:21
# Errors: 0, Warnings: 1
# vsim -voptargs=""+acc"" -t 1ps -lib work cpustim 
# Start time: 00:25:50 on May 20,2025
# Loading sv_std.std
# Loading work.cpustim
# Loading work.cpu
# Loading work.program_counter
# Loading work.adder_64bit
# Loading work.adder
# Loading work.mux4_1_64bit
# Loading work.instructmem
# Loading work.sign_extender_btype
# Loading work.sign_extender_cbtype
# Loading work.left_shifter_2bits
# Loading work.control_unit
# Loading work.mux2_1_5bit
# Loading work.regfile
# Loading work.decoder_5to32
# Loading work.and_64bit
# Loading work.mux32_1_64bit
# Loading work.zero_64bits
# Loading work.zero_extender_itype
# Loading work.sign_extender_dtype
# Loading work.mux2_1_64bit
# Loading work.alu
# Loading work.decoder_3to8
# Loading work.subtractor_64bit
# Loading work.not_64bit
# Loading work.or_64bit
# Loading work.xor_64bit
# Loading work.datamem
# Loading work.mux4_1
# Loading work.mux2_1
# Loading work.D_FF
# Loading work.buf1
# Loading work.mux32_1
# Loading work.mux16_1
# Loading work.mux8_1
# Loading work.register_64bit
# ** Warning: Design size of 9097 instances exceeds ModelSim - Intel FPGA Starter Edition recommended capacity.
# This may because you are loading cell libraries which are not recommended with
# the ModelSim - Intel FPGA Edition. Expect performance to be adversely affected.
# .main_pane.wave.interior.cs.body.pw.wf
# .main_pane.structure.interior.cs.body.struct
# .main_pane.objects.interior.cs.body.tree
# Running benchmark: ./benchmarks/test02_AddsSubs.arm
# [INSTR FETCH @ 10.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 10.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 30.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 30.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 50.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 50.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 70.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 70.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 90.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 90.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 110.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 110.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 130.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 130.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 150.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 150.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 170.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 170.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 190.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 190.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 210.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 210.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 230.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 230.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 250.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 250.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 270.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 270.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 290.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 290.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 310.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 310.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 330.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 330.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 350.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 350.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 370.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 370.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 390.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 390.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# ** Note: $stop    : ./cpu.sv(199)
#    Time: 390 ns  Iteration: 1  Instance: /cpustim
# Break in Module cpustim at ./cpu.sv line 199
do runlab.do
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:03 on May 20,2025
# vlog -reportprogress 300 ./gates/and_64bit.sv 
# -- Compiling module and_64bit
# 
# Top level modules:
# 	and_64bit
# End time: 00:27:03 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:04 on May 20,2025
# vlog -reportprogress 300 ./gates/not_64bit.sv 
# -- Compiling module not_64bit
# 
# Top level modules:
# 	not_64bit
# End time: 00:27:04 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:04 on May 20,2025
# vlog -reportprogress 300 ./gates/or_64bit.sv 
# -- Compiling module or_64bit
# 
# Top level modules:
# 	or_64bit
# End time: 00:27:04 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:04 on May 20,2025
# vlog -reportprogress 300 ./gates/xor_64bit.sv 
# -- Compiling module xor_64bit
# 
# Top level modules:
# 	xor_64bit
# End time: 00:27:04 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:04 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux2_1.sv 
# -- Compiling module mux2_1
# -- Compiling module mux2_1_testbench
# 
# Top level modules:
# 	mux2_1_testbench
# End time: 00:27:04 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:04 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux2_1_5bit.sv 
# -- Compiling module mux2_1_5bit
# 
# Top level modules:
# 	mux2_1_5bit
# End time: 00:27:04 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:04 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux2_1_64bit.sv 
# -- Compiling module mux2_1_64bit
# 
# Top level modules:
# 	mux2_1_64bit
# End time: 00:27:04 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:04 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux4_1.sv 
# -- Compiling module mux4_1
# -- Compiling module mux4_1_testbench
# 
# Top level modules:
# 	mux4_1_testbench
# End time: 00:27:04 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:04 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux4_1_64bit.sv 
# -- Compiling module mux4_1_64bit
# 
# Top level modules:
# 	mux4_1_64bit
# End time: 00:27:04 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:04 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux8_1.sv 
# -- Compiling module mux8_1
# -- Compiling module mux8_1_testbench
# 
# Top level modules:
# 	mux8_1_testbench
# End time: 00:27:04 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:04 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux16_1.sv 
# -- Compiling module mux16_1
# -- Compiling module mux16_1_testbench
# 
# Top level modules:
# 	mux16_1_testbench
# End time: 00:27:04 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:04 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux32_1.sv 
# -- Compiling module mux32_1
# -- Compiling module mux32_1_testbench
# 
# Top level modules:
# 	mux32_1_testbench
# End time: 00:27:04 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:04 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux32_1_64bit.sv 
# -- Compiling module mux32_1_64bit
# 
# Top level modules:
# 	mux32_1_64bit
# End time: 00:27:04 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:04 on May 20,2025
# vlog -reportprogress 300 ./decoders/decoder_3to8.sv 
# -- Compiling module decoder_3to8
# 
# Top level modules:
# 	decoder_3to8
# End time: 00:27:04 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:04 on May 20,2025
# vlog -reportprogress 300 ./decoders/decoder_5to32.sv 
# -- Compiling module decoder_5to32
# 
# Top level modules:
# 	decoder_5to32
# End time: 00:27:04 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:04 on May 20,2025
# vlog -reportprogress 300 ./utils/dff.sv 
# -- Compiling module D_FF
# 
# Top level modules:
# 	D_FF
# End time: 00:27:04 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:04 on May 20,2025
# vlog -reportprogress 300 ./utils/dff_en.sv 
# -- Compiling module D_FF_en
# 
# Top level modules:
# 	D_FF_en
# End time: 00:27:04 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:04 on May 20,2025
# vlog -reportprogress 300 ./register_64bit.sv 
# -- Compiling module register_64bit
# 
# Top level modules:
# 	register_64bit
# End time: 00:27:05 on May 20,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:05 on May 20,2025
# vlog -reportprogress 300 ./regfile.sv 
# -- Compiling module regfile
# 
# Top level modules:
# 	regfile
# End time: 00:27:05 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:05 on May 20,2025
# vlog -reportprogress 300 ./adders/adder.sv 
# -- Compiling module adder
# 
# Top level modules:
# 	adder
# End time: 00:27:05 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:05 on May 20,2025
# vlog -reportprogress 300 ./adders/adder_32bit.sv 
# -- Compiling module adder_32bit
# 
# Top level modules:
# 	adder_32bit
# End time: 00:27:05 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:05 on May 20,2025
# vlog -reportprogress 300 ./adders/adder_64bit.sv 
# -- Compiling module adder_64bit
# 
# Top level modules:
# 	adder_64bit
# End time: 00:27:05 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:05 on May 20,2025
# vlog -reportprogress 300 ./subtractor_64bit.sv 
# -- Compiling module subtractor_64bit
# 
# Top level modules:
# 	subtractor_64bit
# End time: 00:27:05 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:05 on May 20,2025
# vlog -reportprogress 300 ./utils/immediate_extenders.sv 
# -- Compiling module buf1
# -- Compiling module zero_extender_itype
# -- Compiling module sign_extender_dtype
# -- Compiling module sign_extender_btype
# -- Compiling module sign_extender_cbtype
# 
# Top level modules:
# 	zero_extender_itype
# 	sign_extender_dtype
# 	sign_extender_btype
# 	sign_extender_cbtype
# End time: 00:27:05 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:05 on May 20,2025
# vlog -reportprogress 300 ./utils/left_shifter.sv 
# -- Compiling module left_shifter_2bits
# 
# Top level modules:
# 	left_shifter_2bits
# End time: 00:27:05 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:05 on May 20,2025
# vlog -reportprogress 300 ./utils/zero_64bits.sv 
# -- Compiling module zero_64bits
# 
# Top level modules:
# 	zero_64bits
# End time: 00:27:05 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:05 on May 20,2025
# vlog -reportprogress 300 ./alu.sv 
# -- Compiling module alu
# 
# Top level modules:
# 	alu
# End time: 00:27:05 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:05 on May 20,2025
# vlog -reportprogress 300 ./alustim.sv 
# -- Compiling module alustim
# 
# Top level modules:
# 	alustim
# End time: 00:27:05 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:05 on May 20,2025
# vlog -reportprogress 300 ./datamem.sv 
# -- Compiling module datamem
# -- Compiling module datamem_testbench
# 
# Top level modules:
# 	datamem_testbench
# End time: 00:27:05 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:05 on May 20,2025
# vlog -reportprogress 300 ./instructmem.sv 
# -- Compiling module instructmem
# -- Compiling module instructmem_testbench
# 
# Top level modules:
# 	instructmem_testbench
# End time: 00:27:05 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:05 on May 20,2025
# vlog -reportprogress 300 ./program_counter.sv 
# -- Compiling module program_counter
# -- Compiling module tb_program_counter
# 
# Top level modules:
# 	tb_program_counter
# End time: 00:27:05 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:05 on May 20,2025
# vlog -reportprogress 300 ./control_unit.sv 
# -- Compiling module control_unit
# 
# Top level modules:
# 	control_unit
# End time: 00:27:05 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:05 on May 20,2025
# vlog -reportprogress 300 ./cpu.sv 
# -- Compiling module cpu
# -- Compiling module cpustim
# 
# Top level modules:
# 	cpustim
# End time: 00:27:06 on May 20,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# End time: 00:27:09 on May 20,2025, Elapsed time: 0:01:19
# Errors: 0, Warnings: 1
# vsim -voptargs=""+acc"" -t 1ps -lib work cpustim 
# Start time: 00:27:09 on May 20,2025
# Loading sv_std.std
# Loading work.cpustim
# Loading work.cpu
# Loading work.program_counter
# Loading work.adder_64bit
# Loading work.adder
# Loading work.mux4_1_64bit
# Loading work.instructmem
# Loading work.sign_extender_btype
# Loading work.sign_extender_cbtype
# Loading work.left_shifter_2bits
# Loading work.control_unit
# Loading work.mux2_1_5bit
# Loading work.regfile
# Loading work.decoder_5to32
# Loading work.and_64bit
# Loading work.mux32_1_64bit
# Loading work.zero_64bits
# Loading work.zero_extender_itype
# Loading work.sign_extender_dtype
# Loading work.mux2_1_64bit
# Loading work.alu
# Loading work.decoder_3to8
# Loading work.subtractor_64bit
# Loading work.not_64bit
# Loading work.or_64bit
# Loading work.xor_64bit
# Loading work.datamem
# Loading work.mux4_1
# Loading work.mux2_1
# Loading work.D_FF
# Loading work.buf1
# Loading work.mux32_1
# Loading work.mux16_1
# Loading work.mux8_1
# Loading work.register_64bit
# ** Warning: Design size of 9097 instances exceeds ModelSim - Intel FPGA Starter Edition recommended capacity.
# This may because you are loading cell libraries which are not recommended with
# the ModelSim - Intel FPGA Edition. Expect performance to be adversely affected.
# .main_pane.wave.interior.cs.body.pw.wf
# .main_pane.structure.interior.cs.body.struct
# .main_pane.objects.interior.cs.body.tree
# Running benchmark: ./benchmarks/test02_AddsSubs.arm
# [INSTR FETCH @ 5.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 5.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 15.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 15.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 25.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 25.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 35.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 35.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 45.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 45.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 55.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 55.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 65.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 65.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 75.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 75.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 85.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 85.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 95.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 95.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 105.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 105.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 115.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 115.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 125.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 125.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 135.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 135.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 145.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 145.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 155.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 155.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 165.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 165.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 175.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 175.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 185.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 185.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 195.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 195.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# ** Note: $stop    : ./cpu.sv(198)
#    Time: 195 ns  Iteration: 1  Instance: /cpustim
# Break in Module cpustim at ./cpu.sv line 198
do runlab.do
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:59 on May 20,2025
# vlog -reportprogress 300 ./gates/and_64bit.sv 
# -- Compiling module and_64bit
# 
# Top level modules:
# 	and_64bit
# End time: 00:27:59 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:59 on May 20,2025
# vlog -reportprogress 300 ./gates/not_64bit.sv 
# -- Compiling module not_64bit
# 
# Top level modules:
# 	not_64bit
# End time: 00:27:59 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:59 on May 20,2025
# vlog -reportprogress 300 ./gates/or_64bit.sv 
# -- Compiling module or_64bit
# 
# Top level modules:
# 	or_64bit
# End time: 00:27:59 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:59 on May 20,2025
# vlog -reportprogress 300 ./gates/xor_64bit.sv 
# -- Compiling module xor_64bit
# 
# Top level modules:
# 	xor_64bit
# End time: 00:27:59 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:59 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux2_1.sv 
# -- Compiling module mux2_1
# -- Compiling module mux2_1_testbench
# 
# Top level modules:
# 	mux2_1_testbench
# End time: 00:27:59 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:59 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux2_1_5bit.sv 
# -- Compiling module mux2_1_5bit
# 
# Top level modules:
# 	mux2_1_5bit
# End time: 00:27:59 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:59 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux2_1_64bit.sv 
# -- Compiling module mux2_1_64bit
# 
# Top level modules:
# 	mux2_1_64bit
# End time: 00:27:59 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:59 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux4_1.sv 
# -- Compiling module mux4_1
# -- Compiling module mux4_1_testbench
# 
# Top level modules:
# 	mux4_1_testbench
# End time: 00:27:59 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:59 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux4_1_64bit.sv 
# -- Compiling module mux4_1_64bit
# 
# Top level modules:
# 	mux4_1_64bit
# End time: 00:27:59 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:59 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux8_1.sv 
# -- Compiling module mux8_1
# -- Compiling module mux8_1_testbench
# 
# Top level modules:
# 	mux8_1_testbench
# End time: 00:27:59 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:27:59 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux16_1.sv 
# -- Compiling module mux16_1
# -- Compiling module mux16_1_testbench
# 
# Top level modules:
# 	mux16_1_testbench
# End time: 00:27:59 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:28:00 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux32_1.sv 
# -- Compiling module mux32_1
# -- Compiling module mux32_1_testbench
# 
# Top level modules:
# 	mux32_1_testbench
# End time: 00:28:00 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:28:00 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux32_1_64bit.sv 
# -- Compiling module mux32_1_64bit
# 
# Top level modules:
# 	mux32_1_64bit
# End time: 00:28:00 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:28:00 on May 20,2025
# vlog -reportprogress 300 ./decoders/decoder_3to8.sv 
# -- Compiling module decoder_3to8
# 
# Top level modules:
# 	decoder_3to8
# End time: 00:28:00 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:28:00 on May 20,2025
# vlog -reportprogress 300 ./decoders/decoder_5to32.sv 
# -- Compiling module decoder_5to32
# 
# Top level modules:
# 	decoder_5to32
# End time: 00:28:00 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:28:00 on May 20,2025
# vlog -reportprogress 300 ./utils/dff.sv 
# -- Compiling module D_FF
# 
# Top level modules:
# 	D_FF
# End time: 00:28:00 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:28:00 on May 20,2025
# vlog -reportprogress 300 ./utils/dff_en.sv 
# -- Compiling module D_FF_en
# 
# Top level modules:
# 	D_FF_en
# End time: 00:28:00 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:28:00 on May 20,2025
# vlog -reportprogress 300 ./register_64bit.sv 
# -- Compiling module register_64bit
# 
# Top level modules:
# 	register_64bit
# End time: 00:28:00 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:28:00 on May 20,2025
# vlog -reportprogress 300 ./regfile.sv 
# -- Compiling module regfile
# 
# Top level modules:
# 	regfile
# End time: 00:28:00 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:28:00 on May 20,2025
# vlog -reportprogress 300 ./adders/adder.sv 
# -- Compiling module adder
# 
# Top level modules:
# 	adder
# End time: 00:28:00 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:28:00 on May 20,2025
# vlog -reportprogress 300 ./adders/adder_32bit.sv 
# -- Compiling module adder_32bit
# 
# Top level modules:
# 	adder_32bit
# End time: 00:28:00 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:28:00 on May 20,2025
# vlog -reportprogress 300 ./adders/adder_64bit.sv 
# -- Compiling module adder_64bit
# 
# Top level modules:
# 	adder_64bit
# End time: 00:28:00 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:28:00 on May 20,2025
# vlog -reportprogress 300 ./subtractor_64bit.sv 
# -- Compiling module subtractor_64bit
# 
# Top level modules:
# 	subtractor_64bit
# End time: 00:28:00 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:28:00 on May 20,2025
# vlog -reportprogress 300 ./utils/immediate_extenders.sv 
# -- Compiling module buf1
# -- Compiling module zero_extender_itype
# -- Compiling module sign_extender_dtype
# -- Compiling module sign_extender_btype
# -- Compiling module sign_extender_cbtype
# 
# Top level modules:
# 	zero_extender_itype
# 	sign_extender_dtype
# 	sign_extender_btype
# 	sign_extender_cbtype
# End time: 00:28:00 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:28:00 on May 20,2025
# vlog -reportprogress 300 ./utils/left_shifter.sv 
# -- Compiling module left_shifter_2bits
# 
# Top level modules:
# 	left_shifter_2bits
# End time: 00:28:00 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:28:00 on May 20,2025
# vlog -reportprogress 300 ./utils/zero_64bits.sv 
# -- Compiling module zero_64bits
# 
# Top level modules:
# 	zero_64bits
# End time: 00:28:00 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:28:00 on May 20,2025
# vlog -reportprogress 300 ./alu.sv 
# -- Compiling module alu
# 
# Top level modules:
# 	alu
# End time: 00:28:00 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:28:01 on May 20,2025
# vlog -reportprogress 300 ./alustim.sv 
# -- Compiling module alustim
# 
# Top level modules:
# 	alustim
# End time: 00:28:01 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:28:01 on May 20,2025
# vlog -reportprogress 300 ./datamem.sv 
# -- Compiling module datamem
# -- Compiling module datamem_testbench
# 
# Top level modules:
# 	datamem_testbench
# End time: 00:28:01 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:28:01 on May 20,2025
# vlog -reportprogress 300 ./instructmem.sv 
# -- Compiling module instructmem
# -- Compiling module instructmem_testbench
# 
# Top level modules:
# 	instructmem_testbench
# End time: 00:28:01 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:28:01 on May 20,2025
# vlog -reportprogress 300 ./program_counter.sv 
# -- Compiling module program_counter
# -- Compiling module tb_program_counter
# 
# Top level modules:
# 	tb_program_counter
# End time: 00:28:01 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:28:01 on May 20,2025
# vlog -reportprogress 300 ./control_unit.sv 
# -- Compiling module control_unit
# 
# Top level modules:
# 	control_unit
# End time: 00:28:01 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:28:01 on May 20,2025
# vlog -reportprogress 300 ./cpu.sv 
# -- Compiling module cpu
# -- Compiling module cpustim
# 
# Top level modules:
# 	cpustim
# End time: 00:28:01 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 00:28:05 on May 20,2025, Elapsed time: 0:00:56
# Errors: 0, Warnings: 1
# vsim -voptargs=""+acc"" -t 1ps -lib work cpustim 
# Start time: 00:28:05 on May 20,2025
# Loading sv_std.std
# Loading work.cpustim
# Loading work.cpu
# Loading work.program_counter
# Loading work.adder_64bit
# Loading work.adder
# Loading work.mux4_1_64bit
# Loading work.instructmem
# Loading work.sign_extender_btype
# Loading work.sign_extender_cbtype
# Loading work.left_shifter_2bits
# Loading work.control_unit
# Loading work.mux2_1_5bit
# Loading work.regfile
# Loading work.decoder_5to32
# Loading work.and_64bit
# Loading work.mux32_1_64bit
# Loading work.zero_64bits
# Loading work.zero_extender_itype
# Loading work.sign_extender_dtype
# Loading work.mux2_1_64bit
# Loading work.alu
# Loading work.decoder_3to8
# Loading work.subtractor_64bit
# Loading work.not_64bit
# Loading work.or_64bit
# Loading work.xor_64bit
# Loading work.datamem
# Loading work.mux4_1
# Loading work.mux2_1
# Loading work.D_FF
# Loading work.buf1
# Loading work.mux32_1
# Loading work.mux16_1
# Loading work.mux8_1
# Loading work.register_64bit
# ** Warning: Design size of 9097 instances exceeds ModelSim - Intel FPGA Starter Edition recommended capacity.
# This may because you are loading cell libraries which are not recommended with
# the ModelSim - Intel FPGA Edition. Expect performance to be adversely affected.
# .main_pane.wave.interior.cs.body.pw.wf
# .main_pane.structure.interior.cs.body.struct
# .main_pane.objects.interior.cs.body.tree
# Running benchmark: ./benchmarks/test02_AddsSubs.arm
# [INSTR FETCH @ 2.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 2.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 6.00 ns] PC = 0, Instruction = 10010001000000000000011111100000
#   -> PC+4 sequential
# [ALU DEBUG @ 6.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000001
# [INSTR FETCH @ 10.00 ns] PC = 4, Instruction = 11101011000000000000001111100001
#   -> PC+4 sequential
# [ALU DEBUG @ 10.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 011, result = 1111111111111111111111111100000110000000000000000000000000000000
# [INSTR FETCH @ 14.00 ns] PC = 8, Instruction = 11101011000000010000000000000010
#   -> PC+4 sequential
# [ALU DEBUG @ 14.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 011, result = 0110000000000000000000000000000000000000000000000000000000000001
# [INSTR FETCH @ 18.00 ns] PC = 12, Instruction = 11101011000000100000000000100011
#   -> PC+4 sequential
# [ALU DEBUG @ 18.00 ns] A = 1111111111111111111111111111000001100000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 011, result = 1111111111111111111111111111000001100000000000000000000000000000
# [INSTR FETCH @ 22.00 ns] PC = 16, Instruction = 11101011000000010000000001100100
#   -> PC+4 sequential
# [ALU DEBUG @ 22.00 ns] A = 1111111111111111111111111111000001000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 011, result = 1111111111111111111111111111000001000000000000000000000000000000
# [INSTR FETCH @ 26.00 ns] PC = 20, Instruction = 10101011000001000000000001100101
#   -> PC+4 sequential
# [ALU DEBUG @ 26.00 ns] A = 1111111111111111111111111111000001000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 010, result = 1111111111111111111111111111000001000000000000000000000000000000
# [INSTR FETCH @ 30.00 ns] PC = 24, Instruction = 10101011000000010000000000000110
#   -> PC+4 sequential
# [ALU DEBUG @ 30.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000001
# [INSTR FETCH @ 34.00 ns] PC = 28, Instruction = 10101011000001010000000000100111
#   -> PC+4 sequential
# [ALU DEBUG @ 34.00 ns] A = 1111111111111111111111111111000001100000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 010, result = 1111111111111111111111111111000001100000000000000000000000000000
# [INSTR FETCH @ 38.00 ns] PC = 32, Instruction = 10010001000000000000001111111111
#   -> PC+4 sequential
# [ALU DEBUG @ 38.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000000
# [INSTR FETCH @ 42.00 ns] PC = 36, Instruction = 00010100000000000000000000000000
#   -> PC+4 sequential
# [ALU DEBUG @ 42.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000001, cntrl = 000, result = 0000000000000000000000000000000000000000000000000000000000000001
# [INSTR FETCH @ 46.00 ns] PC = 40, Instruction = 10010001000000000000001111111111
#   -> PC+4 sequential
# [ALU DEBUG @ 46.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000000
# [INSTR FETCH @ 50.00 ns] PC = 44, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 50.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x
# [INSTR FETCH @ 54.00 ns] PC = 48, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 54.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x
# [INSTR FETCH @ 58.00 ns] PC = 52, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 58.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x
# [INSTR FETCH @ 62.00 ns] PC = 56, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 62.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x
# [INSTR FETCH @ 66.00 ns] PC = 60, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 66.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x
# [INSTR FETCH @ 70.00 ns] PC = 64, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 70.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x
# [INSTR FETCH @ 74.00 ns] PC = 68, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 74.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x
# [INSTR FETCH @ 78.00 ns] PC = 72, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 78.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x
# [INSTR FETCH @ 82.00 ns] PC = 76, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 82.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxx00000xx0000000000000000000000000000x
# ** Note: $stop    : ./cpu.sv(199)
#    Time: 82 ns  Iteration: 1  Instance: /cpustim
# Break in Module cpustim at ./cpu.sv line 199
do runlab.do
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:31:24 on May 20,2025
# vlog -reportprogress 300 ./gates/and_64bit.sv 
# -- Compiling module and_64bit
# 
# Top level modules:
# 	and_64bit
# End time: 00:31:24 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:31:24 on May 20,2025
# vlog -reportprogress 300 ./gates/not_64bit.sv 
# -- Compiling module not_64bit
# 
# Top level modules:
# 	not_64bit
# End time: 00:31:24 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:31:24 on May 20,2025
# vlog -reportprogress 300 ./gates/or_64bit.sv 
# -- Compiling module or_64bit
# 
# Top level modules:
# 	or_64bit
# End time: 00:31:24 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:31:24 on May 20,2025
# vlog -reportprogress 300 ./gates/xor_64bit.sv 
# -- Compiling module xor_64bit
# 
# Top level modules:
# 	xor_64bit
# End time: 00:31:25 on May 20,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:31:25 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux2_1.sv 
# -- Compiling module mux2_1
# -- Compiling module mux2_1_testbench
# 
# Top level modules:
# 	mux2_1_testbench
# End time: 00:31:25 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:31:25 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux2_1_5bit.sv 
# -- Compiling module mux2_1_5bit
# 
# Top level modules:
# 	mux2_1_5bit
# End time: 00:31:25 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:31:25 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux2_1_64bit.sv 
# -- Compiling module mux2_1_64bit
# 
# Top level modules:
# 	mux2_1_64bit
# End time: 00:31:25 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:31:25 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux4_1.sv 
# -- Compiling module mux4_1
# -- Compiling module mux4_1_testbench
# 
# Top level modules:
# 	mux4_1_testbench
# End time: 00:31:25 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:31:25 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux4_1_64bit.sv 
# -- Compiling module mux4_1_64bit
# 
# Top level modules:
# 	mux4_1_64bit
# End time: 00:31:25 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:31:25 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux8_1.sv 
# -- Compiling module mux8_1
# -- Compiling module mux8_1_testbench
# 
# Top level modules:
# 	mux8_1_testbench
# End time: 00:31:25 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:31:25 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux16_1.sv 
# -- Compiling module mux16_1
# -- Compiling module mux16_1_testbench
# 
# Top level modules:
# 	mux16_1_testbench
# End time: 00:31:25 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:31:25 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux32_1.sv 
# -- Compiling module mux32_1
# -- Compiling module mux32_1_testbench
# 
# Top level modules:
# 	mux32_1_testbench
# End time: 00:31:25 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:31:25 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux32_1_64bit.sv 
# -- Compiling module mux32_1_64bit
# 
# Top level modules:
# 	mux32_1_64bit
# End time: 00:31:25 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:31:25 on May 20,2025
# vlog -reportprogress 300 ./decoders/decoder_3to8.sv 
# -- Compiling module decoder_3to8
# 
# Top level modules:
# 	decoder_3to8
# End time: 00:31:25 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:31:25 on May 20,2025
# vlog -reportprogress 300 ./decoders/decoder_5to32.sv 
# -- Compiling module decoder_5to32
# 
# Top level modules:
# 	decoder_5to32
# End time: 00:31:25 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:31:25 on May 20,2025
# vlog -reportprogress 300 ./utils/dff.sv 
# -- Compiling module D_FF
# 
# Top level modules:
# 	D_FF
# End time: 00:31:25 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:31:25 on May 20,2025
# vlog -reportprogress 300 ./utils/dff_en.sv 
# -- Compiling module D_FF_en
# 
# Top level modules:
# 	D_FF_en
# End time: 00:31:25 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:31:25 on May 20,2025
# vlog -reportprogress 300 ./register_64bit.sv 
# -- Compiling module register_64bit
# 
# Top level modules:
# 	register_64bit
# End time: 00:31:25 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:31:25 on May 20,2025
# vlog -reportprogress 300 ./regfile.sv 
# -- Compiling module regfile
# 
# Top level modules:
# 	regfile
# End time: 00:31:25 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:31:25 on May 20,2025
# vlog -reportprogress 300 ./adders/adder.sv 
# -- Compiling module adder
# 
# Top level modules:
# 	adder
# End time: 00:31:26 on May 20,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:31:26 on May 20,2025
# vlog -reportprogress 300 ./adders/adder_32bit.sv 
# -- Compiling module adder_32bit
# 
# Top level modules:
# 	adder_32bit
# End time: 00:31:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:31:26 on May 20,2025
# vlog -reportprogress 300 ./adders/adder_64bit.sv 
# -- Compiling module adder_64bit
# 
# Top level modules:
# 	adder_64bit
# End time: 00:31:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:31:26 on May 20,2025
# vlog -reportprogress 300 ./subtractor_64bit.sv 
# -- Compiling module subtractor_64bit
# 
# Top level modules:
# 	subtractor_64bit
# End time: 00:31:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:31:26 on May 20,2025
# vlog -reportprogress 300 ./utils/immediate_extenders.sv 
# -- Compiling module buf1
# -- Compiling module zero_extender_itype
# -- Compiling module sign_extender_dtype
# -- Compiling module sign_extender_btype
# -- Compiling module sign_extender_cbtype
# 
# Top level modules:
# 	zero_extender_itype
# 	sign_extender_dtype
# 	sign_extender_btype
# 	sign_extender_cbtype
# End time: 00:31:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:31:26 on May 20,2025
# vlog -reportprogress 300 ./utils/left_shifter.sv 
# -- Compiling module left_shifter_2bits
# 
# Top level modules:
# 	left_shifter_2bits
# End time: 00:31:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:31:26 on May 20,2025
# vlog -reportprogress 300 ./utils/zero_64bits.sv 
# -- Compiling module zero_64bits
# 
# Top level modules:
# 	zero_64bits
# End time: 00:31:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:31:26 on May 20,2025
# vlog -reportprogress 300 ./alu.sv 
# -- Compiling module alu
# 
# Top level modules:
# 	alu
# End time: 00:31:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:31:26 on May 20,2025
# vlog -reportprogress 300 ./alustim.sv 
# -- Compiling module alustim
# 
# Top level modules:
# 	alustim
# End time: 00:31:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:31:26 on May 20,2025
# vlog -reportprogress 300 ./datamem.sv 
# -- Compiling module datamem
# -- Compiling module datamem_testbench
# 
# Top level modules:
# 	datamem_testbench
# End time: 00:31:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:31:26 on May 20,2025
# vlog -reportprogress 300 ./instructmem.sv 
# -- Compiling module instructmem
# -- Compiling module instructmem_testbench
# 
# Top level modules:
# 	instructmem_testbench
# End time: 00:31:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:31:26 on May 20,2025
# vlog -reportprogress 300 ./program_counter.sv 
# -- Compiling module program_counter
# -- Compiling module tb_program_counter
# 
# Top level modules:
# 	tb_program_counter
# End time: 00:31:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:31:26 on May 20,2025
# vlog -reportprogress 300 ./control_unit.sv 
# -- Compiling module control_unit
# 
# Top level modules:
# 	control_unit
# End time: 00:31:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:31:26 on May 20,2025
# vlog -reportprogress 300 ./cpu.sv 
# -- Compiling module cpu
# -- Compiling module cpustim
# 
# Top level modules:
# 	cpustim
# End time: 00:31:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 00:31:30 on May 20,2025, Elapsed time: 0:03:25
# Errors: 0, Warnings: 1
# vsim -voptargs=""+acc"" -t 1ps -lib work cpustim 
# Start time: 00:31:30 on May 20,2025
# Loading sv_std.std
# Loading work.cpustim
# Loading work.cpu
# Loading work.program_counter
# Loading work.adder_64bit
# Loading work.adder
# Loading work.mux4_1_64bit
# Loading work.instructmem
# Loading work.sign_extender_btype
# Loading work.sign_extender_cbtype
# Loading work.left_shifter_2bits
# Loading work.control_unit
# Loading work.mux2_1_5bit
# Loading work.regfile
# Loading work.decoder_5to32
# Loading work.and_64bit
# Loading work.mux32_1_64bit
# Loading work.zero_64bits
# Loading work.zero_extender_itype
# Loading work.sign_extender_dtype
# Loading work.mux2_1_64bit
# Loading work.alu
# Loading work.decoder_3to8
# Loading work.subtractor_64bit
# Loading work.not_64bit
# Loading work.or_64bit
# Loading work.xor_64bit
# Loading work.datamem
# Loading work.mux4_1
# Loading work.mux2_1
# Loading work.D_FF
# Loading work.buf1
# Loading work.mux32_1
# Loading work.mux16_1
# Loading work.mux8_1
# Loading work.register_64bit
# ** Warning: Design size of 9097 instances exceeds ModelSim - Intel FPGA Starter Edition recommended capacity.
# This may because you are loading cell libraries which are not recommended with
# the ModelSim - Intel FPGA Edition. Expect performance to be adversely affected.
# .main_pane.wave.interior.cs.body.pw.wf
# .main_pane.structure.interior.cs.body.struct
# .main_pane.objects.interior.cs.body.tree
# Running benchmark: ./benchmarks/test02_AddsSubs.arm
# [INSTR FETCH @ 15.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 15.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 45.00 ns] PC = 0, Instruction = 10010001000000000000011111100000
#   -> PC+4 sequential
# [ALU DEBUG @ 45.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000001
# [INSTR FETCH @ 75.00 ns] PC = 0, Instruction = 10010001000000000000011111100000
#   -> PC+4 sequential
# [ALU DEBUG @ 75.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000001
# [INSTR FETCH @ 105.00 ns] PC = 0, Instruction = 10010001000000000000011111100000
#   -> PC+4 sequential
# [ALU DEBUG @ 105.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000001
# [INSTR FETCH @ 135.00 ns] PC = 0, Instruction = 10010001000000000000011111100000
#   -> PC+4 sequential
# [ALU DEBUG @ 135.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000001
# [INSTR FETCH @ 165.00 ns] PC = 4, Instruction = 11101011000000000000001111100001
#   -> PC+4 sequential
# [ALU DEBUG @ 165.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 011, result = 0000000000000000000000000000000000000000000000000000000000000000
# [INSTR FETCH @ 195.00 ns] PC = 8, Instruction = 11101011000000010000000000000010
#   -> PC+4 sequential
# [ALU DEBUG @ 195.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 011, result = 0000000000000000000000000000000000000000000000000000000000000001
# [INSTR FETCH @ 225.00 ns] PC = 12, Instruction = 11101011000000100000000000100011
#   -> PC+4 sequential
# [ALU DEBUG @ 225.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 011, result = 0000000000000000000000000000000000000000000000000000000000000000
# [INSTR FETCH @ 255.00 ns] PC = 16, Instruction = 11101011000000010000000001100100
#   -> PC+4 sequential
# [ALU DEBUG @ 255.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 011, result = 0000000000000000000000000000000000000000000000000000000000000000
# [INSTR FETCH @ 285.00 ns] PC = 20, Instruction = 10101011000001000000000001100101
#   -> PC+4 sequential
# [ALU DEBUG @ 285.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000000
# [INSTR FETCH @ 315.00 ns] PC = 24, Instruction = 10101011000000010000000000000110
#   -> PC+4 sequential
# [ALU DEBUG @ 315.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000001
# [INSTR FETCH @ 345.00 ns] PC = 28, Instruction = 10101011000001010000000000100111
#   -> PC+4 sequential
# [ALU DEBUG @ 345.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000000
# [INSTR FETCH @ 375.00 ns] PC = 32, Instruction = 10010001000000000000001111111111
#   -> PC+4 sequential
# [ALU DEBUG @ 375.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000000
# [INSTR FETCH @ 405.00 ns] PC = 36, Instruction = 00010100000000000000000000000000
#   -> PC+4 sequential
# [ALU DEBUG @ 405.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000001, cntrl = 000, result = 0000000000000000000000000000000000000000000000000000000000000001
# [INSTR FETCH @ 435.00 ns] PC = 40, Instruction = 10010001000000000000001111111111
#   -> PC+4 sequential
# [ALU DEBUG @ 435.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000000
# [INSTR FETCH @ 465.00 ns] PC = 44, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 465.00 ns] A = 000000000000000000000000000000000000000000000000000000000000000x, B = 000000000000000000000000000000000000000000000000000000000000000x, cntrl = 000, result = 000000000000000000000000000000000000000000000000000000000000000x
# [INSTR FETCH @ 495.00 ns] PC = 48, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 495.00 ns] A = 000000000000000000000000000000000000000000000000000000000000000x, B = 000000000000000000000000000000000000000000000000000000000000000x, cntrl = 000, result = 000000000000000000000000000000000000000000000000000000000000000x
# [INSTR FETCH @ 525.00 ns] PC = 52, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 525.00 ns] A = 000000000000000000000000000000000000000000000000000000000000000x, B = 000000000000000000000000000000000000000000000000000000000000000x, cntrl = 000, result = 000000000000000000000000000000000000000000000000000000000000000x
# [INSTR FETCH @ 555.00 ns] PC = 56, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 555.00 ns] A = 000000000000000000000000000000000000000000000000000000000000000x, B = 000000000000000000000000000000000000000000000000000000000000000x, cntrl = 000, result = 000000000000000000000000000000000000000000000000000000000000000x
# [INSTR FETCH @ 585.00 ns] PC = 60, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 585.00 ns] A = 000000000000000000000000000000000000000000000000000000000000000x, B = 000000000000000000000000000000000000000000000000000000000000000x, cntrl = 000, result = 000000000000000000000000000000000000000000000000000000000000000x
# Finished 20 cycles at 0.60 ns ns
# ** Note: $stop    : ./cpu.sv(206)
#    Time: 600 ns  Iteration: 0  Instance: /cpustim
# Break in Module cpustim at ./cpu.sv line 206
do runlab.do
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:46:25 on May 20,2025
# vlog -reportprogress 300 ./gates/and_64bit.sv 
# -- Compiling module and_64bit
# 
# Top level modules:
# 	and_64bit
# End time: 00:46:26 on May 20,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:46:26 on May 20,2025
# vlog -reportprogress 300 ./gates/not_64bit.sv 
# -- Compiling module not_64bit
# 
# Top level modules:
# 	not_64bit
# End time: 00:46:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:46:26 on May 20,2025
# vlog -reportprogress 300 ./gates/or_64bit.sv 
# -- Compiling module or_64bit
# 
# Top level modules:
# 	or_64bit
# End time: 00:46:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:46:26 on May 20,2025
# vlog -reportprogress 300 ./gates/xor_64bit.sv 
# -- Compiling module xor_64bit
# 
# Top level modules:
# 	xor_64bit
# End time: 00:46:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:46:26 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux2_1.sv 
# -- Compiling module mux2_1
# -- Compiling module mux2_1_testbench
# 
# Top level modules:
# 	mux2_1_testbench
# End time: 00:46:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:46:26 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux2_1_5bit.sv 
# -- Compiling module mux2_1_5bit
# 
# Top level modules:
# 	mux2_1_5bit
# End time: 00:46:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:46:26 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux2_1_64bit.sv 
# -- Compiling module mux2_1_64bit
# 
# Top level modules:
# 	mux2_1_64bit
# End time: 00:46:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:46:26 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux4_1.sv 
# -- Compiling module mux4_1
# -- Compiling module mux4_1_testbench
# 
# Top level modules:
# 	mux4_1_testbench
# End time: 00:46:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:46:26 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux4_1_64bit.sv 
# -- Compiling module mux4_1_64bit
# 
# Top level modules:
# 	mux4_1_64bit
# End time: 00:46:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:46:26 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux8_1.sv 
# -- Compiling module mux8_1
# -- Compiling module mux8_1_testbench
# 
# Top level modules:
# 	mux8_1_testbench
# End time: 00:46:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:46:26 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux16_1.sv 
# -- Compiling module mux16_1
# -- Compiling module mux16_1_testbench
# 
# Top level modules:
# 	mux16_1_testbench
# End time: 00:46:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:46:26 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux32_1.sv 
# -- Compiling module mux32_1
# -- Compiling module mux32_1_testbench
# 
# Top level modules:
# 	mux32_1_testbench
# End time: 00:46:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:46:26 on May 20,2025
# vlog -reportprogress 300 ./muxes/mux32_1_64bit.sv 
# -- Compiling module mux32_1_64bit
# 
# Top level modules:
# 	mux32_1_64bit
# End time: 00:46:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:46:26 on May 20,2025
# vlog -reportprogress 300 ./decoders/decoder_3to8.sv 
# -- Compiling module decoder_3to8
# 
# Top level modules:
# 	decoder_3to8
# End time: 00:46:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:46:26 on May 20,2025
# vlog -reportprogress 300 ./decoders/decoder_5to32.sv 
# -- Compiling module decoder_5to32
# 
# Top level modules:
# 	decoder_5to32
# End time: 00:46:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:46:26 on May 20,2025
# vlog -reportprogress 300 ./utils/dff.sv 
# -- Compiling module D_FF
# 
# Top level modules:
# 	D_FF
# End time: 00:46:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:46:26 on May 20,2025
# vlog -reportprogress 300 ./utils/dff_en.sv 
# -- Compiling module D_FF_en
# 
# Top level modules:
# 	D_FF_en
# End time: 00:46:26 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:46:26 on May 20,2025
# vlog -reportprogress 300 ./register_64bit.sv 
# -- Compiling module register_64bit
# 
# Top level modules:
# 	register_64bit
# End time: 00:46:27 on May 20,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:46:27 on May 20,2025
# vlog -reportprogress 300 ./regfile.sv 
# -- Compiling module regfile
# 
# Top level modules:
# 	regfile
# End time: 00:46:27 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:46:27 on May 20,2025
# vlog -reportprogress 300 ./adders/adder.sv 
# -- Compiling module adder
# 
# Top level modules:
# 	adder
# End time: 00:46:27 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:46:27 on May 20,2025
# vlog -reportprogress 300 ./adders/adder_32bit.sv 
# -- Compiling module adder_32bit
# 
# Top level modules:
# 	adder_32bit
# End time: 00:46:27 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:46:27 on May 20,2025
# vlog -reportprogress 300 ./adders/adder_64bit.sv 
# -- Compiling module adder_64bit
# 
# Top level modules:
# 	adder_64bit
# End time: 00:46:27 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:46:27 on May 20,2025
# vlog -reportprogress 300 ./subtractor_64bit.sv 
# -- Compiling module subtractor_64bit
# 
# Top level modules:
# 	subtractor_64bit
# End time: 00:46:27 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:46:27 on May 20,2025
# vlog -reportprogress 300 ./utils/immediate_extenders.sv 
# -- Compiling module buf1
# -- Compiling module zero_extender_itype
# -- Compiling module sign_extender_dtype
# -- Compiling module sign_extender_btype
# -- Compiling module sign_extender_cbtype
# 
# Top level modules:
# 	zero_extender_itype
# 	sign_extender_dtype
# 	sign_extender_btype
# 	sign_extender_cbtype
# End time: 00:46:27 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:46:27 on May 20,2025
# vlog -reportprogress 300 ./utils/left_shifter.sv 
# -- Compiling module left_shifter_2bits
# 
# Top level modules:
# 	left_shifter_2bits
# End time: 00:46:27 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:46:27 on May 20,2025
# vlog -reportprogress 300 ./utils/zero_64bits.sv 
# -- Compiling module zero_64bits
# 
# Top level modules:
# 	zero_64bits
# End time: 00:46:27 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:46:27 on May 20,2025
# vlog -reportprogress 300 ./alu.sv 
# -- Compiling module alu
# 
# Top level modules:
# 	alu
# End time: 00:46:27 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:46:27 on May 20,2025
# vlog -reportprogress 300 ./alustim.sv 
# -- Compiling module alustim
# 
# Top level modules:
# 	alustim
# End time: 00:46:27 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:46:27 on May 20,2025
# vlog -reportprogress 300 ./datamem.sv 
# -- Compiling module datamem
# -- Compiling module datamem_testbench
# 
# Top level modules:
# 	datamem_testbench
# End time: 00:46:27 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:46:27 on May 20,2025
# vlog -reportprogress 300 ./instructmem.sv 
# -- Compiling module instructmem
# -- Compiling module instructmem_testbench
# 
# Top level modules:
# 	instructmem_testbench
# End time: 00:46:27 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:46:27 on May 20,2025
# vlog -reportprogress 300 ./program_counter.sv 
# -- Compiling module program_counter
# -- Compiling module tb_program_counter
# 
# Top level modules:
# 	tb_program_counter
# End time: 00:46:27 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:46:27 on May 20,2025
# vlog -reportprogress 300 ./control_unit.sv 
# -- Compiling module control_unit
# 
# Top level modules:
# 	control_unit
# End time: 00:46:27 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 00:46:27 on May 20,2025
# vlog -reportprogress 300 ./cpu.sv 
# -- Compiling module cpu
# -- Compiling module cpustim
# 
# Top level modules:
# 	cpustim
# End time: 00:46:27 on May 20,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 00:46:32 on May 20,2025, Elapsed time: 0:15:02
# Errors: 0, Warnings: 1
# vsim -voptargs=""+acc"" -t 1ps -lib work cpustim 
# Start time: 00:46:32 on May 20,2025
# Loading sv_std.std
# Loading work.cpustim
# Loading work.cpu
# Loading work.program_counter
# Loading work.adder_64bit
# Loading work.adder
# Loading work.mux4_1_64bit
# Loading work.instructmem
# Loading work.sign_extender_btype
# Loading work.sign_extender_cbtype
# Loading work.left_shifter_2bits
# Loading work.control_unit
# Loading work.mux2_1_5bit
# Loading work.regfile
# Loading work.decoder_5to32
# Loading work.and_64bit
# Loading work.mux32_1_64bit
# Loading work.zero_64bits
# Loading work.zero_extender_itype
# Loading work.sign_extender_dtype
# Loading work.mux2_1_64bit
# Loading work.alu
# Loading work.decoder_3to8
# Loading work.subtractor_64bit
# Loading work.not_64bit
# Loading work.or_64bit
# Loading work.xor_64bit
# Loading work.datamem
# Loading work.mux4_1
# Loading work.mux2_1
# Loading work.D_FF
# Loading work.buf1
# Loading work.mux32_1
# Loading work.mux16_1
# Loading work.mux8_1
# Loading work.register_64bit
# ** Warning: Design size of 9097 instances exceeds ModelSim - Intel FPGA Starter Edition recommended capacity.
# This may because you are loading cell libraries which are not recommended with
# the ModelSim - Intel FPGA Edition. Expect performance to be adversely affected.
# .main_pane.wave.interior.cs.body.pw.wf
# .main_pane.structure.interior.cs.body.struct
# .main_pane.objects.interior.cs.body.tree
# Running benchmark: ./benchmarks/test02_AddsSubs.arm
# [INSTR FETCH @ 15.00 ns] PC = x, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 15.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 45.00 ns] PC = 0, Instruction = 10010001000000000000011111100000
#   -> PC+4 sequential
# [ALU DEBUG @ 45.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000001
# [INSTR FETCH @ 75.00 ns] PC = 0, Instruction = 10010001000000000000011111100000
#   -> PC+4 sequential
# [ALU DEBUG @ 75.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000001
# [INSTR FETCH @ 105.00 ns] PC = 0, Instruction = 10010001000000000000011111100000
#   -> PC+4 sequential
# [ALU DEBUG @ 105.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000001
# [INSTR FETCH @ 135.00 ns] PC = 0, Instruction = 10010001000000000000011111100000
#   -> PC+4 sequential
# [ALU DEBUG @ 135.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000001
# [INSTR FETCH @ 165.00 ns] PC = 4, Instruction = 11101011000000000000001111100001
#   -> PC+4 sequential
# [ALU DEBUG @ 165.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000001, cntrl = 011, result = 1111111111111111111111111111111111111111111111111111111111111111
# [INSTR FETCH @ 195.00 ns] PC = 8, Instruction = 11101011000000010000000000000010
#   -> PC+4 sequential
# [ALU DEBUG @ 195.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 1111111111111111111111111111111111111111111111111111111111111111, cntrl = 011, result = 0000000000000000000000000000000000000000000000000000000000000010
# [INSTR FETCH @ 225.00 ns] PC = 12, Instruction = 11101011000000100000000000100011
#   -> PC+4 sequential
# [ALU DEBUG @ 225.00 ns] A = 1111111111111111111111111111111111111111111111111111111111111111, B = 0000000000000000000000000000000000000000000000000000000000000010, cntrl = 011, result = 1111111111111111111111111111111111111111111111111111111111111101
# [INSTR FETCH @ 255.00 ns] PC = 16, Instruction = 11101011000000010000000001100100
#   -> PC+4 sequential
# [ALU DEBUG @ 255.00 ns] A = 1111111111111111111111111111111111111111111111111111111111111101, B = 1111111111111111111111111111111111111111111111111111111111111111, cntrl = 011, result = 1111111111111111111111111111111111111111111111111111111111111110
# [INSTR FETCH @ 285.00 ns] PC = 20, Instruction = 10101011000001000000000001100101
#   -> PC+4 sequential
# [ALU DEBUG @ 285.00 ns] A = 1111111111111111111111111111111111111111111111111111111111111101, B = 1111111111111111111111111111111111111111111111111111111111111110, cntrl = 010, result = 1111111111111111111111111111111111111111111111111111111111111011
# [INSTR FETCH @ 315.00 ns] PC = 24, Instruction = 10101011000000010000000000000110
#   -> PC+4 sequential
# [ALU DEBUG @ 315.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 1111111111111111111111111111111111111111111111111111111111111111, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000000
# [INSTR FETCH @ 345.00 ns] PC = 28, Instruction = 10101011000001010000000000100111
#   -> PC+4 sequential
# [ALU DEBUG @ 345.00 ns] A = 1111111111111111111111111111111111111111111111111111111111111111, B = 1111111111111111111111111111111111111111111111111111111111111011, cntrl = 010, result = 1111111111111111111111111111111111111111111111111111111111111010
# [INSTR FETCH @ 375.00 ns] PC = 32, Instruction = 10010001000000000000001111111111
#   -> PC+4 sequential
# [ALU DEBUG @ 375.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000000
# [INSTR FETCH @ 405.00 ns] PC = 36, Instruction = 00010100000000000000000000000000
#   -> PC+4 sequential
# [ALU DEBUG @ 405.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000001, B = 0000000000000000000000000000000000000000000000000000000000000001, cntrl = 000, result = 0000000000000000000000000000000000000000000000000000000000000001
# [INSTR FETCH @ 435.00 ns] PC = 40, Instruction = 10010001000000000000001111111111
#   -> PC+4 sequential
# [ALU DEBUG @ 435.00 ns] A = 0000000000000000000000000000000000000000000000000000000000000000, B = 0000000000000000000000000000000000000000000000000000000000000000, cntrl = 010, result = 0000000000000000000000000000000000000000000000000000000000000000
# [INSTR FETCH @ 465.00 ns] PC = 44, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 465.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 495.00 ns] PC = 48, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 495.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 525.00 ns] PC = 52, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 525.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 555.00 ns] PC = 56, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 555.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# [INSTR FETCH @ 585.00 ns] PC = 60, Instruction = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#   -> PC+4 sequential
# [ALU DEBUG @ 585.00 ns] A = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, cntrl = 000, result = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# Finished 20 cycles at 0.60 ns ns
# ** Note: $stop    : ./cpu.sv(206)
#    Time: 600 ns  Iteration: 0  Instance: /cpustim
# Break in Module cpustim at ./cpu.sv line 206
